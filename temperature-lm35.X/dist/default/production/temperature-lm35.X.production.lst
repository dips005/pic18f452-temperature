

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Mar 14 20:49:11 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           ; Version 2.05
    41                           ; Generated 20/12/2018 GMT
    42                           ; 
    43                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F452 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	smallconst
    76  000600                     __psmallconst:
    77                           	opt callstack 0
    78  000600  00                 	db	0
    79  000601                     _dp_l:
    80                           	opt callstack 0
    81  000601  0000               	dw	0
    82  000603  0000               	dw	0
    83  000605  CFDC               	dw	53212
    84  000607  35D1               	dw	13777
    85  000609                     __end_of_dp_l:
    86                           	opt callstack 0
    87  000609                     _dp_h:
    88                           	opt callstack 0
    89  000609  0000               	dw	0
    90  00060B  0000               	dw	0
    91  00060D  C000               	dw	49152
    92  00060F  3F15               	dw	16149
    93  000611                     __end_of_dp_h:
    94                           	opt callstack 0
    95  000611  4260               	dw	16992
    96  000613  0DA2               	dw	3490
    97  000615                     __end_ofsqrtf@tiny:
    98                           	opt callstack 0
    99  000615  A570               	dw	42352
   100  000617  36EC               	dw	14060
   101  000619                     __end_of_ivln2_l:
   102                           	opt callstack 0
   103  000619  AA3B               	dw	43579
   104  00061B  3FB8               	dw	16312
   105  00061D                     __end_of_ivln2:
   106                           	opt callstack 0
   107  00061D  384F               	dw	14415
   108  00061F  3F76               	dw	16246
   109  000621                     __end_of_cp:
   110                           	opt callstack 0
   111  000621  AA3C               	dw	43580
   112  000623  3338               	dw	13112
   113  000625                     __end_of_ovt:
   114                           	opt callstack 0
   115  000625  BE8C               	dw	48780
   116  000627  35BF               	dw	13759
   117  000629                     __end_of_lg2_l:
   118                           	opt callstack 0
   119  000629  7200               	dw	29184
   120  00062B  3F31               	dw	16177
   121  00062D                     __end_of_lg2_h:
   122                           	opt callstack 0
   123  00062D  7218               	dw	29208
   124  00062F  3F31               	dw	16177
   125  000631                     __end_of_lg2:
   126                           	opt callstack 0
   127  000631  BB4C               	dw	47948
   128  000633  3331               	dw	13105
   129  000635                     __end_of_P5:
   130                           	opt callstack 0
   131  000635  EA0E               	dw	59918
   132  000637  B5DD               	dw	46557
   133  000639                     __end_of_P4:
   134                           	opt callstack 0
   135  000639  B355               	dw	45909
   136  00063B  388A               	dw	14474
   137  00063D                     __end_of_P3:
   138                           	opt callstack 0
   139  00063D  0B61               	dw	2913
   140  00063F  BB36               	dw	47926
   141  000641                     __end_of_P2:
   142                           	opt callstack 0
   143  000641  AAAB               	dw	43691
   144  000643  3E2A               	dw	15914
   145  000645                     __end_of_P1:
   146                           	opt callstack 0
   147  000645  F142               	dw	61762
   148  000647  3E53               	dw	15955
   149  000649                     __end_of_L6:
   150                           	opt callstack 0
   151  000649  3255               	dw	12885
   152  00064B  3E6C               	dw	15980
   153  00064D                     __end_of_L5:
   154                           	opt callstack 0
   155  00064D  A305               	dw	41733
   156  00064F  3E8B               	dw	16011
   157  000651                     __end_of_L4:
   158                           	opt callstack 0
   159  000651  AAAB               	dw	43691
   160  000653  3EAA               	dw	16042
   161  000655                     __end_of_L3:
   162                           	opt callstack 0
   163  000655  6DB7               	dw	28087
   164  000657  3EDB               	dw	16091
   165  000659                     __end_of_L2:
   166                           	opt callstack 0
   167  000659  999A               	dw	39322
   168  00065B  3F19               	dw	16153
   169  00065D                     __end_of_L1:
   170                           	opt callstack 0
   171  00065D  4260               	dw	16992
   172  00065F  0DA2               	dw	3490
   173  000661                     __end_of_tiny:
   174                           	opt callstack 0
   175  000661  F2CA               	dw	62154
   176  000663  7149               	dw	29001
   177  000665                     __end_of_huge:
   178                           	opt callstack 0
   179  000665  0000               	dw	0
   180  000667  4B80               	dw	19328
   181  000669                     __end_of_two24:
   182                           	opt callstack 0
   183  000669                     _bp:
   184                           	opt callstack 0
   185  000669  0000               	dw	0
   186  00066B  3F80               	dw	16256
   187  00066D  0000               	dw	0
   188  00066F  3FC0               	dw	16320
   189  000671                     __end_of_bp:
   190                           	opt callstack 0
   191  000671  AA00               	dw	43520
   192  000673  3FB8               	dw	16312
   193  000675                     __end_of_ivln2_h:
   194                           	opt callstack 0
   195  000675  23C6               	dw	9158
   196  000677  B8F6               	dw	47350
   197  000679                     __end_of_cp_l:
   198                           	opt callstack 0
   199  000679  4000               	dw	16384
   200  00067B  3F76               	dw	16246
   201  00067D                     __end_of_cp_h:
   202                           	opt callstack 0
   203  0000                     _ADRESL	set	4035
   204  0000                     _ADRESH	set	4036
   205  0000                     _ADCON0	set	4034
   206  0000                     _ADCON1	set	4033
   207  0000                     _TRISE	set	3990
   208  0000                     _TRISA	set	3986
   209  0000                     _TXREG	set	4013
   210  0000                     _SPBRG	set	4015
   211  0000                     _TXSTA	set	4012
   212  0000                     _TRISC	set	3988
   213  0000                     _RCSTA	set	4011
   214  00067D                     STR_1:
   215  00067D  41                 	db	65	;'A'
   216  00067E  44                 	db	68	;'D'
   217  00067F  43                 	db	67	;'C'
   218  000680  20                 	db	32
   219  000681  56                 	db	86	;'V'
   220  000682  41                 	db	65	;'A'
   221  000683  4C                 	db	76	;'L'
   222  000684  3D                 	db	61	;'='
   223  000685  00                 	db	0
   224  000686                     STR_2:
   225  000686  54                 	db	84	;'T'
   226  000687  45                 	db	69	;'E'
   227  000688  4D                 	db	77	;'M'
   228  000689  50                 	db	80	;'P'
   229  00068A  3D                 	db	61	;'='
   230  00068B  00                 	db	0
   231  0000                     
   232                           ; #config settings
   233  00068C  00                 	db	0	; dummy byte at the end
   234  0000                     
   235                           	psect	cinit
   236  007F86                     __pcinit:
   237                           	opt callstack 0
   238  007F86                     start_initialization:
   239                           	opt callstack 0
   240  007F86                     __initialization:
   241                           	opt callstack 0
   242                           
   243                           ; Clear objects allocated to BANK0 (6 bytes)
   244  007F86  0100               	movlb	0
   245  007F88  6BC7               	clrf	(__pbssBANK0+5)& (0+255),b
   246  007F8A  6BC6               	clrf	(__pbssBANK0+4)& (0+255),b
   247  007F8C  6BC5               	clrf	(__pbssBANK0+3)& (0+255),b
   248  007F8E  6BC4               	clrf	(__pbssBANK0+2)& (0+255),b
   249  007F90  6BC3               	clrf	(__pbssBANK0+1)& (0+255),b
   250  007F92  6BC2               	clrf	__pbssBANK0& (0+255),b
   251  007F94                     end_of_initialization:
   252                           	opt callstack 0
   253  007F94                     __end_of__initialization:
   254                           	opt callstack 0
   255  007F94  907E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   256  007F96  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   257  007F98  0E00               	movlw	low (__Lsmallconst shr (0+16))
   258  007F9A  6EF8               	movwf	tblptru,c
   259  007F9C  0E06               	movlw	high __Lsmallconst
   260  007F9E  6EF7               	movwf	tblptrh,c
   261  007FA0  0100               	movlb	0
   262  007FA2  EFC5  F000         	goto	_main	;jump to C main() function
   263                           
   264                           	psect	bssBANK0
   265  0000C2                     __pbssBANK0:
   266                           	opt callstack 0
   267  0000C2                     fabsf@F463:
   268                           	opt callstack 0
   269  0000C2                     	ds	4
   270  0000C6                     _errno:
   271                           	opt callstack 0
   272  0000C6                     	ds	2
   273                           
   274                           	psect	cstackBANK1
   275  000100                     __pcstackBANK1:
   276                           	opt callstack 0
   277  000100                     _powf$878:
   278                           	opt callstack 0
   279                           
   280                           ; 4 bytes @ 0x0
   281  000100                     	ds	4
   282  000104                     _powf$879:
   283                           	opt callstack 0
   284                           
   285                           ; 4 bytes @ 0x4
   286  000104                     	ds	4
   287  000108                     _powf$883:
   288                           	opt callstack 0
   289                           
   290                           ; 4 bytes @ 0x8
   291  000108                     	ds	4
   292  00010C                     _powf$884:
   293                           	opt callstack 0
   294                           
   295                           ; 4 bytes @ 0xC
   296  00010C                     	ds	4
   297  000110                     _powf$885:
   298                           	opt callstack 0
   299                           
   300                           ; 4 bytes @ 0x10
   301  000110                     	ds	4
   302  000114                     _powf$886:
   303                           	opt callstack 0
   304                           
   305                           ; 4 bytes @ 0x14
   306  000114                     	ds	4
   307  000118                     _powf$887:
   308                           	opt callstack 0
   309                           
   310                           ; 4 bytes @ 0x18
   311  000118                     	ds	4
   312  00011C                     powf@t2:
   313                           	opt callstack 0
   314                           
   315                           ; 4 bytes @ 0x1C
   316  00011C                     	ds	4
   317  000120                     powf@z_h:
   318                           	opt callstack 0
   319                           
   320                           ; 4 bytes @ 0x20
   321  000120                     	ds	4
   322  000124                     powf@z_l:
   323                           	opt callstack 0
   324                           
   325                           ; 4 bytes @ 0x24
   326  000124                     	ds	4
   327  000128                     powf@y1:
   328                           	opt callstack 0
   329                           
   330                           ; 4 bytes @ 0x28
   331  000128                     	ds	4
   332  00012C                     powf@i:
   333                           	opt callstack 0
   334                           
   335                           ; 4 bytes @ 0x2C
   336  00012C                     	ds	4
   337  000130                     powf@s_l:
   338                           	opt callstack 0
   339                           
   340                           ; 4 bytes @ 0x30
   341  000130                     	ds	4
   342  000134                     powf@t_l:
   343                           	opt callstack 0
   344                           
   345                           ; 4 bytes @ 0x34
   346  000134                     	ds	4
   347  000138                     _powf$877:
   348                           	opt callstack 0
   349                           
   350                           ; 4 bytes @ 0x38
   351  000138                     	ds	4
   352  00013C                     _powf$881:
   353                           	opt callstack 0
   354                           
   355                           ; 4 bytes @ 0x3C
   356  00013C                     	ds	4
   357  000140                     _powf$882:
   358                           	opt callstack 0
   359                           
   360                           ; 4 bytes @ 0x40
   361  000140                     	ds	4
   362  000144                     powf@w:
   363                           	opt callstack 0
   364                           
   365                           ; 4 bytes @ 0x44
   366  000144                     	ds	4
   367  000148                     _powf$875:
   368                           	opt callstack 0
   369                           
   370                           ; 4 bytes @ 0x48
   371  000148                     	ds	4
   372  00014C                     powf@r:
   373                           	opt callstack 0
   374                           
   375                           ; 4 bytes @ 0x4C
   376  00014C                     	ds	4
   377  000150                     powf@yisint:
   378                           	opt callstack 0
   379                           
   380                           ; 4 bytes @ 0x50
   381  000150                     	ds	4
   382  000154                     _powf$874:
   383                           	opt callstack 0
   384                           
   385                           ; 4 bytes @ 0x54
   386  000154                     	ds	4
   387  000158                     _powf$880:
   388                           	opt callstack 0
   389                           
   390                           ; 4 bytes @ 0x58
   391  000158                     	ds	4
   392  00015C                     powf@s:
   393                           	opt callstack 0
   394                           
   395                           ; 4 bytes @ 0x5C
   396  00015C                     	ds	4
   397  000160                     powf@hx:
   398                           	opt callstack 0
   399                           
   400                           ; 4 bytes @ 0x60
   401  000160                     	ds	4
   402  000164                     powf@p_l:
   403                           	opt callstack 0
   404                           
   405                           ; 4 bytes @ 0x64
   406  000164                     	ds	4
   407  000168                     powf@t_h:
   408                           	opt callstack 0
   409                           
   410                           ; 4 bytes @ 0x68
   411  000168                     	ds	4
   412  00016C                     powf@s_h:
   413                           	opt callstack 0
   414                           
   415                           ; 4 bytes @ 0x6C
   416  00016C                     	ds	4
   417  000170                     powf@ax:
   418                           	opt callstack 0
   419                           
   420                           ; 4 bytes @ 0x70
   421  000170                     	ds	4
   422  000174                     powf@u:
   423                           	opt callstack 0
   424                           
   425                           ; 4 bytes @ 0x74
   426  000174                     	ds	4
   427  000178                     powf@v:
   428                           	opt callstack 0
   429                           
   430                           ; 4 bytes @ 0x78
   431  000178                     	ds	4
   432  00017C                     powf@n:
   433                           	opt callstack 0
   434                           
   435                           ; 4 bytes @ 0x7C
   436  00017C                     	ds	4
   437  000180                     powf@t1:
   438                           	opt callstack 0
   439                           
   440                           ; 4 bytes @ 0x80
   441  000180                     	ds	4
   442  000184                     powf@hy:
   443                           	opt callstack 0
   444                           
   445                           ; 4 bytes @ 0x84
   446  000184                     	ds	4
   447  000188                     powf@sn:
   448                           	opt callstack 0
   449                           
   450                           ; 4 bytes @ 0x88
   451  000188                     	ds	4
   452  00018C                     powf@s2:
   453                           	opt callstack 0
   454                           
   455                           ; 4 bytes @ 0x8C
   456  00018C                     	ds	4
   457  000190                     powf@is:
   458                           	opt callstack 0
   459                           
   460                           ; 4 bytes @ 0x90
   461  000190                     	ds	4
   462  000194                     _powf$876:
   463                           	opt callstack 0
   464                           
   465                           ; 4 bytes @ 0x94
   466  000194                     	ds	4
   467  000198                     powf@iy:
   468                           	opt callstack 0
   469                           
   470                           ; 4 bytes @ 0x98
   471  000198                     	ds	4
   472  00019C                     powf@p_h:
   473                           	opt callstack 0
   474                           
   475                           ; 4 bytes @ 0x9C
   476  00019C                     	ds	4
   477  0001A0                     powf@k:
   478                           	opt callstack 0
   479                           
   480                           ; 4 bytes @ 0xA0
   481  0001A0                     	ds	4
   482  0001A4                     _powf$873:
   483                           	opt callstack 0
   484                           
   485                           ; 4 bytes @ 0xA4
   486  0001A4                     	ds	4
   487  0001A8                     powf@ix:
   488                           	opt callstack 0
   489                           
   490                           ; 4 bytes @ 0xA8
   491  0001A8                     	ds	4
   492  0001AC                     powf@j:
   493                           	opt callstack 0
   494                           
   495                           ; 4 bytes @ 0xAC
   496  0001AC                     	ds	4
   497  0001B0                     powf@t:
   498                           	opt callstack 0
   499                           
   500                           ; 4 bytes @ 0xB0
   501  0001B0                     	ds	4
   502  0001B4                     powf@z:
   503                           	opt callstack 0
   504                           
   505                           ; 4 bytes @ 0xB4
   506  0001B4                     	ds	4
   507  0001B8                     powf@__xc8_float_word:
   508                           	opt callstack 0
   509                           
   510                           ; 4 bytes @ 0xB8
   511  0001B8                     	ds	4
   512                           
   513                           	psect	cstackBANK0
   514  000080                     __pcstackBANK0:
   515                           	opt callstack 0
   516  000080                     	ds	4
   517  000084                     sqrtf@s:
   518                           	opt callstack 0
   519                           
   520                           ; 4 bytes @ 0x4
   521  000084                     	ds	4
   522  000088                     sqrtf@i:
   523                           	opt callstack 0
   524                           
   525                           ; 4 bytes @ 0x8
   526  000088                     	ds	4
   527  00008C                     sqrtf@__xc8_float_word:
   528                           	opt callstack 0
   529                           
   530                           ; 4 bytes @ 0xC
   531  00008C                     	ds	4
   532  000090                     sqrtf@q:
   533                           	opt callstack 0
   534                           
   535                           ; 4 bytes @ 0x10
   536  000090                     	ds	4
   537  000094                     sqrtf@t:
   538                           	opt callstack 0
   539                           
   540                           ; 4 bytes @ 0x14
   541  000094                     	ds	4
   542  000098                     sqrtf@z:
   543                           	opt callstack 0
   544                           
   545                           ; 4 bytes @ 0x18
   546  000098                     	ds	4
   547  00009C                     sqrtf@m:
   548                           	opt callstack 0
   549                           
   550                           ; 4 bytes @ 0x1C
   551  00009C                     	ds	4
   552  0000A0                     sqrtf@r:
   553                           	opt callstack 0
   554                           
   555                           ; 4 bytes @ 0x20
   556  0000A0                     	ds	4
   557  0000A4                     sqrtf@ix:
   558                           	opt callstack 0
   559                           
   560                           ; 4 bytes @ 0x24
   561  0000A4                     	ds	4
   562  0000A8                     UART_SendIntToString@data:
   563                           	opt callstack 0
   564                           
   565                           ; 2 bytes @ 0x28
   566  0000A8                     	ds	2
   567  0000AA                     UART_SendIntToString@numberOfDigits:
   568                           	opt callstack 0
   569                           
   570                           ; 1 bytes @ 0x2A
   571  0000AA                     	ds	1
   572  0000AB                     _UART_SendIntToString$869:
   573                           	opt callstack 0
   574                           
   575                           ; 4 bytes @ 0x2B
   576  0000AB                     	ds	4
   577  0000AF                     UART_SendIntToString@data1:
   578                           	opt callstack 0
   579                           
   580                           ; 2 bytes @ 0x2F
   581  0000AF                     	ds	2
   582  0000B1                     _UART_SendIntToString$868:
   583                           	opt callstack 0
   584                           
   585                           ; 4 bytes @ 0x31
   586  0000B1                     	ds	4
   587  0000B5                     UART_SendIntToString@h_val:
   588                           	opt callstack 0
   589                           
   590                           ; 1 bytes @ 0x35
   591  0000B5                     	ds	1
   592  0000B6                     _UART_SendIntToString$867:
   593                           	opt callstack 0
   594                           
   595                           ; 4 bytes @ 0x36
   596  0000B6                     	ds	4
   597  0000BA                     UART_SendIntToString@cnt:
   598                           	opt callstack 0
   599                           
   600                           ; 1 bytes @ 0x3A
   601  0000BA                     	ds	1
   602  0000BB                     UART_SendIntToString@i:
   603                           	opt callstack 0
   604                           
   605                           ; 1 bytes @ 0x3B
   606  0000BB                     	ds	3
   607  0000BE                     main@val1:
   608                           	opt callstack 0
   609                           
   610                           ; 2 bytes @ 0x3E
   611  0000BE                     	ds	2
   612  0000C0                     main@val:
   613                           	opt callstack 0
   614                           
   615                           ; 2 bytes @ 0x40
   616  0000C0                     	ds	2
   617                           
   618                           	psect	cstackCOMRAM
   619  000001                     __pcstackCOMRAM:
   620                           	opt callstack 0
   621  000001                     ??_my_low_priority_isr_routine:
   622  000001                     
   623                           ; 2 bytes @ 0x0
   624  000001                     	ds	1
   625  000002                     ?_ADC_Read:
   626                           	opt callstack 0
   627  000002                     ?___wmul:
   628                           	opt callstack 0
   629  000002                     ?___fladd:
   630                           	opt callstack 0
   631  000002                     ?_fabsf:
   632                           	opt callstack 0
   633  000002                     ?_nanf:
   634                           	opt callstack 0
   635  000002                     ?___lldiv:
   636                           	opt callstack 0
   637  000002                     ?___flneg:
   638                           	opt callstack 0
   639  000002                     ?___xxtofl:
   640                           	opt callstack 0
   641  000002                     UART_SendChar@data:
   642                           	opt callstack 0
   643  000002                     UART_SendString@str:
   644                           	opt callstack 0
   645  000002                     ___wmul@multiplier:
   646                           	opt callstack 0
   647  000002                     nanf@s:
   648                           	opt callstack 0
   649  000002                     ___lldiv@dividend:
   650                           	opt callstack 0
   651  000002                     ___flneg@f1:
   652                           	opt callstack 0
   653  000002                     ___fladd@b:
   654                           	opt callstack 0
   655  000002                     ___xxtofl@val:
   656                           	opt callstack 0
   657  000002                     fabsf@x:
   658                           	opt callstack 0
   659                           
   660                           ; 4 bytes @ 0x1
   661  000002                     	ds	2
   662  000004                     ??_ADC_Read:
   663  000004                     ___wmul@multiplicand:
   664                           	opt callstack 0
   665                           
   666                           ; 2 bytes @ 0x3
   667  000004                     	ds	2
   668  000006                     ??___xxtofl:
   669  000006                     ___wmul@product:
   670                           	opt callstack 0
   671  000006                     ___lldiv@divisor:
   672                           	opt callstack 0
   673  000006                     ___fladd@a:
   674                           	opt callstack 0
   675  000006                     fabsf@u:
   676                           	opt callstack 0
   677  000006                     nanf@u:
   678                           	opt callstack 0
   679                           
   680                           ; 4 bytes @ 0x5
   681  000006                     	ds	1
   682  000007                     ADC_Read@retval:
   683                           	opt callstack 0
   684                           
   685                           ; 2 bytes @ 0x6
   686  000007                     	ds	2
   687  000009                     ADC_Read@channel:
   688                           	opt callstack 0
   689                           
   690                           ; 1 bytes @ 0x8
   691  000009                     	ds	1
   692  00000A                     ??___fladd:
   693  00000A                     ADC_Read@portval:
   694                           	opt callstack 0
   695  00000A                     ___xxtofl@sign:
   696                           	opt callstack 0
   697  00000A                     ___lldiv@quotient:
   698                           	opt callstack 0
   699                           
   700                           ; 4 bytes @ 0x9
   701  00000A                     	ds	1
   702  00000B                     ___xxtofl@exp:
   703                           	opt callstack 0
   704                           
   705                           ; 1 bytes @ 0xA
   706  00000B                     	ds	1
   707  00000C                     ___xxtofl@arg:
   708                           	opt callstack 0
   709                           
   710                           ; 4 bytes @ 0xB
   711  00000C                     	ds	2
   712  00000E                     ___lldiv@counter:
   713                           	opt callstack 0
   714  00000E                     ___fladd@signs:
   715                           	opt callstack 0
   716                           
   717                           ; 1 bytes @ 0xD
   718  00000E                     	ds	1
   719  00000F                     ___fladd@aexp:
   720                           	opt callstack 0
   721  00000F                     UART_Init@baudrate:
   722                           	opt callstack 0
   723                           
   724                           ; 2 bytes @ 0xE
   725  00000F                     	ds	1
   726  000010                     ___fladd@bexp:
   727                           	opt callstack 0
   728                           
   729                           ; 1 bytes @ 0xF
   730  000010                     	ds	1
   731  000011                     ??_UART_Init:
   732  000011                     ___fladd@grs:
   733                           	opt callstack 0
   734                           
   735                           ; 1 bytes @ 0x10
   736  000011                     	ds	1
   737  000012                     ?___flmul:
   738                           	opt callstack 0
   739  000012                     ___flmul@b:
   740                           	opt callstack 0
   741                           
   742                           ; 4 bytes @ 0x11
   743  000012                     	ds	4
   744  000016                     ___flmul@a:
   745                           	opt callstack 0
   746                           
   747                           ; 4 bytes @ 0x15
   748  000016                     	ds	4
   749  00001A                     ??___flmul:
   750                           
   751                           ; 1 bytes @ 0x19
   752  00001A                     	ds	4
   753  00001E                     ___flmul@sign:
   754                           	opt callstack 0
   755                           
   756                           ; 1 bytes @ 0x1D
   757  00001E                     	ds	1
   758  00001F                     ___flmul@grs:
   759                           	opt callstack 0
   760                           
   761                           ; 4 bytes @ 0x1E
   762  00001F                     	ds	4
   763  000023                     ___flmul@aexp:
   764                           	opt callstack 0
   765                           
   766                           ; 1 bytes @ 0x22
   767  000023                     	ds	1
   768  000024                     ___flmul@bexp:
   769                           	opt callstack 0
   770                           
   771                           ; 1 bytes @ 0x23
   772  000024                     	ds	1
   773  000025                     ___flmul@prod:
   774                           	opt callstack 0
   775                           
   776                           ; 4 bytes @ 0x24
   777  000025                     	ds	4
   778  000029                     ___flmul@temp:
   779                           	opt callstack 0
   780                           
   781                           ; 2 bytes @ 0x28
   782  000029                     	ds	2
   783  00002B                     ?___flsub:
   784                           	opt callstack 0
   785  00002B                     ?_scalbnf:
   786                           	opt callstack 0
   787  00002B                     ___flsub@b:
   788                           	opt callstack 0
   789  00002B                     scalbnf@x:
   790                           	opt callstack 0
   791                           
   792                           ; 4 bytes @ 0x2A
   793  00002B                     	ds	4
   794  00002F                     scalbnf@n:
   795                           	opt callstack 0
   796  00002F                     ___flsub@a:
   797                           	opt callstack 0
   798                           
   799                           ; 4 bytes @ 0x2E
   800  00002F                     	ds	2
   801  000031                     ??_scalbnf:
   802                           
   803                           ; 1 bytes @ 0x30
   804  000031                     	ds	2
   805  000033                     ?___fldiv:
   806                           	opt callstack 0
   807  000033                     ___fldiv@b:
   808                           	opt callstack 0
   809                           
   810                           ; 4 bytes @ 0x32
   811  000033                     	ds	2
   812  000035                     scalbnf@u:
   813                           	opt callstack 0
   814                           
   815                           ; 4 bytes @ 0x34
   816  000035                     	ds	2
   817  000037                     ___fldiv@a:
   818                           	opt callstack 0
   819                           
   820                           ; 4 bytes @ 0x36
   821  000037                     	ds	2
   822  000039                     scalbnf@y:
   823                           	opt callstack 0
   824                           
   825                           ; 4 bytes @ 0x38
   826  000039                     	ds	2
   827  00003B                     ??___fldiv:
   828                           
   829                           ; 1 bytes @ 0x3A
   830  00003B                     	ds	4
   831  00003F                     ___fldiv@rem:
   832                           	opt callstack 0
   833                           
   834                           ; 4 bytes @ 0x3E
   835  00003F                     	ds	4
   836  000043                     ___fldiv@sign:
   837                           	opt callstack 0
   838                           
   839                           ; 1 bytes @ 0x42
   840  000043                     	ds	1
   841  000044                     ___fldiv@new_exp:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x43
   845  000044                     	ds	2
   846  000046                     ___fldiv@grs:
   847                           	opt callstack 0
   848                           
   849                           ; 4 bytes @ 0x45
   850  000046                     	ds	4
   851  00004A                     ___fldiv@bexp:
   852                           	opt callstack 0
   853                           
   854                           ; 1 bytes @ 0x49
   855  00004A                     	ds	1
   856  00004B                     ___fldiv@aexp:
   857                           	opt callstack 0
   858                           
   859                           ; 1 bytes @ 0x4A
   860  00004B                     	ds	1
   861  00004C                     ___flge@ff1:
   862                           	opt callstack 0
   863                           
   864                           ; 4 bytes @ 0x4B
   865  00004C                     	ds	4
   866  000050                     ___flge@ff2:
   867                           	opt callstack 0
   868                           
   869                           ; 4 bytes @ 0x4F
   870  000050                     	ds	4
   871  000054                     ??___flge:
   872                           
   873                           ; 1 bytes @ 0x53
   874  000054                     	ds	4
   875  000058                     ?_sqrtf:
   876                           	opt callstack 0
   877  000058                     sqrtf@x:
   878                           	opt callstack 0
   879                           
   880                           ; 4 bytes @ 0x57
   881  000058                     	ds	4
   882  00005C                     ??_sqrtf:
   883                           
   884                           ; 1 bytes @ 0x5B
   885  00005C                     	ds	5
   886  000061                     ?_powf:
   887                           	opt callstack 0
   888  000061                     powf@x:
   889                           	opt callstack 0
   890                           
   891                           ; 4 bytes @ 0x60
   892  000061                     	ds	4
   893  000065                     powf@y:
   894                           	opt callstack 0
   895                           
   896                           ; 4 bytes @ 0x64
   897  000065                     	ds	4
   898  000069                     ??_powf:
   899                           
   900                           ; 1 bytes @ 0x68
   901  000069                     	ds	9
   902  000072                     ?___fltol:
   903                           	opt callstack 0
   904  000072                     ___fltol@f1:
   905                           	opt callstack 0
   906                           
   907                           ; 4 bytes @ 0x71
   908  000072                     	ds	4
   909  000076                     ??___fltol:
   910                           
   911                           ; 1 bytes @ 0x75
   912  000076                     	ds	4
   913  00007A                     ___fltol@sign1:
   914                           	opt callstack 0
   915                           
   916                           ; 1 bytes @ 0x79
   917  00007A                     	ds	1
   918  00007B                     ___fltol@exp1:
   919                           	opt callstack 0
   920                           
   921                           ; 1 bytes @ 0x7A
   922  00007B                     	ds	1
   923  00007C                     ??_main:
   924                           
   925                           ; 1 bytes @ 0x7B
   926  00007C                     	ds	2
   927                           
   928 ;;
   929 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   930 ;;
   931 ;; *************** function _main *****************
   932 ;; Defined at:
   933 ;;		line 24 in file "newmain.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  val             2   64[BANK0 ] unsigned int 
   938 ;;  val1            2   62[BANK0 ] unsigned int 
   939 ;;  data            2    0        unsigned int 
   940 ;; Return value:  Size  Location     Type
   941 ;;                  2   85[None  ] int 
   942 ;; Registers used:
   943 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   949 ;;      Params:         0       0       0       0       0       0       0
   950 ;;      Locals:         0       6       0       0       0       0       0
   951 ;;      Temps:          2       0       0       0       0       0       0
   952 ;;      Totals:         2       6       0       0       0       0       0
   953 ;;Total ram usage:        8 bytes
   954 ;; Hardware stack levels required when called:    6
   955 ;; This function calls:
   956 ;;		_ADC_Init
   957 ;;		_ADC_Read
   958 ;;		_UART_Init
   959 ;;		_UART_SendChar
   960 ;;		_UART_SendIntToString
   961 ;;		_UART_SendString
   962 ;;		___flmul
   963 ;;		___fltol
   964 ;;		___xxtofl
   965 ;; This function is called by:
   966 ;;		Startup code after reset
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970                           	psect	text0
   971  00018A                     __ptext0:
   972                           	opt callstack 0
   973  00018A                     _main:
   974                           	opt callstack 0
   975  00018A  FFFF               	dw	65535	; assembler added errata NOP
   976                           
   977                           ;newmain.c: 25:     UART_Init(9600);
   978                           
   979                           ;incstack = 0
   980  00018C  0E25               	movlw	37
   981  00018E  6E10               	movwf	UART_Init@baudrate+1,c
   982  000190  0E80               	movlw	128
   983  000192  6E0F               	movwf	UART_Init@baudrate,c
   984  000194  EC5F  F002         	call	_UART_Init	;wreg free
   985                           
   986                           ;newmain.c: 26:     unsigned int val,val1;;newmain.c: 28:     ADC_Init();
   987  000198  ECB7  F03F         	call	_ADC_Init	;wreg free
   988                           
   989                           ;newmain.c: 29:     _delay((unsigned long)((500)*(8000000UL/4000.0)));
   990  00019C  0E04               	movlw	4
   991  00019E  6E7D               	movwf	(??_main+1)& (0+255),c
   992  0001A0  0ECF               	movlw	207
   993  0001A2  6E7C               	movwf	??_main& (0+255),c
   994  0001A4  0EA5               	movlw	165
   995  0001A6                     u3977:
   996  0001A6  FFFF               	dw	65535	; errata NOP
   997  0001A8  2EE8               	decfsz	wreg,f,c
   998  0001AA  D7FD               	bra	u3977
   999  0001AC  2E7C               	decfsz	??_main& (0+255),f,c
  1000  0001AE  D7FB               	bra	u3977
  1001  0001B0  2E7D               	decfsz	(??_main+1)& (0+255),f,c
  1002  0001B2  D7F9               	bra	u3977
  1003  0001B4  D000               	nop2	
  1004  0001B6  FFFF               	dw	65535	; assembler added errata NOP
  1005                           
  1006                           ;newmain.c: 33:     {;newmain.c: 35:         val=ADC_Read(0);
  1007  0001B8  0E00               	movlw	0
  1008  0001BA  EC8F  F002         	call	_ADC_Read
  1009  0001BE  C002  F0C0         	movff	?_ADC_Read,main@val
  1010  0001C2  C003  F0C1         	movff	?_ADC_Read+1,main@val+1
  1011                           
  1012                           ;newmain.c: 36:         val1 = ((float)val*((float)500/(float)1023));
  1013  0001C6  0E90               	movlw	144
  1014  0001C8  6E16               	movwf	___flmul@a,c
  1015  0001CA  0E3E               	movlw	62
  1016  0001CC  6E17               	movwf	___flmul@a+1,c
  1017  0001CE  0EFA               	movlw	250
  1018  0001D0  6E18               	movwf	___flmul@a+2,c
  1019  0001D2  0E3E               	movlw	62
  1020  0001D4  6E19               	movwf	___flmul@a+3,c
  1021  0001D6  C0C0  F002         	movff	main@val,___xxtofl@val
  1022  0001DA  C0C1  F003         	movff	main@val+1,___xxtofl@val+1
  1023  0001DE  6A04               	clrf	___xxtofl@val+2,c
  1024  0001E0  6A05               	clrf	___xxtofl@val+3,c
  1025  0001E2  0E00               	movlw	0
  1026  0001E4  EC17  F000         	call	___xxtofl
  1027  0001E8  C002  F012         	movff	?___xxtofl,___flmul@b
  1028  0001EC  C003  F013         	movff	?___xxtofl+1,___flmul@b+1
  1029  0001F0  C004  F014         	movff	?___xxtofl+2,___flmul@b+2
  1030  0001F4  C005  F015         	movff	?___xxtofl+3,___flmul@b+3
  1031  0001F8  ECB9  F018         	call	___flmul	;wreg free
  1032  0001FC  C012  F072         	movff	?___flmul,___fltol@f1
  1033  000200  C013  F073         	movff	?___flmul+1,___fltol@f1+1
  1034  000204  C014  F074         	movff	?___flmul+2,___fltol@f1+2
  1035  000208  C015  F075         	movff	?___flmul+3,___fltol@f1+3
  1036  00020C  ECAD  F001         	call	___fltol	;wreg free
  1037  000210  C072  F0BE         	movff	?___fltol,main@val1
  1038  000214  C073  F0BF         	movff	?___fltol+1,main@val1+1
  1039                           
  1040                           ;newmain.c: 37:         UART_SendString("ADC VAL=");
  1041  000218  0E7D               	movlw	low STR_1
  1042  00021A  6E02               	movwf	UART_SendString@str,c
  1043  00021C  0E06               	movlw	high STR_1
  1044  00021E  6E03               	movwf	UART_SendString@str+1,c
  1045  000220  ECB1  F002         	call	_UART_SendString	;wreg free
  1046                           
  1047                           ;newmain.c: 38:         UART_SendIntToString(val,4);
  1048  000224  C0C0  F0A8         	movff	main@val,UART_SendIntToString@data
  1049  000228  C0C1  F0A9         	movff	main@val+1,UART_SendIntToString@data+1
  1050  00022C  0E04               	movlw	4
  1051  00022E  0100               	movlb	0	; () banked
  1052  000230  6FAA               	movwf	UART_SendIntToString@numberOfDigits& (0+255),b
  1053  000232  EC1C  F01C         	call	_UART_SendIntToString	;wreg free
  1054                           
  1055                           ;newmain.c: 39:         UART_SendChar(0x0D);
  1056  000236  0E0D               	movlw	13
  1057  000238  ECAE  F03F         	call	_UART_SendChar
  1058                           
  1059                           ;newmain.c: 40:         UART_SendString("TEMP=");
  1060  00023C  0E86               	movlw	low STR_2
  1061  00023E  6E02               	movwf	UART_SendString@str,c
  1062  000240  0E06               	movlw	high STR_2
  1063  000242  6E03               	movwf	UART_SendString@str+1,c
  1064  000244  ECB1  F002         	call	_UART_SendString	;wreg free
  1065                           
  1066                           ;newmain.c: 41:         UART_SendIntToString(val1,4);
  1067  000248  C0BE  F0A8         	movff	main@val1,UART_SendIntToString@data
  1068  00024C  C0BF  F0A9         	movff	main@val1+1,UART_SendIntToString@data+1
  1069  000250  0E04               	movlw	4
  1070  000252  0100               	movlb	0	; () banked
  1071  000254  6FAA               	movwf	UART_SendIntToString@numberOfDigits& (0+255),b
  1072  000256  EC1C  F01C         	call	_UART_SendIntToString	;wreg free
  1073                           
  1074                           ;newmain.c: 43:         UART_SendChar(0x0D);
  1075  00025A  0E0D               	movlw	13
  1076  00025C  ECAE  F03F         	call	_UART_SendChar
  1077                           
  1078                           ;newmain.c: 44:         _delay((unsigned long)((1000)*(8000000UL/4000.0)));
  1079  000260  0E08               	movlw	8
  1080  000262  6E7D               	movwf	(??_main+1)& (0+255),c
  1081  000264  0E9E               	movlw	158
  1082  000266  6E7C               	movwf	??_main& (0+255),c
  1083  000268  0E4C               	movlw	76
  1084  00026A                     u3987:
  1085  00026A  FFFF               	dw	65535	; errata NOP
  1086  00026C  2EE8               	decfsz	wreg,f,c
  1087  00026E  D7FD               	bra	u3987
  1088  000270  2E7C               	decfsz	??_main& (0+255),f,c
  1089  000272  D7FB               	bra	u3987
  1090  000274  2E7D               	decfsz	(??_main+1)& (0+255),f,c
  1091  000276  D7F9               	bra	u3987
  1092  000278  D79E               	goto	l3748
  1093  00027A                     __end_of_main:
  1094                           	opt callstack 0
  1095                           
  1096 ;; *************** function _UART_SendString *****************
  1097 ;; Defined at:
  1098 ;;		line 41 in file "./uart.h"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;  str             2    1[COMRAM] PTR unsigned char 
  1101 ;;		 -> STR_2(6), STR_1(9), 
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;		None
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1113 ;;      Params:         2       0       0       0       0       0       0
  1114 ;;      Locals:         0       0       0       0       0       0       0
  1115 ;;      Temps:          0       0       0       0       0       0       0
  1116 ;;      Totals:         2       0       0       0       0       0       0
  1117 ;;Total ram usage:        2 bytes
  1118 ;; Hardware stack levels used:    1
  1119 ;; Hardware stack levels required when called:    2
  1120 ;; This function calls:
  1121 ;;		Nothing
  1122 ;; This function is called by:
  1123 ;;		_main
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	text1
  1128  000562                     __ptext1:
  1129                           	opt callstack 0
  1130  000562                     _UART_SendString:
  1131                           	opt callstack 0
  1132  000562  FFFF               	dw	65535	; assembler added errata NOP
  1133                           
  1134                           ;./uart.h: 41: void UART_SendString(char *str);./uart.h: 42: {;./uart.h: 43:     while(*
      +                          str!='\0')
  1135                           
  1136                           ;incstack = 0
  1137  000564  D00D               	goto	l3606
  1138  000566                     l40:
  1139  000566  FFFF               	dw	65535	; assembler added errata NOP
  1140                           
  1141                           ;./uart.h: 45:         while ((TXSTA & (1<<1)) ==0)
  1142  000568  A2AC               	btfss	4012,1,c	;volatile
  1143  00056A  D7FD               	goto	l40
  1144                           
  1145                           ;./uart.h: 49:         TXREG=*str;
  1146  00056C  C002  FFF6         	movff	UART_SendString@str,tblptrl
  1147  000570  C003  FFF7         	movff	UART_SendString@str+1,tblptrh
  1148  000574                     	if	0	;tblptru may be non-zero
  1149  000574                     	endif
  1150  000574                     	if	0	;tblptru may be non-zero
  1151  000574                     	endif
  1152  000574  0008               	tblrd		*
  1153  000576  FFFF               	dw	65535	; errata NOP
  1154  000578  CFF5 FFAD          	movff	tablat,4013	;volatile
  1155                           
  1156                           ;./uart.h: 51:     str++;
  1157  00057C  4A02               	infsnz	UART_SendString@str,f,c
  1158  00057E  2A03               	incf	UART_SendString@str+1,f,c
  1159  000580                     l3606:
  1160  000580  FFFF               	dw	65535	; assembler added errata NOP
  1161                           
  1162                           ;./uart.h: 43:     while(*str!='\0')
  1163  000582  C002  FFF6         	movff	UART_SendString@str,tblptrl
  1164  000586  C003  FFF7         	movff	UART_SendString@str+1,tblptrh
  1165  00058A                     	if	0	;tblptru may be non-zero
  1166  00058A                     	endif
  1167  00058A                     	if	0	;tblptru may be non-zero
  1168  00058A                     	endif
  1169  00058A  0008               	tblrd		*
  1170  00058C  FFFF               	dw	65535	; errata NOP
  1171  00058E  50F5               	movf	tablat,w,c
  1172  000590  0900               	iorlw	0
  1173  000592  B4D8               	btfsc	status,2,c
  1174  000594  0012               	return		;funcret
  1175  000596  FFFF               	dw	65535	; assembler added errata NOP
  1176  000598  D7E6               	goto	l40
  1177  00059A  FFFF               	dw	65535	; errata NOP
  1178  00059C                     __end_of_UART_SendString:
  1179                           	opt callstack 0
  1180                           
  1181 ;; *************** function _UART_SendIntToString *****************
  1182 ;; Defined at:
  1183 ;;		line 54 in file "./uart.h"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  data            2   40[BANK0 ] int 
  1186 ;;  numberOfDigi    1   42[BANK0 ] unsigned char 
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;  i               1   59[BANK0 ] unsigned char 
  1189 ;;  data1           2   47[BANK0 ] int 
  1190 ;;  cnt             1   58[BANK0 ] unsigned char 
  1191 ;;  h_val           1   53[BANK0 ] unsigned char 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  1    wreg      void 
  1194 ;; Registers used:
  1195 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1201 ;;      Params:         0       3       0       0       0       0       0
  1202 ;;      Locals:         0      17       0       0       0       0       0
  1203 ;;      Temps:          0       0       0       0       0       0       0
  1204 ;;      Totals:         0      20       0       0       0       0       0
  1205 ;;Total ram usage:       20 bytes
  1206 ;; Hardware stack levels used:    1
  1207 ;; Hardware stack levels required when called:    5
  1208 ;; This function calls:
  1209 ;;		_UART_SendChar
  1210 ;;		___fldiv
  1211 ;;		___flge
  1212 ;;		___flmul
  1213 ;;		___flsub
  1214 ;;		___fltol
  1215 ;;		___wmul
  1216 ;;		___xxtofl
  1217 ;;		_powf
  1218 ;; This function is called by:
  1219 ;;		_main
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           	psect	text2
  1224  003838                     __ptext2:
  1225                           	opt callstack 0
  1226  003838                     _UART_SendIntToString:
  1227                           	opt callstack 0
  1228  003838  FFFF               	dw	65535	; assembler added errata NOP
  1229                           
  1230                           ;./uart.h: 54: void UART_SendIntToString(int data,char numberOfDigits);./uart.h: 55: {;.
      +                          /uart.h: 56:     char cnt=0;
  1231                           
  1232                           ;incstack = 0
  1233  00383A  0E00               	movlw	0
  1234  00383C  0100               	movlb	0	; () banked
  1235  00383E  6FBA               	movwf	UART_SendIntToString@cnt& (0+255),b
  1236                           
  1237                           ; BSR set to: 0
  1238                           ;./uart.h: 57:     if(data<0)
  1239  003840  AFA9               	btfss	(UART_SendIntToString@data+1)& (0+255),7,b
  1240  003842  D010               	goto	l3616
  1241                           
  1242                           ; BSR set to: 0
  1243                           ;./uart.h: 58:     {;./uart.h: 59:         UART_SendChar(45);
  1244  003844  0E2D               	movlw	45
  1245  003846  ECAE  F03F         	call	_UART_SendChar
  1246                           
  1247                           ;./uart.h: 60:         data*=-1;
  1248  00384A  C0A8  F002         	movff	UART_SendIntToString@data,___wmul@multiplier
  1249  00384E  C0A9  F003         	movff	UART_SendIntToString@data+1,___wmul@multiplier+1
  1250  003852  0EFF               	movlw	255
  1251  003854  6E05               	movwf	___wmul@multiplicand+1,c
  1252  003856  6804               	setf	___wmul@multiplicand,c
  1253  003858  ECEA  F002         	call	___wmul	;wreg free
  1254  00385C  C002  F0A8         	movff	?___wmul,UART_SendIntToString@data
  1255  003860  C003  F0A9         	movff	?___wmul+1,UART_SendIntToString@data+1
  1256  003864                     l3616:
  1257  003864  FFFF               	dw	65535	; assembler added errata NOP
  1258                           
  1259                           ;./uart.h: 62:     int data1=data;
  1260  003866  C0A8  F0AF         	movff	UART_SendIntToString@data,UART_SendIntToString@data1
  1261  00386A  C0A9  F0B0         	movff	UART_SendIntToString@data+1,UART_SendIntToString@data1+1
  1262                           
  1263                           ;./uart.h: 63:     while((data1/powf(10,cnt))>=1)
  1264  00386E  D003               	goto	l3620
  1265  003870                     l3618:
  1266  003870  FFFF               	dw	65535	; assembler added errata NOP
  1267                           
  1268                           ;./uart.h: 64:     {;./uart.h: 65:         cnt++;
  1269  003872  0100               	movlb	0	; () banked
  1270  003874  2BBA               	incf	UART_SendIntToString@cnt& (0+255),f,b
  1271  003876                     l3620:
  1272  003876  FFFF               	dw	65535	; assembler added errata NOP
  1273                           
  1274                           ;./uart.h: 63:     while((data1/powf(10,cnt))>=1)
  1275  003878  0100               	movlb	0	; () banked
  1276  00387A  51BA               	movf	UART_SendIntToString@cnt& (0+255),w,b
  1277  00387C  6E02               	movwf	___xxtofl@val,c
  1278  00387E  6A03               	clrf	___xxtofl@val+1,c
  1279  003880  6A04               	clrf	___xxtofl@val+2,c
  1280  003882  6A05               	clrf	___xxtofl@val+3,c
  1281  003884  0E00               	movlw	0
  1282  003886  EC17  F000         	call	___xxtofl
  1283  00388A  C002  F0B6         	movff	?___xxtofl,_UART_SendIntToString$867
  1284  00388E  C003  F0B7         	movff	?___xxtofl+1,_UART_SendIntToString$867+1
  1285  003892  C004  F0B8         	movff	?___xxtofl+2,_UART_SendIntToString$867+2
  1286  003896  C005  F0B9         	movff	?___xxtofl+3,_UART_SendIntToString$867+3
  1287                           
  1288                           ;./uart.h: 63:     while((data1/powf(10,cnt))>=1)
  1289  00389A  C0B6  F065         	movff	_UART_SendIntToString$867,powf@y
  1290  00389E  C0B7  F066         	movff	_UART_SendIntToString$867+1,powf@y+1
  1291  0038A2  C0B8  F067         	movff	_UART_SendIntToString$867+2,powf@y+2
  1292  0038A6  C0B9  F068         	movff	_UART_SendIntToString$867+3,powf@y+3
  1293  0038AA  0E00               	movlw	0
  1294  0038AC  6E61               	movwf	powf@x,c
  1295  0038AE  0E00               	movlw	0
  1296  0038B0  6E62               	movwf	powf@x+1,c
  1297  0038B2  0E20               	movlw	32
  1298  0038B4  6E63               	movwf	powf@x+2,c
  1299  0038B6  0E41               	movlw	65
  1300  0038B8  6E64               	movwf	powf@x+3,c
  1301  0038BA  EC47  F003         	call	_powf	;wreg free
  1302  0038BE  C061  F0B1         	movff	?_powf,_UART_SendIntToString$868
  1303  0038C2  C062  F0B2         	movff	?_powf+1,_UART_SendIntToString$868+1
  1304  0038C6  C063  F0B3         	movff	?_powf+2,_UART_SendIntToString$868+2
  1305  0038CA  C064  F0B4         	movff	?_powf+3,_UART_SendIntToString$868+3
  1306                           
  1307                           ;./uart.h: 63:     while((data1/powf(10,cnt))>=1)
  1308  0038CE  C0B1  F037         	movff	_UART_SendIntToString$868,___fldiv@a
  1309  0038D2  C0B2  F038         	movff	_UART_SendIntToString$868+1,___fldiv@a+1
  1310  0038D6  C0B3  F039         	movff	_UART_SendIntToString$868+2,___fldiv@a+2
  1311  0038DA  C0B4  F03A         	movff	_UART_SendIntToString$868+3,___fldiv@a+3
  1312  0038DE  C0AF  F002         	movff	UART_SendIntToString@data1,___xxtofl@val
  1313  0038E2  C0B0  F003         	movff	UART_SendIntToString@data1+1,___xxtofl@val+1
  1314  0038E6  0E00               	movlw	0
  1315  0038E8  BE03               	btfsc	___xxtofl@val+1,7,c
  1316  0038EA  0EFF               	movlw	-1
  1317  0038EC  6E04               	movwf	___xxtofl@val+2,c
  1318  0038EE  6E05               	movwf	___xxtofl@val+3,c
  1319  0038F0  0E01               	movlw	1
  1320  0038F2  EC17  F000         	call	___xxtofl
  1321  0038F6  C002  F033         	movff	?___xxtofl,___fldiv@b
  1322  0038FA  C003  F034         	movff	?___xxtofl+1,___fldiv@b+1
  1323  0038FE  C004  F035         	movff	?___xxtofl+2,___fldiv@b+2
  1324  003902  C005  F036         	movff	?___xxtofl+3,___fldiv@b+3
  1325  003906  EC7E  F01D         	call	___fldiv	;wreg free
  1326  00390A  C033  F04C         	movff	?___fldiv,___flge@ff1
  1327  00390E  C034  F04D         	movff	?___fldiv+1,___flge@ff1+1
  1328  003912  C035  F04E         	movff	?___fldiv+2,___flge@ff1+2
  1329  003916  C036  F04F         	movff	?___fldiv+3,___flge@ff1+3
  1330  00391A  0E00               	movlw	0
  1331  00391C  6E50               	movwf	___flge@ff2,c
  1332  00391E  0E00               	movlw	0
  1333  003920  6E51               	movwf	___flge@ff2+1,c
  1334  003922  0E80               	movlw	128
  1335  003924  6E52               	movwf	___flge@ff2+2,c
  1336  003926  0E3F               	movlw	63
  1337  003928  6E53               	movwf	___flge@ff2+3,c
  1338  00392A  EC3D  F001         	call	___flge	;wreg free
  1339  00392E  B0D8               	btfsc	status,0,c
  1340  003930  D79F               	goto	l3618
  1341                           
  1342                           ;./uart.h: 67:     char h_val;;./uart.h: 68:     if(numberOfDigits!=0 && numberOfDigits>
      +                          =cnt)
  1343  003932  0100               	movlb	0	; () banked
  1344  003934  51AA               	movf	UART_SendIntToString@numberOfDigits& (0+255),w,b
  1345  003936  B4D8               	btfsc	status,2,c
  1346  003938  D005               	goto	l3632
  1347                           
  1348                           ; BSR set to: 0
  1349  00393A  51BA               	movf	UART_SendIntToString@cnt& (0+255),w,b
  1350  00393C  5DAA               	subwf	UART_SendIntToString@numberOfDigits& (0+255),w,b
  1351  00393E  B0D8               	btfsc	status,0,c
  1352                           
  1353                           ; BSR set to: 0
  1354                           ;./uart.h: 69:     {;./uart.h: 70:         cnt=numberOfDigits;
  1355  003940  C0AA  F0BA         	movff	UART_SendIntToString@numberOfDigits,UART_SendIntToString@cnt
  1356  003944                     l3632:
  1357  003944  FFFF               	dw	65535	; assembler added errata NOP
  1358                           
  1359                           ; BSR set to: 0
  1360                           ;./uart.h: 73:     for(char i=(cnt-1);i>=1;i--)
  1361  003946  05BA               	decf	UART_SendIntToString@cnt& (0+255),w,b
  1362  003948  6FBB               	movwf	UART_SendIntToString@i& (0+255),b
  1363  00394A                     l3634:
  1364  00394A  FFFF               	dw	65535	; assembler added errata NOP
  1365                           
  1366                           ; BSR set to: 0
  1367  00394C  51BB               	movf	UART_SendIntToString@i& (0+255),w,b
  1368  00394E  B4D8               	btfsc	status,2,c
  1369  003950  D0CE               	goto	l3654
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;./uart.h: 74:     {;./uart.h: 75:         h_val=data/(powf(10,i));
  1373  003952  51BB               	movf	UART_SendIntToString@i& (0+255),w,b
  1374  003954  6E02               	movwf	___xxtofl@val,c
  1375  003956  6A03               	clrf	___xxtofl@val+1,c
  1376  003958  6A04               	clrf	___xxtofl@val+2,c
  1377  00395A  6A05               	clrf	___xxtofl@val+3,c
  1378  00395C  0E00               	movlw	0
  1379  00395E  EC17  F000         	call	___xxtofl
  1380  003962  C002  F0B6         	movff	?___xxtofl,_UART_SendIntToString$867
  1381  003966  C003  F0B7         	movff	?___xxtofl+1,_UART_SendIntToString$867+1
  1382  00396A  C004  F0B8         	movff	?___xxtofl+2,_UART_SendIntToString$867+2
  1383  00396E  C005  F0B9         	movff	?___xxtofl+3,_UART_SendIntToString$867+3
  1384                           
  1385                           ;./uart.h: 74:     {;./uart.h: 75:         h_val=data/(powf(10,i));
  1386  003972  C0B6  F065         	movff	_UART_SendIntToString$867,powf@y
  1387  003976  C0B7  F066         	movff	_UART_SendIntToString$867+1,powf@y+1
  1388  00397A  C0B8  F067         	movff	_UART_SendIntToString$867+2,powf@y+2
  1389  00397E  C0B9  F068         	movff	_UART_SendIntToString$867+3,powf@y+3
  1390  003982  0E00               	movlw	0
  1391  003984  6E61               	movwf	powf@x,c
  1392  003986  0E00               	movlw	0
  1393  003988  6E62               	movwf	powf@x+1,c
  1394  00398A  0E20               	movlw	32
  1395  00398C  6E63               	movwf	powf@x+2,c
  1396  00398E  0E41               	movlw	65
  1397  003990  6E64               	movwf	powf@x+3,c
  1398  003992  EC47  F003         	call	_powf	;wreg free
  1399  003996  C061  F0B1         	movff	?_powf,_UART_SendIntToString$868
  1400  00399A  C062  F0B2         	movff	?_powf+1,_UART_SendIntToString$868+1
  1401  00399E  C063  F0B3         	movff	?_powf+2,_UART_SendIntToString$868+2
  1402  0039A2  C064  F0B4         	movff	?_powf+3,_UART_SendIntToString$868+3
  1403                           
  1404                           ;./uart.h: 74:     {;./uart.h: 75:         h_val=data/(powf(10,i));
  1405  0039A6  C0B1  F037         	movff	_UART_SendIntToString$868,___fldiv@a
  1406  0039AA  C0B2  F038         	movff	_UART_SendIntToString$868+1,___fldiv@a+1
  1407  0039AE  C0B3  F039         	movff	_UART_SendIntToString$868+2,___fldiv@a+2
  1408  0039B2  C0B4  F03A         	movff	_UART_SendIntToString$868+3,___fldiv@a+3
  1409  0039B6  C0A8  F002         	movff	UART_SendIntToString@data,___xxtofl@val
  1410  0039BA  C0A9  F003         	movff	UART_SendIntToString@data+1,___xxtofl@val+1
  1411  0039BE  0E00               	movlw	0
  1412  0039C0  BE03               	btfsc	___xxtofl@val+1,7,c
  1413  0039C2  0EFF               	movlw	-1
  1414  0039C4  6E04               	movwf	___xxtofl@val+2,c
  1415  0039C6  6E05               	movwf	___xxtofl@val+3,c
  1416  0039C8  0E01               	movlw	1
  1417  0039CA  EC17  F000         	call	___xxtofl
  1418  0039CE  C002  F033         	movff	?___xxtofl,___fldiv@b
  1419  0039D2  C003  F034         	movff	?___xxtofl+1,___fldiv@b+1
  1420  0039D6  C004  F035         	movff	?___xxtofl+2,___fldiv@b+2
  1421  0039DA  C005  F036         	movff	?___xxtofl+3,___fldiv@b+3
  1422  0039DE  EC7E  F01D         	call	___fldiv	;wreg free
  1423  0039E2  C033  F072         	movff	?___fldiv,___fltol@f1
  1424  0039E6  C034  F073         	movff	?___fldiv+1,___fltol@f1+1
  1425  0039EA  C035  F074         	movff	?___fldiv+2,___fltol@f1+2
  1426  0039EE  C036  F075         	movff	?___fldiv+3,___fltol@f1+3
  1427  0039F2  ECAD  F001         	call	___fltol	;wreg free
  1428  0039F6  5072               	movf	?___fltol,w,c
  1429  0039F8  0100               	movlb	0	; () banked
  1430  0039FA  6FB5               	movwf	UART_SendIntToString@h_val& (0+255),b
  1431                           
  1432                           ; BSR set to: 0
  1433                           ;./uart.h: 76:         UART_SendChar(h_val+48);
  1434  0039FC  51B5               	movf	UART_SendIntToString@h_val& (0+255),w,b
  1435  0039FE  0F30               	addlw	48
  1436  003A00  ECAE  F03F         	call	_UART_SendChar
  1437                           
  1438                           ;./uart.h: 77:         data=data-(h_val*(powf(10,i)));
  1439  003A04  0100               	movlb	0	; () banked
  1440  003A06  51BB               	movf	UART_SendIntToString@i& (0+255),w,b
  1441  003A08  6E02               	movwf	___xxtofl@val,c
  1442  003A0A  6A03               	clrf	___xxtofl@val+1,c
  1443  003A0C  6A04               	clrf	___xxtofl@val+2,c
  1444  003A0E  6A05               	clrf	___xxtofl@val+3,c
  1445  003A10  0E00               	movlw	0
  1446  003A12  EC17  F000         	call	___xxtofl
  1447  003A16  C002  F0B6         	movff	?___xxtofl,_UART_SendIntToString$867
  1448  003A1A  C003  F0B7         	movff	?___xxtofl+1,_UART_SendIntToString$867+1
  1449  003A1E  C004  F0B8         	movff	?___xxtofl+2,_UART_SendIntToString$867+2
  1450  003A22  C005  F0B9         	movff	?___xxtofl+3,_UART_SendIntToString$867+3
  1451                           
  1452                           ;./uart.h: 77:         data=data-(h_val*(powf(10,i)));
  1453  003A26  C0B6  F065         	movff	_UART_SendIntToString$867,powf@y
  1454  003A2A  C0B7  F066         	movff	_UART_SendIntToString$867+1,powf@y+1
  1455  003A2E  C0B8  F067         	movff	_UART_SendIntToString$867+2,powf@y+2
  1456  003A32  C0B9  F068         	movff	_UART_SendIntToString$867+3,powf@y+3
  1457  003A36  0E00               	movlw	0
  1458  003A38  6E61               	movwf	powf@x,c
  1459  003A3A  0E00               	movlw	0
  1460  003A3C  6E62               	movwf	powf@x+1,c
  1461  003A3E  0E20               	movlw	32
  1462  003A40  6E63               	movwf	powf@x+2,c
  1463  003A42  0E41               	movlw	65
  1464  003A44  6E64               	movwf	powf@x+3,c
  1465  003A46  EC47  F003         	call	_powf	;wreg free
  1466  003A4A  C061  F0AB         	movff	?_powf,_UART_SendIntToString$869
  1467  003A4E  C062  F0AC         	movff	?_powf+1,_UART_SendIntToString$869+1
  1468  003A52  C063  F0AD         	movff	?_powf+2,_UART_SendIntToString$869+2
  1469  003A56  C064  F0AE         	movff	?_powf+3,_UART_SendIntToString$869+3
  1470                           
  1471                           ;./uart.h: 77:         data=data-(h_val*(powf(10,i)));
  1472  003A5A  C0AB  F016         	movff	_UART_SendIntToString$869,___flmul@a
  1473  003A5E  C0AC  F017         	movff	_UART_SendIntToString$869+1,___flmul@a+1
  1474  003A62  C0AD  F018         	movff	_UART_SendIntToString$869+2,___flmul@a+2
  1475  003A66  C0AE  F019         	movff	_UART_SendIntToString$869+3,___flmul@a+3
  1476  003A6A  0100               	movlb	0	; () banked
  1477  003A6C  51B5               	movf	UART_SendIntToString@h_val& (0+255),w,b
  1478  003A6E  6E02               	movwf	___xxtofl@val,c
  1479  003A70  6A03               	clrf	___xxtofl@val+1,c
  1480  003A72  6A04               	clrf	___xxtofl@val+2,c
  1481  003A74  6A05               	clrf	___xxtofl@val+3,c
  1482  003A76  0E01               	movlw	1
  1483  003A78  EC17  F000         	call	___xxtofl
  1484  003A7C  C002  F012         	movff	?___xxtofl,___flmul@b
  1485  003A80  C003  F013         	movff	?___xxtofl+1,___flmul@b+1
  1486  003A84  C004  F014         	movff	?___xxtofl+2,___flmul@b+2
  1487  003A88  C005  F015         	movff	?___xxtofl+3,___flmul@b+3
  1488  003A8C  ECB9  F018         	call	___flmul	;wreg free
  1489  003A90  C012  F02F         	movff	?___flmul,___flsub@a
  1490  003A94  C013  F030         	movff	?___flmul+1,___flsub@a+1
  1491  003A98  C014  F031         	movff	?___flmul+2,___flsub@a+2
  1492  003A9C  C015  F032         	movff	?___flmul+3,___flsub@a+3
  1493  003AA0  C0A8  F002         	movff	UART_SendIntToString@data,___xxtofl@val
  1494  003AA4  C0A9  F003         	movff	UART_SendIntToString@data+1,___xxtofl@val+1
  1495  003AA8  0E00               	movlw	0
  1496  003AAA  BE03               	btfsc	___xxtofl@val+1,7,c
  1497  003AAC  0EFF               	movlw	-1
  1498  003AAE  6E04               	movwf	___xxtofl@val+2,c
  1499  003AB0  6E05               	movwf	___xxtofl@val+3,c
  1500  003AB2  0E01               	movlw	1
  1501  003AB4  EC17  F000         	call	___xxtofl
  1502  003AB8  C002  F02B         	movff	?___xxtofl,___flsub@b
  1503  003ABC  C003  F02C         	movff	?___xxtofl+1,___flsub@b+1
  1504  003AC0  C004  F02D         	movff	?___xxtofl+2,___flsub@b+2
  1505  003AC4  C005  F02E         	movff	?___xxtofl+3,___flsub@b+3
  1506  003AC8  ECD7  F01F         	call	___flsub	;wreg free
  1507  003ACC  C02B  F072         	movff	?___flsub,___fltol@f1
  1508  003AD0  C02C  F073         	movff	?___flsub+1,___fltol@f1+1
  1509  003AD4  C02D  F074         	movff	?___flsub+2,___fltol@f1+2
  1510  003AD8  C02E  F075         	movff	?___flsub+3,___fltol@f1+3
  1511  003ADC  ECAD  F001         	call	___fltol	;wreg free
  1512  003AE0  C072  F0A8         	movff	?___fltol,UART_SendIntToString@data
  1513  003AE4  C073  F0A9         	movff	?___fltol+1,UART_SendIntToString@data+1
  1514                           
  1515                           ;./uart.h: 78:     }
  1516  003AE8  0100               	movlb	0	; () banked
  1517  003AEA  07BB               	decf	UART_SendIntToString@i& (0+255),f,b
  1518  003AEC  D72E               	goto	l3634
  1519  003AEE                     l3654:
  1520  003AEE  FFFF               	dw	65535	; assembler added errata NOP
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;./uart.h: 79:     UART_SendChar(data+48);
  1524  003AF0  51A8               	movf	UART_SendIntToString@data& (0+255),w,b
  1525  003AF2  0F30               	addlw	48
  1526  003AF4  ECAE  F03F         	call	_UART_SendChar
  1527  003AF8  0012               	return		;funcret
  1528  003AFA  FFFF               	dw	65535	; errata NOP
  1529  003AFC                     __end_of_UART_SendIntToString:
  1530                           	opt callstack 0
  1531                           
  1532 ;; *************** function _powf *****************
  1533 ;; Defined at:
  1534 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\powf.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  x               4   96[COMRAM] float 
  1537 ;;  y               4  100[COMRAM] float 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;  s2              4  140[BANK1 ] float 
  1540 ;;  s_h             4  108[BANK1 ] float 
  1541 ;;  t_h             4  104[BANK1 ] float 
  1542 ;;  t_l             4   52[BANK1 ] float 
  1543 ;;  s_l             4   48[BANK1 ] float 
  1544 ;;  __xc8_float_    4  184[BANK1 ] struct .
  1545 ;;  z               4  180[BANK1 ] float 
  1546 ;;  t               4  176[BANK1 ] float 
  1547 ;;  j               4  172[BANK1 ] long 
  1548 ;;  ix              4  168[BANK1 ] long 
  1549 ;;  k               4  160[BANK1 ] long 
  1550 ;;  p_h             4  156[BANK1 ] float 
  1551 ;;  iy              4  152[BANK1 ] long 
  1552 ;;  is              4  144[BANK1 ] long 
  1553 ;;  sn              4  136[BANK1 ] float 
  1554 ;;  hy              4  132[BANK1 ] long 
  1555 ;;  t1              4  128[BANK1 ] float 
  1556 ;;  n               4  124[BANK1 ] long 
  1557 ;;  v               4  120[BANK1 ] float 
  1558 ;;  u               4  116[BANK1 ] float 
  1559 ;;  ax              4  112[BANK1 ] float 
  1560 ;;  p_l             4  100[BANK1 ] float 
  1561 ;;  hx              4   96[BANK1 ] long 
  1562 ;;  s               4   92[BANK1 ] float 
  1563 ;;  yisint          4   80[BANK1 ] long 
  1564 ;;  r               4   76[BANK1 ] float 
  1565 ;;  w               4   68[BANK1 ] float 
  1566 ;;  i               4   44[BANK1 ] long 
  1567 ;;  y1              4   40[BANK1 ] float 
  1568 ;;  z_l             4   36[BANK1 ] float 
  1569 ;;  z_h             4   32[BANK1 ] float 
  1570 ;;  t2              4   28[BANK1 ] float 
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  4   96[COMRAM] float 
  1573 ;; Registers used:
  1574 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1580 ;;      Params:         8       0       0       0       0       0       0
  1581 ;;      Locals:         0       0     188       0       0       0       0
  1582 ;;      Temps:          9       0       0       0       0       0       0
  1583 ;;      Totals:        17       0     188       0       0       0       0
  1584 ;;Total ram usage:      205 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; Hardware stack levels required when called:    4
  1587 ;; This function calls:
  1588 ;;		___fladd
  1589 ;;		___fldiv
  1590 ;;		___flge
  1591 ;;		___flmul
  1592 ;;		___flneg
  1593 ;;		___flsub
  1594 ;;		___xxtofl
  1595 ;;		_fabsf
  1596 ;;		_scalbnf
  1597 ;;		_sqrtf
  1598 ;; This function is called by:
  1599 ;;		_UART_SendIntToString
  1600 ;;		_UART_SendFloatToString
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           	psect	text3
  1605  00068E                     __ptext3:
  1606                           	opt callstack 0
  1607  00068E                     _powf:
  1608                           	opt callstack 0
  1609  00068E  FFFF               	dw	65535	; assembler added errata NOP
  1610                           
  1611                           ;incstack = 0
  1612  000690  C061  F1B8         	movff	powf@x,powf@__xc8_float_word
  1613  000694  C062  F1B9         	movff	powf@x+1,powf@__xc8_float_word+1
  1614  000698  C063  F1BA         	movff	powf@x+2,powf@__xc8_float_word+2
  1615  00069C  C064  F1BB         	movff	powf@x+3,powf@__xc8_float_word+3
  1616  0006A0  C1B8  F160         	movff	powf@__xc8_float_word,powf@hx
  1617  0006A4  C1B9  F161         	movff	powf@__xc8_float_word+1,powf@hx+1
  1618  0006A8  C1BA  F162         	movff	powf@__xc8_float_word+2,powf@hx+2
  1619  0006AC  C1BB  F163         	movff	powf@__xc8_float_word+3,powf@hx+3
  1620  0006B0  C065  F1B8         	movff	powf@y,powf@__xc8_float_word
  1621  0006B4  C066  F1B9         	movff	powf@y+1,powf@__xc8_float_word+1
  1622  0006B8  C067  F1BA         	movff	powf@y+2,powf@__xc8_float_word+2
  1623  0006BC  C068  F1BB         	movff	powf@y+3,powf@__xc8_float_word+3
  1624  0006C0  C1B8  F184         	movff	powf@__xc8_float_word,powf@hy
  1625  0006C4  C1B9  F185         	movff	powf@__xc8_float_word+1,powf@hy+1
  1626  0006C8  C1BA  F186         	movff	powf@__xc8_float_word+2,powf@hy+2
  1627  0006CC  C1BB  F187         	movff	powf@__xc8_float_word+3,powf@hy+3
  1628  0006D0  0EFF               	movlw	255
  1629  0006D2  0101               	movlb	1	; () banked
  1630  0006D4  1560               	andwf	powf@hx& (0+255),w,b
  1631  0006D6  6FA8               	movwf	powf@ix& (0+255),b
  1632  0006D8  0EFF               	movlw	255
  1633  0006DA  1561               	andwf	(powf@hx+1)& (0+255),w,b
  1634  0006DC  6FA9               	movwf	(powf@ix+1)& (0+255),b
  1635  0006DE  0EFF               	movlw	255
  1636  0006E0  1562               	andwf	(powf@hx+2)& (0+255),w,b
  1637  0006E2  6FAA               	movwf	(powf@ix+2)& (0+255),b
  1638  0006E4  0E7F               	movlw	127
  1639  0006E6  1563               	andwf	(powf@hx+3)& (0+255),w,b
  1640  0006E8  6FAB               	movwf	(powf@ix+3)& (0+255),b
  1641  0006EA  0EFF               	movlw	255
  1642  0006EC  1584               	andwf	powf@hy& (0+255),w,b
  1643  0006EE  6F98               	movwf	powf@iy& (0+255),b
  1644  0006F0  0EFF               	movlw	255
  1645  0006F2  1585               	andwf	(powf@hy+1)& (0+255),w,b
  1646  0006F4  6F99               	movwf	(powf@iy+1)& (0+255),b
  1647  0006F6  0EFF               	movlw	255
  1648  0006F8  1586               	andwf	(powf@hy+2)& (0+255),w,b
  1649  0006FA  6F9A               	movwf	(powf@iy+2)& (0+255),b
  1650  0006FC  0E7F               	movlw	127
  1651  0006FE  1587               	andwf	(powf@hy+3)& (0+255),w,b
  1652  000700  6F9B               	movwf	(powf@iy+3)& (0+255),b
  1653  000702  5198               	movf	powf@iy& (0+255),w,b
  1654  000704  1199               	iorwf	(powf@iy+1)& (0+255),w,b
  1655  000706  119A               	iorwf	(powf@iy+2)& (0+255),w,b
  1656  000708  119B               	iorwf	(powf@iy+3)& (0+255),w,b
  1657  00070A  B4D8               	btfsc	status,2,c
  1658  00070C  D0F5               	goto	u3300
  1659                           
  1660                           ; BSR set to: 1
  1661                           
  1662                           ; BSR set to: 1
  1663  00070E  0E80               	movlw	128
  1664  000710  1962               	xorwf	(powf@hx+2)& (0+255),w,b
  1665  000712  E106               	bnz	l3082
  1666  000714  0E3F               	movlw	63
  1667  000716  1963               	xorwf	(powf@hx+3)& (0+255),w,b
  1668  000718  1160               	iorwf	powf@hx& (0+255),w,b
  1669  00071A  1161               	iorwf	(powf@hx+1)& (0+255),w,b
  1670  00071C  B4D8               	btfsc	status,2,c
  1671  00071E  D0EC               	goto	u3300
  1672  000720                     l3082:
  1673                           
  1674                           ; BSR set to: 1
  1675  000720  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  1676  000722  D009               	goto	u3200
  1677  000724  05A8               	decf	powf@ix& (0+255),w,b
  1678  000726  0E00               	movlw	0
  1679  000728  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  1680  00072A  0E80               	movlw	128
  1681  00072C  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  1682  00072E  0E7F               	movlw	127
  1683  000730  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  1684  000732  B0D8               	btfsc	status,0,c
  1685  000734  D00C               	goto	u3210
  1686  000736                     u3200:
  1687  000736  FFFF               	dw	65535	; assembler added errata NOP
  1688                           
  1689                           ; BSR set to: 1
  1690  000738  BF9B               	btfsc	(powf@iy+3)& (0+255),7,b
  1691  00073A  D026               	goto	l3090
  1692  00073C  0598               	decf	powf@iy& (0+255),w,b
  1693  00073E  0E00               	movlw	0
  1694  000740  5999               	subwfb	(powf@iy+1)& (0+255),w,b
  1695  000742  0E80               	movlw	128
  1696  000744  599A               	subwfb	(powf@iy+2)& (0+255),w,b
  1697  000746  0E7F               	movlw	127
  1698  000748  599B               	subwfb	(powf@iy+3)& (0+255),w,b
  1699  00074A  A0D8               	btfss	status,0,c
  1700  00074C  D01D               	goto	l3090
  1701  00074E                     u3210:
  1702  00074E  FFFF               	dw	65535	; assembler added errata NOP
  1703                           
  1704                           ; BSR set to: 1
  1705  000750  C061  F002         	movff	powf@x,___fladd@b
  1706  000754  C062  F003         	movff	powf@x+1,___fladd@b+1
  1707  000758  C063  F004         	movff	powf@x+2,___fladd@b+2
  1708  00075C  C064  F005         	movff	powf@x+3,___fladd@b+3
  1709  000760  C065  F006         	movff	powf@y,___fladd@a
  1710  000764  C066  F007         	movff	powf@y+1,___fladd@a+1
  1711  000768  C067  F008         	movff	powf@y+2,___fladd@a+2
  1712  00076C  C068  F009         	movff	powf@y+3,___fladd@a+3
  1713  000770  EC7A  F01A         	call	___fladd	;wreg free
  1714  000774  C002  F061         	movff	?___fladd,?_powf
  1715  000778  C003  F062         	movff	?___fladd+1,?_powf+1
  1716  00077C  C004  F063         	movff	?___fladd+2,?_powf+2
  1717  000780  C005  F064         	movff	?___fladd+3,?_powf+3
  1718  000784  EF89  F016         	goto	l831
  1719  000788                     l3090:
  1720  000788  FFFF               	dw	65535	; assembler added errata NOP
  1721                           
  1722                           ; BSR set to: 1
  1723  00078A  0E00               	movlw	0
  1724  00078C  6F50               	movwf	powf@yisint& (0+255),b
  1725  00078E  0E00               	movlw	0
  1726  000790  6F51               	movwf	(powf@yisint+1)& (0+255),b
  1727  000792  0E00               	movlw	0
  1728  000794  6F52               	movwf	(powf@yisint+2)& (0+255),b
  1729  000796  0E00               	movlw	0
  1730  000798  6F53               	movwf	(powf@yisint+3)& (0+255),b
  1731                           
  1732                           ; BSR set to: 1
  1733  00079A  AF63               	btfss	(powf@hx+3)& (0+255),7,b
  1734  00079C  D09A               	goto	l836
  1735                           
  1736                           ; BSR set to: 1
  1737  00079E  BF9B               	btfsc	(powf@iy+3)& (0+255),7,b
  1738  0007A0  D00E               	goto	l3098
  1739  0007A2  0E80               	movlw	128
  1740  0007A4  5D9A               	subwf	(powf@iy+2)& (0+255),w,b
  1741  0007A6  0E4B               	movlw	75
  1742  0007A8  599B               	subwfb	(powf@iy+3)& (0+255),w,b
  1743  0007AA  A0D8               	btfss	status,0,c
  1744  0007AC  D008               	goto	l3098
  1745                           
  1746                           ; BSR set to: 1
  1747  0007AE  0E02               	movlw	2
  1748  0007B0  6F50               	movwf	powf@yisint& (0+255),b
  1749  0007B2  0E00               	movlw	0
  1750  0007B4  6F51               	movwf	(powf@yisint+1)& (0+255),b
  1751  0007B6  0E00               	movlw	0
  1752  0007B8  6F52               	movwf	(powf@yisint+2)& (0+255),b
  1753  0007BA  0E00               	movlw	0
  1754  0007BC  D088               	goto	L1
  1755  0007BE                     l3098:
  1756  0007BE  FFFF               	dw	65535	; assembler added errata NOP
  1757                           
  1758                           ; BSR set to: 1
  1759  0007C0  BF9B               	btfsc	(powf@iy+3)& (0+255),7,b
  1760  0007C2  D087               	goto	l836
  1761  0007C4  0E80               	movlw	128
  1762  0007C6  5D9A               	subwf	(powf@iy+2)& (0+255),w,b
  1763  0007C8  0E3F               	movlw	63
  1764  0007CA  599B               	subwfb	(powf@iy+3)& (0+255),w,b
  1765  0007CC  A0D8               	btfss	status,0,c
  1766  0007CE  D081               	goto	l836
  1767                           
  1768                           ; BSR set to: 1
  1769  0007D0  0E17               	movlw	23
  1770  0007D2  6E69               	movwf	??_powf& (0+255),c
  1771  0007D4  C198  F06A         	movff	powf@iy,??_powf+1
  1772  0007D8  C199  F06B         	movff	powf@iy+1,??_powf+2
  1773  0007DC  C19A  F06C         	movff	powf@iy+2,??_powf+3
  1774  0007E0  C19B  F06D         	movff	powf@iy+3,??_powf+4
  1775  0007E4                     u3255:
  1776  0007E4  FFFF               	dw	65535	; assembler added errata NOP
  1777  0007E6  6669               	tstfsz	??_powf,c
  1778  0007E8  D001               	goto	u3256
  1779  0007EA  D008               	goto	u3257
  1780  0007EC                     u3256:
  1781  0007EC  FFFF               	dw	65535	; assembler added errata NOP
  1782  0007EE  346D               	rlcf	??_powf+4,w,c
  1783  0007F0  326D               	rrcf	??_powf+4,f,c
  1784  0007F2  326C               	rrcf	??_powf+3,f,c
  1785  0007F4  326B               	rrcf	??_powf+2,f,c
  1786  0007F6  326A               	rrcf	??_powf+1,f,c
  1787  0007F8  2E69               	decfsz	??_powf,f,c
  1788  0007FA  D7F4               	goto	u3255
  1789  0007FC                     u3257:
  1790  0007FC  FFFF               	dw	65535	; assembler added errata NOP
  1791  0007FE  0E81               	movlw	129
  1792  000800  246A               	addwf	??_powf+1,w,c
  1793  000802  0101               	movlb	1	; () banked
  1794  000804  6FA0               	movwf	powf@k& (0+255),b
  1795  000806  0EFF               	movlw	255
  1796  000808  206B               	addwfc	??_powf+2,w,c
  1797  00080A  6FA1               	movwf	(powf@k+1)& (0+255),b
  1798  00080C  0EFF               	movlw	255
  1799  00080E  206C               	addwfc	??_powf+3,w,c
  1800  000810  6FA2               	movwf	(powf@k+2)& (0+255),b
  1801  000812  0EFF               	movlw	255
  1802  000814  206D               	addwfc	??_powf+4,w,c
  1803  000816  6FA3               	movwf	(powf@k+3)& (0+255),b
  1804  000818  51A0               	movf	powf@k& (0+255),w,b
  1805  00081A  0817               	sublw	23
  1806  00081C  6E69               	movwf	??_powf& (0+255),c
  1807  00081E  C198  F06A         	movff	powf@iy,??_powf+1
  1808  000822  C199  F06B         	movff	powf@iy+1,??_powf+2
  1809  000826  C19A  F06C         	movff	powf@iy+2,??_powf+3
  1810  00082A  C19B  F06D         	movff	powf@iy+3,??_powf+4
  1811  00082E                     u3265:
  1812  00082E  FFFF               	dw	65535	; assembler added errata NOP
  1813  000830  6669               	tstfsz	??_powf,c
  1814  000832  D001               	goto	u3266
  1815  000834  D008               	goto	u3267
  1816  000836                     u3266:
  1817  000836  FFFF               	dw	65535	; assembler added errata NOP
  1818  000838  346D               	rlcf	??_powf+4,w,c
  1819  00083A  326D               	rrcf	??_powf+4,f,c
  1820  00083C  326C               	rrcf	??_powf+3,f,c
  1821  00083E  326B               	rrcf	??_powf+2,f,c
  1822  000840  326A               	rrcf	??_powf+1,f,c
  1823  000842  2E69               	decfsz	??_powf,f,c
  1824  000844  D7F4               	goto	u3265
  1825  000846                     u3267:
  1826  000846  FFFF               	dw	65535	; assembler added errata NOP
  1827  000848  C06A  F1AC         	movff	??_powf+1,powf@j
  1828  00084C  C06B  F1AD         	movff	??_powf+2,powf@j+1
  1829  000850  C06C  F1AE         	movff	??_powf+3,powf@j+2
  1830  000854  C06D  F1AF         	movff	??_powf+4,powf@j+3
  1831  000858  0101               	movlb	1	; () banked
  1832  00085A  51A0               	movf	powf@k& (0+255),w,b
  1833  00085C  0817               	sublw	23
  1834  00085E  6E69               	movwf	??_powf& (0+255),c
  1835  000860  C1AC  F06A         	movff	powf@j,??_powf+1
  1836  000864  C1AD  F06B         	movff	powf@j+1,??_powf+2
  1837  000868  C1AE  F06C         	movff	powf@j+2,??_powf+3
  1838  00086C  C1AF  F06D         	movff	powf@j+3,??_powf+4
  1839  000870  2A69               	incf	??_powf,f,c
  1840  000872  D006               	goto	u3270
  1841  000874                     u3275:
  1842  000874  FFFF               	dw	65535	; assembler added errata NOP
  1843  000876  90D8               	bcf	status,0,c
  1844  000878  366A               	rlcf	??_powf+1,f,c
  1845  00087A  366B               	rlcf	??_powf+2,f,c
  1846  00087C  366C               	rlcf	??_powf+3,f,c
  1847  00087E  366D               	rlcf	??_powf+4,f,c
  1848  000880                     u3270:
  1849  000880  FFFF               	dw	65535	; assembler added errata NOP
  1850  000882  2E69               	decfsz	??_powf,f,c
  1851  000884  D7F7               	goto	u3275
  1852  000886  5198               	movf	powf@iy& (0+255),w,b
  1853  000888  186A               	xorwf	??_powf+1,w,c
  1854  00088A  E123               	bnz	l836
  1855  00088C  5199               	movf	(powf@iy+1)& (0+255),w,b
  1856  00088E  186B               	xorwf	??_powf+2,w,c
  1857  000890  E120               	bnz	l836
  1858  000892  519A               	movf	(powf@iy+2)& (0+255),w,b
  1859  000894  186C               	xorwf	??_powf+3,w,c
  1860  000896  E11D               	bnz	l836
  1861  000898  519B               	movf	(powf@iy+3)& (0+255),w,b
  1862  00089A  186D               	xorwf	??_powf+4,w,c
  1863  00089C  A4D8               	btfss	status,2,c
  1864  00089E  D019               	goto	l836
  1865                           
  1866                           ; BSR set to: 1
  1867  0008A0  0E01               	movlw	1
  1868  0008A2  15AC               	andwf	powf@j& (0+255),w,b
  1869  0008A4  6E69               	movwf	??_powf& (0+255),c
  1870  0008A6  0E00               	movlw	0
  1871  0008A8  15AD               	andwf	(powf@j+1)& (0+255),w,b
  1872  0008AA  6E6A               	movwf	(??_powf+1)& (0+255),c
  1873  0008AC  0E00               	movlw	0
  1874  0008AE  15AE               	andwf	(powf@j+2)& (0+255),w,b
  1875  0008B0  6E6B               	movwf	(??_powf+2)& (0+255),c
  1876  0008B2  0E00               	movlw	0
  1877  0008B4  15AF               	andwf	(powf@j+3)& (0+255),w,b
  1878  0008B6  6E6C               	movwf	(??_powf+3)& (0+255),c
  1879  0008B8  5069               	movf	??_powf,w,c
  1880  0008BA  0802               	sublw	2
  1881  0008BC  6F50               	movwf	powf@yisint& (0+255),b
  1882  0008BE  0E00               	movlw	0
  1883  0008C0  546A               	subfwb	??_powf+1,w,c
  1884  0008C2  6F51               	movwf	(powf@yisint+1)& (0+255),b
  1885  0008C4  0E00               	movlw	0
  1886  0008C6  546B               	subfwb	??_powf+2,w,c
  1887  0008C8  6F52               	movwf	(powf@yisint+2)& (0+255),b
  1888  0008CA  0E00               	movlw	0
  1889  0008CC  546C               	subfwb	??_powf+3,w,c
  1890  0008CE                     L1:
  1891  0008CE  FFFF               	dw	65535	; assembler added errata NOP
  1892  0008D0  6F53               	movwf	(powf@yisint+3)& (0+255),b
  1893  0008D2                     l836:
  1894  0008D2  FFFF               	dw	65535	; assembler added errata NOP
  1895                           
  1896                           ; BSR set to: 1
  1897  0008D4  0E80               	movlw	128
  1898  0008D6  199A               	xorwf	(powf@iy+2)& (0+255),w,b
  1899  0008D8  E156               	bnz	l3128
  1900  0008DA  0E7F               	movlw	127
  1901  0008DC  199B               	xorwf	(powf@iy+3)& (0+255),w,b
  1902  0008DE  1198               	iorwf	powf@iy& (0+255),w,b
  1903  0008E0  1199               	iorwf	(powf@iy+1)& (0+255),w,b
  1904  0008E2  A4D8               	btfss	status,2,c
  1905  0008E4  D050               	goto	l3128
  1906                           
  1907                           ; BSR set to: 1
  1908  0008E6  0E80               	movlw	128
  1909  0008E8  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  1910  0008EA  E10F               	bnz	l3112
  1911  0008EC  0E3F               	movlw	63
  1912  0008EE  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  1913  0008F0  11A8               	iorwf	powf@ix& (0+255),w,b
  1914  0008F2  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  1915  0008F4  A4D8               	btfss	status,2,c
  1916  0008F6  D009               	goto	l3112
  1917  0008F8                     u3300:
  1918  0008F8  FFFF               	dw	65535	; assembler added errata NOP
  1919                           
  1920                           ; BSR set to: 1
  1921  0008FA  0E00               	movlw	0
  1922  0008FC  6E61               	movwf	?_powf,c
  1923  0008FE  0E00               	movlw	0
  1924  000900  6E62               	movwf	?_powf+1,c
  1925  000902  0E80               	movlw	128
  1926  000904  6E63               	movwf	?_powf+2,c
  1927  000906  0E3F               	movlw	63
  1928  000908  D00F               	goto	L2
  1929  00090A                     l3112:
  1930  00090A  FFFF               	dw	65535	; assembler added errata NOP
  1931                           
  1932                           ; BSR set to: 1
  1933  00090C  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  1934  00090E  D01B               	goto	l3120
  1935  000910  05A8               	decf	powf@ix& (0+255),w,b
  1936  000912  0E00               	movlw	0
  1937  000914  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  1938  000916  0E80               	movlw	128
  1939  000918  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  1940  00091A  0E3F               	movlw	63
  1941  00091C  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  1942  00091E  A0D8               	btfss	status,0,c
  1943  000920  D012               	goto	l3120
  1944                           
  1945                           ; BSR set to: 1
  1946  000922  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  1947  000924  D027               	goto	l3124
  1948  000926  D004               	goto	l846
  1949  000928                     L2:
  1950  000928  FFFF               	dw	65535	; assembler added errata NOP
  1951  00092A  6E64               	movwf	?_powf+3,c
  1952  00092C  EF89  F016         	goto	l831
  1953  000930                     l846:
  1954  000930  FFFF               	dw	65535	; assembler added errata NOP
  1955                           
  1956                           ; BSR set to: 1
  1957  000932  C065  F061         	movff	powf@y,?_powf
  1958  000936  C066  F062         	movff	powf@y+1,?_powf+1
  1959  00093A  C067  F063         	movff	powf@y+2,?_powf+2
  1960  00093E  C068  F064         	movff	powf@y+3,?_powf+3
  1961  000942  EF89  F016         	goto	l831
  1962  000946                     l3120:
  1963  000946  FFFF               	dw	65535	; assembler added errata NOP
  1964                           
  1965                           ; BSR set to: 1
  1966  000948  AF87               	btfss	(powf@hy+3)& (0+255),7,b
  1967  00094A  D014               	goto	l3124
  1968                           
  1969                           ; BSR set to: 1
  1970  00094C  C065  F002         	movff	powf@y,___flneg@f1
  1971  000950  C066  F003         	movff	powf@y+1,___flneg@f1+1
  1972  000954  C067  F004         	movff	powf@y+2,___flneg@f1+2
  1973  000958  C068  F005         	movff	powf@y+3,___flneg@f1+3
  1974  00095C  ECE6  F03F         	call	___flneg	;wreg free
  1975  000960  C002  F061         	movff	?___flneg,?_powf
  1976  000964  C003  F062         	movff	?___flneg+1,?_powf+1
  1977  000968  C004  F063         	movff	?___flneg+2,?_powf+2
  1978  00096C  C005  F064         	movff	?___flneg+3,?_powf+3
  1979  000970  EF89  F016         	goto	l831
  1980  000974                     l3124:
  1981  000974  FFFF               	dw	65535	; assembler added errata NOP
  1982                           
  1983                           ; BSR set to: 1
  1984  000976  0E00               	movlw	0
  1985  000978  6E61               	movwf	?_powf,c
  1986  00097A  0E00               	movlw	0
  1987  00097C  6E62               	movwf	?_powf+1,c
  1988  00097E  0E00               	movlw	0
  1989  000980  6E63               	movwf	?_powf+2,c
  1990  000982  0E00               	movlw	0
  1991  000984  D7D1               	goto	L2
  1992  000986                     l3128:
  1993  000986  FFFF               	dw	65535	; assembler added errata NOP
  1994                           
  1995                           ; BSR set to: 1
  1996  000988  0E80               	movlw	128
  1997  00098A  199A               	xorwf	(powf@iy+2)& (0+255),w,b
  1998  00098C  E126               	bnz	l3134
  1999  00098E  0E3F               	movlw	63
  2000  000990  199B               	xorwf	(powf@iy+3)& (0+255),w,b
  2001  000992  1198               	iorwf	powf@iy& (0+255),w,b
  2002  000994  1199               	iorwf	(powf@iy+1)& (0+255),w,b
  2003  000996  A4D8               	btfss	status,2,c
  2004  000998  D020               	goto	l3134
  2005                           
  2006                           ; BSR set to: 1
  2007  00099A  AF87               	btfss	(powf@hy+3)& (0+255),7,b
  2008  00099C  D013               	goto	l856
  2009                           
  2010                           ; BSR set to: 1
  2011  00099E  0E00               	movlw	0
  2012  0009A0  6E33               	movwf	___fldiv@b,c
  2013  0009A2  0E00               	movlw	0
  2014  0009A4  6E34               	movwf	___fldiv@b+1,c
  2015  0009A6  0E80               	movlw	128
  2016  0009A8  6E35               	movwf	___fldiv@b+2,c
  2017  0009AA  0E3F               	movlw	63
  2018  0009AC  6E36               	movwf	___fldiv@b+3,c
  2019  0009AE  C061  F037         	movff	powf@x,___fldiv@a
  2020  0009B2  C062  F038         	movff	powf@x+1,___fldiv@a+1
  2021  0009B6  C063  F039         	movff	powf@x+2,___fldiv@a+2
  2022  0009BA  C064  F03A         	movff	powf@x+3,___fldiv@a+3
  2023  0009BE  EC7E  F01D         	call	___fldiv	;wreg free
  2024  0009C2  D161               	goto	L3
  2025  0009C4                     l856:
  2026  0009C4  FFFF               	dw	65535	; assembler added errata NOP
  2027                           
  2028                           ; BSR set to: 1
  2029  0009C6  C061  F061         	movff	powf@x,?_powf
  2030  0009CA  C062  F062         	movff	powf@x+1,?_powf+1
  2031  0009CE  C063  F063         	movff	powf@x+2,?_powf+2
  2032  0009D2  C064  F064         	movff	powf@x+3,?_powf+3
  2033  0009D6  EF89  F016         	goto	l831
  2034  0009DA                     l3134:
  2035  0009DA  FFFF               	dw	65535	; assembler added errata NOP
  2036                           
  2037                           ; BSR set to: 1
  2038  0009DC  0E40               	movlw	64
  2039  0009DE  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  2040  0009E0  1184               	iorwf	powf@hy& (0+255),w,b
  2041  0009E2  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  2042  0009E4  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  2043  0009E6  A4D8               	btfss	status,2,c
  2044  0009E8  D014               	goto	l3140
  2045                           
  2046                           ; BSR set to: 1
  2047  0009EA  C061  F012         	movff	powf@x,___flmul@b
  2048  0009EE  C062  F013         	movff	powf@x+1,___flmul@b+1
  2049  0009F2  C063  F014         	movff	powf@x+2,___flmul@b+2
  2050  0009F6  C064  F015         	movff	powf@x+3,___flmul@b+3
  2051  0009FA  C061  F016         	movff	powf@x,___flmul@a
  2052  0009FE  C062  F017         	movff	powf@x+1,___flmul@a+1
  2053  000A02  C063  F018         	movff	powf@x+2,___flmul@a+2
  2054  000A06  C064  F019         	movff	powf@x+3,___flmul@a+3
  2055  000A0A  ECB9  F018         	call	___flmul	;wreg free
  2056  000A0E  EF80  F016         	goto	L4
  2057  000A12                     l3140:
  2058  000A12  FFFF               	dw	65535	; assembler added errata NOP
  2059                           
  2060                           ; BSR set to: 1
  2061  000A14  0E3F               	movlw	63
  2062  000A16  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  2063  000A18  1184               	iorwf	powf@hy& (0+255),w,b
  2064  000A1A  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  2065  000A1C  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  2066  000A1E  B4D8               	btfsc	status,2,c
  2067                           
  2068                           ; BSR set to: 1
  2069  000A20  BF63               	btfsc	(powf@hx+3)& (0+255),7,b
  2070  000A22  D014               	goto	l3148
  2071                           
  2072                           ; BSR set to: 1
  2073  000A24  C061  F058         	movff	powf@x,sqrtf@x
  2074  000A28  C062  F059         	movff	powf@x+1,sqrtf@x+1
  2075  000A2C  C063  F05A         	movff	powf@x+2,sqrtf@x+2
  2076  000A30  C064  F05B         	movff	powf@x+3,sqrtf@x+3
  2077  000A34  EC8C  F016         	call	_sqrtf	;wreg free
  2078  000A38  C058  F061         	movff	?_sqrtf,?_powf
  2079  000A3C  C059  F062         	movff	?_sqrtf+1,?_powf+1
  2080  000A40  C05A  F063         	movff	?_sqrtf+2,?_powf+2
  2081  000A44  C05B  F064         	movff	?_sqrtf+3,?_powf+3
  2082  000A48  EF89  F016         	goto	l831
  2083  000A4C                     l3148:
  2084  000A4C  FFFF               	dw	65535	; assembler added errata NOP
  2085                           
  2086                           ; BSR set to: 1
  2087  000A4E  C061  F002         	movff	powf@x,fabsf@x
  2088  000A52  C062  F003         	movff	powf@x+1,fabsf@x+1
  2089  000A56  C063  F004         	movff	powf@x+2,fabsf@x+2
  2090  000A5A  C064  F005         	movff	powf@x+3,fabsf@x+3
  2091  000A5E  ECCE  F002         	call	_fabsf	;wreg free
  2092  000A62  C002  F170         	movff	?_fabsf,powf@ax
  2093  000A66  C003  F171         	movff	?_fabsf+1,powf@ax+1
  2094  000A6A  C004  F172         	movff	?_fabsf+2,powf@ax+2
  2095  000A6E  C005  F173         	movff	?_fabsf+3,powf@ax+3
  2096  000A72  0E80               	movlw	128
  2097  000A74  0101               	movlb	1	; () banked
  2098  000A76  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  2099  000A78  E106               	bnz	u3390
  2100  000A7A  0E7F               	movlw	127
  2101  000A7C  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  2102  000A7E  11A8               	iorwf	powf@ix& (0+255),w,b
  2103  000A80  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  2104  000A82  B4D8               	btfsc	status,2,c
  2105  000A84  D00F               	goto	u3410
  2106  000A86                     u3390:
  2107                           
  2108                           ; BSR set to: 1
  2109  000A86  51A8               	movf	powf@ix& (0+255),w,b
  2110  000A88  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  2111  000A8A  11AA               	iorwf	(powf@ix+2)& (0+255),w,b
  2112  000A8C  11AB               	iorwf	(powf@ix+3)& (0+255),w,b
  2113  000A8E  B4D8               	btfsc	status,2,c
  2114  000A90  D009               	goto	u3410
  2115                           
  2116                           ; BSR set to: 1
  2117  000A92  0E80               	movlw	128
  2118  000A94  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  2119  000A96  E105               	bnz	u3411
  2120  000A98  0E3F               	movlw	63
  2121  000A9A  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  2122  000A9C  11A8               	iorwf	powf@ix& (0+255),w,b
  2123  000A9E  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  2124  000AA0  A4D8               	btfss	status,2,c
  2125  000AA2                     u3411:
  2126  000AA2  D0AA               	goto	l3174
  2127  000AA4                     u3410:
  2128  000AA4  FFFF               	dw	65535	; assembler added errata NOP
  2129                           
  2130                           ; BSR set to: 1
  2131  000AA6  C170  F1B4         	movff	powf@ax,powf@z
  2132  000AAA  C171  F1B5         	movff	powf@ax+1,powf@z+1
  2133  000AAE  C172  F1B6         	movff	powf@ax+2,powf@z+2
  2134  000AB2  C173  F1B7         	movff	powf@ax+3,powf@z+3
  2135                           
  2136                           ; BSR set to: 1
  2137  000AB6  AF87               	btfss	(powf@hy+3)& (0+255),7,b
  2138  000AB8  D01A               	goto	l3160
  2139                           
  2140                           ; BSR set to: 1
  2141  000ABA  0E00               	movlw	0
  2142  000ABC  6E33               	movwf	___fldiv@b,c
  2143  000ABE  0E00               	movlw	0
  2144  000AC0  6E34               	movwf	___fldiv@b+1,c
  2145  000AC2  0E80               	movlw	128
  2146  000AC4  6E35               	movwf	___fldiv@b+2,c
  2147  000AC6  0E3F               	movlw	63
  2148  000AC8  6E36               	movwf	___fldiv@b+3,c
  2149  000ACA  C1B4  F037         	movff	powf@z,___fldiv@a
  2150  000ACE  C1B5  F038         	movff	powf@z+1,___fldiv@a+1
  2151  000AD2  C1B6  F039         	movff	powf@z+2,___fldiv@a+2
  2152  000AD6  C1B7  F03A         	movff	powf@z+3,___fldiv@a+3
  2153  000ADA  EC7E  F01D         	call	___fldiv	;wreg free
  2154  000ADE  C033  F1B4         	movff	?___fldiv,powf@z
  2155  000AE2  C034  F1B5         	movff	?___fldiv+1,powf@z+1
  2156  000AE6  C035  F1B6         	movff	?___fldiv+2,powf@z+2
  2157  000AEA  C036  F1B7         	movff	?___fldiv+3,powf@z+3
  2158  000AEE                     l3160:
  2159  000AEE  FFFF               	dw	65535	; assembler added errata NOP
  2160  000AF0  0101               	movlb	1	; () banked
  2161  000AF2  AF63               	btfss	(powf@hx+3)& (0+255),7,b
  2162  000AF4  D076               	goto	l3170
  2163                           
  2164                           ; BSR set to: 1
  2165  000AF6  0E00               	movlw	0
  2166  000AF8  25A8               	addwf	powf@ix& (0+255),w,b
  2167  000AFA  6E69               	movwf	??_powf& (0+255),c
  2168  000AFC  0E00               	movlw	0
  2169  000AFE  21A9               	addwfc	(powf@ix+1)& (0+255),w,b
  2170  000B00  6E6A               	movwf	(??_powf+1)& (0+255),c
  2171  000B02  0E80               	movlw	128
  2172  000B04  21AA               	addwfc	(powf@ix+2)& (0+255),w,b
  2173  000B06  6E6B               	movwf	(??_powf+2)& (0+255),c
  2174  000B08  0EC0               	movlw	192
  2175  000B0A  21AB               	addwfc	(powf@ix+3)& (0+255),w,b
  2176  000B0C  6E6C               	movwf	(??_powf+3)& (0+255),c
  2177  000B0E  5150               	movf	powf@yisint& (0+255),w,b
  2178  000B10  1069               	iorwf	??_powf,w,c
  2179  000B12  6E6D               	movwf	(??_powf+4)& (0+255),c
  2180  000B14  5151               	movf	(powf@yisint+1)& (0+255),w,b
  2181  000B16  106A               	iorwf	??_powf+1,w,c
  2182  000B18  6E6E               	movwf	(??_powf+5)& (0+255),c
  2183  000B1A  5152               	movf	(powf@yisint+2)& (0+255),w,b
  2184  000B1C  106B               	iorwf	??_powf+2,w,c
  2185  000B1E  6E6F               	movwf	(??_powf+6)& (0+255),c
  2186  000B20  5153               	movf	(powf@yisint+3)& (0+255),w,b
  2187  000B22  106C               	iorwf	??_powf+3,w,c
  2188  000B24  6E70               	movwf	(??_powf+7)& (0+255),c
  2189  000B26  506D               	movf	??_powf+4,w,c
  2190  000B28  106E               	iorwf	??_powf+5,w,c
  2191  000B2A  106F               	iorwf	??_powf+6,w,c
  2192  000B2C  1070               	iorwf	??_powf+7,w,c
  2193  000B2E  A4D8               	btfss	status,2,c
  2194  000B30  D03F               	goto	l3166
  2195                           
  2196                           ; BSR set to: 1
  2197  000B32  C1B4  F02F         	movff	powf@z,___flsub@a
  2198  000B36  C1B5  F030         	movff	powf@z+1,___flsub@a+1
  2199  000B3A  C1B6  F031         	movff	powf@z+2,___flsub@a+2
  2200  000B3E  C1B7  F032         	movff	powf@z+3,___flsub@a+3
  2201  000B42  C1B4  F02B         	movff	powf@z,___flsub@b
  2202  000B46  C1B5  F02C         	movff	powf@z+1,___flsub@b+1
  2203  000B4A  C1B6  F02D         	movff	powf@z+2,___flsub@b+2
  2204  000B4E  C1B7  F02E         	movff	powf@z+3,___flsub@b+3
  2205  000B52  ECD7  F01F         	call	___flsub	;wreg free
  2206  000B56  C02B  F033         	movff	?___flsub,___fldiv@b
  2207  000B5A  C02C  F034         	movff	?___flsub+1,___fldiv@b+1
  2208  000B5E  C02D  F035         	movff	?___flsub+2,___fldiv@b+2
  2209  000B62  C02E  F036         	movff	?___flsub+3,___fldiv@b+3
  2210  000B66  C1B4  F02F         	movff	powf@z,___flsub@a
  2211  000B6A  C1B5  F030         	movff	powf@z+1,___flsub@a+1
  2212  000B6E  C1B6  F031         	movff	powf@z+2,___flsub@a+2
  2213  000B72  C1B7  F032         	movff	powf@z+3,___flsub@a+3
  2214  000B76  C1B4  F02B         	movff	powf@z,___flsub@b
  2215  000B7A  C1B5  F02C         	movff	powf@z+1,___flsub@b+1
  2216  000B7E  C1B6  F02D         	movff	powf@z+2,___flsub@b+2
  2217  000B82  C1B7  F02E         	movff	powf@z+3,___flsub@b+3
  2218  000B86  ECD7  F01F         	call	___flsub	;wreg free
  2219  000B8A  C02B  F037         	movff	?___flsub,___fldiv@a
  2220  000B8E  C02C  F038         	movff	?___flsub+1,___fldiv@a+1
  2221  000B92  C02D  F039         	movff	?___flsub+2,___fldiv@a+2
  2222  000B96  C02E  F03A         	movff	?___flsub+3,___fldiv@a+3
  2223  000B9A  EC7E  F01D         	call	___fldiv	;wreg free
  2224  000B9E  C033  F1B4         	movff	?___fldiv,powf@z
  2225  000BA2  C034  F1B5         	movff	?___fldiv+1,powf@z+1
  2226  000BA6  C035  F1B6         	movff	?___fldiv+2,powf@z+2
  2227  000BAA  C036  F1B7         	movff	?___fldiv+3,powf@z+3
  2228  000BAE  D019               	goto	l3170
  2229  000BB0                     l3166:
  2230  000BB0  FFFF               	dw	65535	; assembler added errata NOP
  2231                           
  2232                           ; BSR set to: 1
  2233  000BB2  0550               	decf	powf@yisint& (0+255),w,b
  2234  000BB4  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
  2235  000BB6  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
  2236  000BB8  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
  2237  000BBA  A4D8               	btfss	status,2,c
  2238  000BBC  D012               	goto	l3170
  2239                           
  2240                           ; BSR set to: 1
  2241  000BBE  C1B4  F002         	movff	powf@z,___flneg@f1
  2242  000BC2  C1B5  F003         	movff	powf@z+1,___flneg@f1+1
  2243  000BC6  C1B6  F004         	movff	powf@z+2,___flneg@f1+2
  2244  000BCA  C1B7  F005         	movff	powf@z+3,___flneg@f1+3
  2245  000BCE  ECE6  F03F         	call	___flneg	;wreg free
  2246  000BD2  C002  F1B4         	movff	?___flneg,powf@z
  2247  000BD6  C003  F1B5         	movff	?___flneg+1,powf@z+1
  2248  000BDA  C004  F1B6         	movff	?___flneg+2,powf@z+2
  2249  000BDE  C005  F1B7         	movff	?___flneg+3,powf@z+3
  2250  000BE2                     l3170:
  2251  000BE2  FFFF               	dw	65535	; assembler added errata NOP
  2252  000BE4  C1B4  F061         	movff	powf@z,?_powf
  2253  000BE8  C1B5  F062         	movff	powf@z+1,?_powf+1
  2254  000BEC  C1B6  F063         	movff	powf@z+2,?_powf+2
  2255  000BF0  C1B7  F064         	movff	powf@z+3,?_powf+3
  2256  000BF4  EF89  F016         	goto	l831
  2257  000BF8                     l3174:
  2258  000BF8  FFFF               	dw	65535	; assembler added errata NOP
  2259                           
  2260                           ; BSR set to: 1
  2261  000BFA  0E00               	movlw	0
  2262  000BFC  6F88               	movwf	powf@sn& (0+255),b
  2263  000BFE  0E00               	movlw	0
  2264  000C00  6F89               	movwf	(powf@sn+1)& (0+255),b
  2265  000C02  0E80               	movlw	128
  2266  000C04  6F8A               	movwf	(powf@sn+2)& (0+255),b
  2267  000C06  0E3F               	movlw	63
  2268  000C08  6F8B               	movwf	(powf@sn+3)& (0+255),b
  2269                           
  2270                           ; BSR set to: 1
  2271  000C0A  AF63               	btfss	(powf@hx+3)& (0+255),7,b
  2272  000C0C  D056               	goto	l3188
  2273                           
  2274                           ; BSR set to: 1
  2275  000C0E  5150               	movf	powf@yisint& (0+255),w,b
  2276  000C10  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
  2277  000C12  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
  2278  000C14  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
  2279  000C16  A4D8               	btfss	status,2,c
  2280  000C18  D041               	goto	l3184
  2281                           
  2282                           ; BSR set to: 1
  2283  000C1A  C061  F02F         	movff	powf@x,___flsub@a
  2284  000C1E  C062  F030         	movff	powf@x+1,___flsub@a+1
  2285  000C22  C063  F031         	movff	powf@x+2,___flsub@a+2
  2286  000C26  C064  F032         	movff	powf@x+3,___flsub@a+3
  2287  000C2A  C061  F02B         	movff	powf@x,___flsub@b
  2288  000C2E  C062  F02C         	movff	powf@x+1,___flsub@b+1
  2289  000C32  C063  F02D         	movff	powf@x+2,___flsub@b+2
  2290  000C36  C064  F02E         	movff	powf@x+3,___flsub@b+3
  2291  000C3A  ECD7  F01F         	call	___flsub	;wreg free
  2292  000C3E  C02B  F033         	movff	?___flsub,___fldiv@b
  2293  000C42  C02C  F034         	movff	?___flsub+1,___fldiv@b+1
  2294  000C46  C02D  F035         	movff	?___flsub+2,___fldiv@b+2
  2295  000C4A  C02E  F036         	movff	?___flsub+3,___fldiv@b+3
  2296  000C4E  C061  F02F         	movff	powf@x,___flsub@a
  2297  000C52  C062  F030         	movff	powf@x+1,___flsub@a+1
  2298  000C56  C063  F031         	movff	powf@x+2,___flsub@a+2
  2299  000C5A  C064  F032         	movff	powf@x+3,___flsub@a+3
  2300  000C5E  C061  F02B         	movff	powf@x,___flsub@b
  2301  000C62  C062  F02C         	movff	powf@x+1,___flsub@b+1
  2302  000C66  C063  F02D         	movff	powf@x+2,___flsub@b+2
  2303  000C6A  C064  F02E         	movff	powf@x+3,___flsub@b+3
  2304  000C6E  ECD7  F01F         	call	___flsub	;wreg free
  2305  000C72  C02B  F037         	movff	?___flsub,___fldiv@a
  2306  000C76  C02C  F038         	movff	?___flsub+1,___fldiv@a+1
  2307  000C7A  C02D  F039         	movff	?___flsub+2,___fldiv@a+2
  2308  000C7E  C02E  F03A         	movff	?___flsub+3,___fldiv@a+3
  2309  000C82  EC7E  F01D         	call	___fldiv	;wreg free
  2310  000C86                     L3:
  2311  000C86  FFFF               	dw	65535	; assembler added errata NOP
  2312  000C88  C033  F061         	movff	?___fldiv,?_powf
  2313  000C8C  C034  F062         	movff	?___fldiv+1,?_powf+1
  2314  000C90  C035  F063         	movff	?___fldiv+2,?_powf+2
  2315  000C94  C036  F064         	movff	?___fldiv+3,?_powf+3
  2316  000C98  EF89  F016         	goto	l831
  2317  000C9C                     l3184:
  2318  000C9C  FFFF               	dw	65535	; assembler added errata NOP
  2319                           
  2320                           ; BSR set to: 1
  2321  000C9E  0550               	decf	powf@yisint& (0+255),w,b
  2322  000CA0  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
  2323  000CA2  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
  2324  000CA4  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
  2325  000CA6  A4D8               	btfss	status,2,c
  2326  000CA8  D008               	goto	l3188
  2327                           
  2328                           ; BSR set to: 1
  2329  000CAA  0E00               	movlw	0
  2330  000CAC  6F88               	movwf	powf@sn& (0+255),b
  2331  000CAE  0E00               	movlw	0
  2332  000CB0  6F89               	movwf	(powf@sn+1)& (0+255),b
  2333  000CB2  0E80               	movlw	128
  2334  000CB4  6F8A               	movwf	(powf@sn+2)& (0+255),b
  2335  000CB6  0EBF               	movlw	191
  2336  000CB8  6F8B               	movwf	(powf@sn+3)& (0+255),b
  2337  000CBA                     l3188:
  2338  000CBA  FFFF               	dw	65535	; assembler added errata NOP
  2339                           
  2340                           ; BSR set to: 1
  2341  000CBC  BF9B               	btfsc	(powf@iy+3)& (0+255),7,b
  2342  000CBE  D255               	goto	l3236
  2343  000CC0  0598               	decf	powf@iy& (0+255),w,b
  2344  000CC2  0E00               	movlw	0
  2345  000CC4  5999               	subwfb	(powf@iy+1)& (0+255),w,b
  2346  000CC6  0E00               	movlw	0
  2347  000CC8  599A               	subwfb	(powf@iy+2)& (0+255),w,b
  2348  000CCA  0E4D               	movlw	77
  2349  000CCC  599B               	subwfb	(powf@iy+3)& (0+255),w,b
  2350  000CCE  A0D8               	btfss	status,0,c
  2351  000CD0  D24C               	goto	l3236
  2352                           
  2353                           ; BSR set to: 1
  2354  000CD2  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  2355  000CD4  D00A               	goto	u3500
  2356  000CD6  0EF8               	movlw	248
  2357  000CD8  5DA8               	subwf	powf@ix& (0+255),w,b
  2358  000CDA  0EFF               	movlw	255
  2359  000CDC  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  2360  000CDE  0E7F               	movlw	127
  2361  000CE0  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  2362  000CE2  0E3F               	movlw	63
  2363  000CE4  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  2364  000CE6  B0D8               	btfsc	status,0,c
  2365  000CE8  D060               	goto	l3200
  2366  000CEA                     u3500:
  2367  000CEA  FFFF               	dw	65535	; assembler added errata NOP
  2368                           
  2369                           ; BSR set to: 1
  2370  000CEC  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  2371  000CEE  D02E               	goto	l3196
  2372                           
  2373                           ; BSR set to: 1
  2374  000CF0  0E60               	movlw	96
  2375  000CF2  6E16               	movwf	___flmul@a,c
  2376  000CF4  0E42               	movlw	66
  2377  000CF6  6E17               	movwf	___flmul@a+1,c
  2378  000CF8  0EA2               	movlw	162
  2379  000CFA  6E18               	movwf	___flmul@a+2,c
  2380  000CFC  0E0D               	movlw	13
  2381  000CFE  6E19               	movwf	___flmul@a+3,c
  2382  000D00  C188  F012         	movff	powf@sn,___flmul@b
  2383  000D04  C189  F013         	movff	powf@sn+1,___flmul@b+1
  2384  000D08  C18A  F014         	movff	powf@sn+2,___flmul@b+2
  2385  000D0C  C18B  F015         	movff	powf@sn+3,___flmul@b+3
  2386  000D10  ECB9  F018         	call	___flmul	;wreg free
  2387  000D14  C012  F1A4         	movff	?___flmul,_powf$873
  2388  000D18  C013  F1A5         	movff	?___flmul+1,_powf$873+1
  2389  000D1C  C014  F1A6         	movff	?___flmul+2,_powf$873+2
  2390  000D20  C015  F1A7         	movff	?___flmul+3,_powf$873+3
  2391  000D24  C1A4  F012         	movff	_powf$873,___flmul@b
  2392  000D28  C1A5  F013         	movff	_powf$873+1,___flmul@b+1
  2393  000D2C  C1A6  F014         	movff	_powf$873+2,___flmul@b+2
  2394  000D30  C1A7  F015         	movff	_powf$873+3,___flmul@b+3
  2395  000D34  0E60               	movlw	96
  2396  000D36  6E16               	movwf	___flmul@a,c
  2397  000D38  0E42               	movlw	66
  2398  000D3A  6E17               	movwf	___flmul@a+1,c
  2399  000D3C  0EA2               	movlw	162
  2400  000D3E  6E18               	movwf	___flmul@a+2,c
  2401  000D40  0E0D               	movlw	13
  2402  000D42  6E19               	movwf	___flmul@a+3,c
  2403  000D44  ECB9  F018         	call	___flmul	;wreg free
  2404  000D48  EF80  F016         	goto	L4
  2405  000D4C                     l3196:
  2406  000D4C  FFFF               	dw	65535	; assembler added errata NOP
  2407                           
  2408                           ; BSR set to: 1
  2409  000D4E  0ECA               	movlw	202
  2410  000D50  6E16               	movwf	___flmul@a,c
  2411  000D52  0EF2               	movlw	242
  2412  000D54  6E17               	movwf	___flmul@a+1,c
  2413  000D56  0E49               	movlw	73
  2414  000D58  6E18               	movwf	___flmul@a+2,c
  2415  000D5A  0E71               	movlw	113
  2416  000D5C  6E19               	movwf	___flmul@a+3,c
  2417  000D5E  C188  F012         	movff	powf@sn,___flmul@b
  2418  000D62  C189  F013         	movff	powf@sn+1,___flmul@b+1
  2419  000D66  C18A  F014         	movff	powf@sn+2,___flmul@b+2
  2420  000D6A  C18B  F015         	movff	powf@sn+3,___flmul@b+3
  2421  000D6E  ECB9  F018         	call	___flmul	;wreg free
  2422  000D72  C012  F1A4         	movff	?___flmul,_powf$873
  2423  000D76  C013  F1A5         	movff	?___flmul+1,_powf$873+1
  2424  000D7A  C014  F1A6         	movff	?___flmul+2,_powf$873+2
  2425  000D7E  C015  F1A7         	movff	?___flmul+3,_powf$873+3
  2426  000D82  C1A4  F012         	movff	_powf$873,___flmul@b
  2427  000D86  C1A5  F013         	movff	_powf$873+1,___flmul@b+1
  2428  000D8A  C1A6  F014         	movff	_powf$873+2,___flmul@b+2
  2429  000D8E  C1A7  F015         	movff	_powf$873+3,___flmul@b+3
  2430  000D92  0ECA               	movlw	202
  2431  000D94  6E16               	movwf	___flmul@a,c
  2432  000D96  0EF2               	movlw	242
  2433  000D98  6E17               	movwf	___flmul@a+1,c
  2434  000D9A  0E49               	movlw	73
  2435  000D9C  6E18               	movwf	___flmul@a+2,c
  2436  000D9E  0E71               	movlw	113
  2437  000DA0  6E19               	movwf	___flmul@a+3,c
  2438  000DA2  ECB9  F018         	call	___flmul	;wreg free
  2439  000DA6  EF80  F016         	goto	L4
  2440  000DAA                     l3200:
  2441  000DAA  FFFF               	dw	65535	; assembler added errata NOP
  2442                           
  2443                           ; BSR set to: 1
  2444  000DAC  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  2445  000DAE  D071               	goto	l3210
  2446  000DB0  0E08               	movlw	8
  2447  000DB2  5DA8               	subwf	powf@ix& (0+255),w,b
  2448  000DB4  0E00               	movlw	0
  2449  000DB6  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  2450  000DB8  0E80               	movlw	128
  2451  000DBA  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  2452  000DBC  0E3F               	movlw	63
  2453  000DBE  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  2454  000DC0  A0D8               	btfss	status,0,c
  2455  000DC2  D067               	goto	l3210
  2456                           
  2457                           ; BSR set to: 1
  2458  000DC4  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  2459  000DC6  D007               	goto	u3530
  2460  000DC8  5187               	movf	(powf@hy+3)& (0+255),w,b
  2461  000DCA  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  2462  000DCC  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  2463  000DCE  E132               	bnz	l3206
  2464  000DD0  0584               	decf	powf@hy& (0+255),w,b
  2465  000DD2  B0D8               	btfsc	status,0,c
  2466  000DD4  D02F               	goto	l3206
  2467  000DD6                     u3530:
  2468  000DD6  FFFF               	dw	65535	; assembler added errata NOP
  2469                           
  2470                           ; BSR set to: 1
  2471  000DD8  0E60               	movlw	96
  2472  000DDA  6E16               	movwf	___flmul@a,c
  2473  000DDC  0E42               	movlw	66
  2474  000DDE  6E17               	movwf	___flmul@a+1,c
  2475  000DE0  0EA2               	movlw	162
  2476  000DE2  6E18               	movwf	___flmul@a+2,c
  2477  000DE4  0E0D               	movlw	13
  2478  000DE6  6E19               	movwf	___flmul@a+3,c
  2479  000DE8  C188  F012         	movff	powf@sn,___flmul@b
  2480  000DEC  C189  F013         	movff	powf@sn+1,___flmul@b+1
  2481  000DF0  C18A  F014         	movff	powf@sn+2,___flmul@b+2
  2482  000DF4  C18B  F015         	movff	powf@sn+3,___flmul@b+3
  2483  000DF8  ECB9  F018         	call	___flmul	;wreg free
  2484  000DFC  C012  F1A4         	movff	?___flmul,_powf$873
  2485  000E00  C013  F1A5         	movff	?___flmul+1,_powf$873+1
  2486  000E04  C014  F1A6         	movff	?___flmul+2,_powf$873+2
  2487  000E08  C015  F1A7         	movff	?___flmul+3,_powf$873+3
  2488  000E0C  C1A4  F012         	movff	_powf$873,___flmul@b
  2489  000E10  C1A5  F013         	movff	_powf$873+1,___flmul@b+1
  2490  000E14  C1A6  F014         	movff	_powf$873+2,___flmul@b+2
  2491  000E18  C1A7  F015         	movff	_powf$873+3,___flmul@b+3
  2492  000E1C  0E60               	movlw	96
  2493  000E1E  6E16               	movwf	___flmul@a,c
  2494  000E20  0E42               	movlw	66
  2495  000E22  6E17               	movwf	___flmul@a+1,c
  2496  000E24  0EA2               	movlw	162
  2497  000E26  6E18               	movwf	___flmul@a+2,c
  2498  000E28  0E0D               	movlw	13
  2499  000E2A  6E19               	movwf	___flmul@a+3,c
  2500  000E2C  ECB9  F018         	call	___flmul	;wreg free
  2501  000E30  EF80  F016         	goto	L4
  2502  000E34                     l3206:
  2503  000E34  FFFF               	dw	65535	; assembler added errata NOP
  2504                           
  2505                           ; BSR set to: 1
  2506  000E36  0ECA               	movlw	202
  2507  000E38  6E16               	movwf	___flmul@a,c
  2508  000E3A  0EF2               	movlw	242
  2509  000E3C  6E17               	movwf	___flmul@a+1,c
  2510  000E3E  0E49               	movlw	73
  2511  000E40  6E18               	movwf	___flmul@a+2,c
  2512  000E42  0E71               	movlw	113
  2513  000E44  6E19               	movwf	___flmul@a+3,c
  2514  000E46  C188  F012         	movff	powf@sn,___flmul@b
  2515  000E4A  C189  F013         	movff	powf@sn+1,___flmul@b+1
  2516  000E4E  C18A  F014         	movff	powf@sn+2,___flmul@b+2
  2517  000E52  C18B  F015         	movff	powf@sn+3,___flmul@b+3
  2518  000E56  ECB9  F018         	call	___flmul	;wreg free
  2519  000E5A  C012  F1A4         	movff	?___flmul,_powf$873
  2520  000E5E  C013  F1A5         	movff	?___flmul+1,_powf$873+1
  2521  000E62  C014  F1A6         	movff	?___flmul+2,_powf$873+2
  2522  000E66  C015  F1A7         	movff	?___flmul+3,_powf$873+3
  2523  000E6A  C1A4  F012         	movff	_powf$873,___flmul@b
  2524  000E6E  C1A5  F013         	movff	_powf$873+1,___flmul@b+1
  2525  000E72  C1A6  F014         	movff	_powf$873+2,___flmul@b+2
  2526  000E76  C1A7  F015         	movff	_powf$873+3,___flmul@b+3
  2527  000E7A  0ECA               	movlw	202
  2528  000E7C  6E16               	movwf	___flmul@a,c
  2529  000E7E  0EF2               	movlw	242
  2530  000E80  6E17               	movwf	___flmul@a+1,c
  2531  000E82  0E49               	movlw	73
  2532  000E84  6E18               	movwf	___flmul@a+2,c
  2533  000E86  0E71               	movlw	113
  2534  000E88  6E19               	movwf	___flmul@a+3,c
  2535  000E8A  ECB9  F018         	call	___flmul	;wreg free
  2536  000E8E  EF80  F016         	goto	L4
  2537  000E92                     l3210:
  2538  000E92  FFFF               	dw	65535	; assembler added errata NOP
  2539                           
  2540                           ; BSR set to: 1
  2541  000E94  C170  F002         	movff	powf@ax,___fladd@b
  2542  000E98  C171  F003         	movff	powf@ax+1,___fladd@b+1
  2543  000E9C  C172  F004         	movff	powf@ax+2,___fladd@b+2
  2544  000EA0  C173  F005         	movff	powf@ax+3,___fladd@b+3
  2545  000EA4  0E00               	movlw	0
  2546  000EA6  6E06               	movwf	___fladd@a,c
  2547  000EA8  0E00               	movlw	0
  2548  000EAA  6E07               	movwf	___fladd@a+1,c
  2549  000EAC  0E80               	movlw	128
  2550  000EAE  6E08               	movwf	___fladd@a+2,c
  2551  000EB0  0EBF               	movlw	191
  2552  000EB2  6E09               	movwf	___fladd@a+3,c
  2553  000EB4  EC7A  F01A         	call	___fladd	;wreg free
  2554  000EB8  C002  F1B0         	movff	?___fladd,powf@t
  2555  000EBC  C003  F1B1         	movff	?___fladd+1,powf@t+1
  2556  000EC0  C004  F1B2         	movff	?___fladd+2,powf@t+2
  2557  000EC4  C005  F1B3         	movff	?___fladd+3,powf@t+3
  2558  000EC8  0E00               	movlw	0
  2559  000ECA  6E16               	movwf	___flmul@a,c
  2560  000ECC  0E00               	movlw	0
  2561  000ECE  6E17               	movwf	___flmul@a+1,c
  2562  000ED0  0E80               	movlw	128
  2563  000ED2  6E18               	movwf	___flmul@a+2,c
  2564  000ED4  0E3E               	movlw	62
  2565  000ED6  6E19               	movwf	___flmul@a+3,c
  2566  000ED8  C1B0  F012         	movff	powf@t,___flmul@b
  2567  000EDC  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  2568  000EE0  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  2569  000EE4  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  2570  000EE8  ECB9  F018         	call	___flmul	;wreg free
  2571  000EEC  C012  F02F         	movff	?___flmul,___flsub@a
  2572  000EF0  C013  F030         	movff	?___flmul+1,___flsub@a+1
  2573  000EF4  C014  F031         	movff	?___flmul+2,___flsub@a+2
  2574  000EF8  C015  F032         	movff	?___flmul+3,___flsub@a+3
  2575  000EFC  0EAB               	movlw	171
  2576  000EFE  6E2B               	movwf	___flsub@b,c
  2577  000F00  0EAA               	movlw	170
  2578  000F02  6E2C               	movwf	___flsub@b+1,c
  2579  000F04  0EAA               	movlw	170
  2580  000F06  6E2D               	movwf	___flsub@b+2,c
  2581  000F08  0E3E               	movlw	62
  2582  000F0A  6E2E               	movwf	___flsub@b+3,c
  2583  000F0C  ECD7  F01F         	call	___flsub	;wreg free
  2584  000F10  C02B  F1A4         	movff	?___flsub,_powf$873
  2585  000F14  C02C  F1A5         	movff	?___flsub+1,_powf$873+1
  2586  000F18  C02D  F1A6         	movff	?___flsub+2,_powf$873+2
  2587  000F1C  C02E  F1A7         	movff	?___flsub+3,_powf$873+3
  2588  000F20  C1B0  F016         	movff	powf@t,___flmul@a
  2589  000F24  C1B1  F017         	movff	powf@t+1,___flmul@a+1
  2590  000F28  C1B2  F018         	movff	powf@t+2,___flmul@a+2
  2591  000F2C  C1B3  F019         	movff	powf@t+3,___flmul@a+3
  2592  000F30  C1B0  F012         	movff	powf@t,___flmul@b
  2593  000F34  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  2594  000F38  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  2595  000F3C  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  2596  000F40  ECB9  F018         	call	___flmul	;wreg free
  2597  000F44  C012  F154         	movff	?___flmul,_powf$874
  2598  000F48  C013  F155         	movff	?___flmul+1,_powf$874+1
  2599  000F4C  C014  F156         	movff	?___flmul+2,_powf$874+2
  2600  000F50  C015  F157         	movff	?___flmul+3,_powf$874+3
  2601  000F54  C1B0  F016         	movff	powf@t,___flmul@a
  2602  000F58  C1B1  F017         	movff	powf@t+1,___flmul@a+1
  2603  000F5C  C1B2  F018         	movff	powf@t+2,___flmul@a+2
  2604  000F60  C1B3  F019         	movff	powf@t+3,___flmul@a+3
  2605  000F64  C1A4  F012         	movff	_powf$873,___flmul@b
  2606  000F68  C1A5  F013         	movff	_powf$873+1,___flmul@b+1
  2607  000F6C  C1A6  F014         	movff	_powf$873+2,___flmul@b+2
  2608  000F70  C1A7  F015         	movff	_powf$873+3,___flmul@b+3
  2609  000F74  ECB9  F018         	call	___flmul	;wreg free
  2610  000F78  C012  F02F         	movff	?___flmul,___flsub@a
  2611  000F7C  C013  F030         	movff	?___flmul+1,___flsub@a+1
  2612  000F80  C014  F031         	movff	?___flmul+2,___flsub@a+2
  2613  000F84  C015  F032         	movff	?___flmul+3,___flsub@a+3
  2614  000F88  0E00               	movlw	0
  2615  000F8A  6E2B               	movwf	___flsub@b,c
  2616  000F8C  0E00               	movlw	0
  2617  000F8E  6E2C               	movwf	___flsub@b+1,c
  2618  000F90  0E00               	movlw	0
  2619  000F92  6E2D               	movwf	___flsub@b+2,c
  2620  000F94  0E3F               	movlw	63
  2621  000F96  6E2E               	movwf	___flsub@b+3,c
  2622  000F98  ECD7  F01F         	call	___flsub	;wreg free
  2623  000F9C  C02B  F148         	movff	?___flsub,_powf$875
  2624  000FA0  C02C  F149         	movff	?___flsub+1,_powf$875+1
  2625  000FA4  C02D  F14A         	movff	?___flsub+2,_powf$875+2
  2626  000FA8  C02E  F14B         	movff	?___flsub+3,_powf$875+3
  2627  000FAC  C154  F012         	movff	_powf$874,___flmul@b
  2628  000FB0  C155  F013         	movff	_powf$874+1,___flmul@b+1
  2629  000FB4  C156  F014         	movff	_powf$874+2,___flmul@b+2
  2630  000FB8  C157  F015         	movff	_powf$874+3,___flmul@b+3
  2631  000FBC  C148  F016         	movff	_powf$875,___flmul@a
  2632  000FC0  C149  F017         	movff	_powf$875+1,___flmul@a+1
  2633  000FC4  C14A  F018         	movff	_powf$875+2,___flmul@a+2
  2634  000FC8  C14B  F019         	movff	_powf$875+3,___flmul@a+3
  2635  000FCC  ECB9  F018         	call	___flmul	;wreg free
  2636  000FD0  C012  F144         	movff	?___flmul,powf@w
  2637  000FD4  C013  F145         	movff	?___flmul+1,powf@w+1
  2638  000FD8  C014  F146         	movff	?___flmul+2,powf@w+2
  2639  000FDC  C015  F147         	movff	?___flmul+3,powf@w+3
  2640  000FE0  C1B0  F012         	movff	powf@t,___flmul@b
  2641  000FE4  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  2642  000FE8  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  2643  000FEC  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  2644  000FF0  0E00               	movlw	0
  2645  000FF2  6E16               	movwf	___flmul@a,c
  2646  000FF4  0EAA               	movlw	170
  2647  000FF6  6E17               	movwf	___flmul@a+1,c
  2648  000FF8  0EB8               	movlw	184
  2649  000FFA  6E18               	movwf	___flmul@a+2,c
  2650  000FFC  0E3F               	movlw	63
  2651  000FFE  6E19               	movwf	___flmul@a+3,c
  2652  001000  ECB9  F018         	call	___flmul	;wreg free
  2653  001004  C012  F174         	movff	?___flmul,powf@u
  2654  001008  C013  F175         	movff	?___flmul+1,powf@u+1
  2655  00100C  C014  F176         	movff	?___flmul+2,powf@u+2
  2656  001010  C015  F177         	movff	?___flmul+3,powf@u+3
  2657  001014  0E70               	movlw	112
  2658  001016  6E16               	movwf	___flmul@a,c
  2659  001018  0EA5               	movlw	165
  2660  00101A  6E17               	movwf	___flmul@a+1,c
  2661  00101C  0EEC               	movlw	236
  2662  00101E  6E18               	movwf	___flmul@a+2,c
  2663  001020  0E36               	movlw	54
  2664  001022  6E19               	movwf	___flmul@a+3,c
  2665  001024  C1B0  F012         	movff	powf@t,___flmul@b
  2666  001028  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  2667  00102C  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  2668  001030  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  2669  001034  ECB9  F018         	call	___flmul	;wreg free
  2670  001038  C012  F02B         	movff	?___flmul,___flsub@b
  2671  00103C  C013  F02C         	movff	?___flmul+1,___flsub@b+1
  2672  001040  C014  F02D         	movff	?___flmul+2,___flsub@b+2
  2673  001044  C015  F02E         	movff	?___flmul+3,___flsub@b+3
  2674  001048  0E3B               	movlw	59
  2675  00104A  6E16               	movwf	___flmul@a,c
  2676  00104C  0EAA               	movlw	170
  2677  00104E  6E17               	movwf	___flmul@a+1,c
  2678  001050  0EB8               	movlw	184
  2679  001052  6E18               	movwf	___flmul@a+2,c
  2680  001054  0E3F               	movlw	63
  2681  001056  6E19               	movwf	___flmul@a+3,c
  2682  001058  C144  F012         	movff	powf@w,___flmul@b
  2683  00105C  C145  F013         	movff	powf@w+1,___flmul@b+1
  2684  001060  C146  F014         	movff	powf@w+2,___flmul@b+2
  2685  001064  C147  F015         	movff	powf@w+3,___flmul@b+3
  2686  001068  ECB9  F018         	call	___flmul	;wreg free
  2687  00106C  C012  F02F         	movff	?___flmul,___flsub@a
  2688  001070  C013  F030         	movff	?___flmul+1,___flsub@a+1
  2689  001074  C014  F031         	movff	?___flmul+2,___flsub@a+2
  2690  001078  C015  F032         	movff	?___flmul+3,___flsub@a+3
  2691  00107C  ECD7  F01F         	call	___flsub	;wreg free
  2692  001080  C02B  F178         	movff	?___flsub,powf@v
  2693  001084  C02C  F179         	movff	?___flsub+1,powf@v+1
  2694  001088  C02D  F17A         	movff	?___flsub+2,powf@v+2
  2695  00108C  C02E  F17B         	movff	?___flsub+3,powf@v+3
  2696  001090  C174  F002         	movff	powf@u,___fladd@b
  2697  001094  C175  F003         	movff	powf@u+1,___fladd@b+1
  2698  001098  C176  F004         	movff	powf@u+2,___fladd@b+2
  2699  00109C  C177  F005         	movff	powf@u+3,___fladd@b+3
  2700  0010A0  C178  F006         	movff	powf@v,___fladd@a
  2701  0010A4  C179  F007         	movff	powf@v+1,___fladd@a+1
  2702  0010A8  C17A  F008         	movff	powf@v+2,___fladd@a+2
  2703  0010AC  C17B  F009         	movff	powf@v+3,___fladd@a+3
  2704  0010B0  EC7A  F01A         	call	___fladd	;wreg free
  2705  0010B4  C002  F180         	movff	?___fladd,powf@t1
  2706  0010B8  C003  F181         	movff	?___fladd+1,powf@t1+1
  2707  0010BC  C004  F182         	movff	?___fladd+2,powf@t1+2
  2708  0010C0  C005  F183         	movff	?___fladd+3,powf@t1+3
  2709  0010C4  C180  F1B8         	movff	powf@t1,powf@__xc8_float_word
  2710  0010C8  C181  F1B9         	movff	powf@t1+1,powf@__xc8_float_word+1
  2711  0010CC  C182  F1BA         	movff	powf@t1+2,powf@__xc8_float_word+2
  2712  0010D0  C183  F1BB         	movff	powf@t1+3,powf@__xc8_float_word+3
  2713  0010D4  C1B8  F190         	movff	powf@__xc8_float_word,powf@is
  2714  0010D8  C1B9  F191         	movff	powf@__xc8_float_word+1,powf@is+1
  2715  0010DC  C1BA  F192         	movff	powf@__xc8_float_word+2,powf@is+2
  2716  0010E0  C1BB  F193         	movff	powf@__xc8_float_word+3,powf@is+3
  2717  0010E4  0E00               	movlw	0
  2718  0010E6  0101               	movlb	1	; () banked
  2719  0010E8  1590               	andwf	powf@is& (0+255),w,b
  2720  0010EA  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  2721  0010EC  0EF0               	movlw	240
  2722  0010EE  1591               	andwf	(powf@is+1)& (0+255),w,b
  2723  0010F0  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  2724  0010F2  0EFF               	movlw	255
  2725  0010F4  1592               	andwf	(powf@is+2)& (0+255),w,b
  2726  0010F6  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  2727  0010F8  0EFF               	movlw	255
  2728  0010FA  1593               	andwf	(powf@is+3)& (0+255),w,b
  2729  0010FC  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  2730                           
  2731                           ; BSR set to: 1
  2732  0010FE  C1B8  F180         	movff	powf@__xc8_float_word,powf@t1
  2733  001102  C1B9  F181         	movff	powf@__xc8_float_word+1,powf@t1+1
  2734  001106  C1BA  F182         	movff	powf@__xc8_float_word+2,powf@t1+2
  2735  00110A  C1BB  F183         	movff	powf@__xc8_float_word+3,powf@t1+3
  2736                           
  2737                           ; BSR set to: 1
  2738  00110E  C174  F02F         	movff	powf@u,___flsub@a
  2739  001112  C175  F030         	movff	powf@u+1,___flsub@a+1
  2740  001116  C176  F031         	movff	powf@u+2,___flsub@a+2
  2741  00111A  C177  F032         	movff	powf@u+3,___flsub@a+3
  2742  00111E  C180  F02B         	movff	powf@t1,___flsub@b
  2743  001122  C181  F02C         	movff	powf@t1+1,___flsub@b+1
  2744  001126  C182  F02D         	movff	powf@t1+2,___flsub@b+2
  2745  00112A  C183  F02E         	movff	powf@t1+3,___flsub@b+3
  2746  00112E  ECD7  F01F         	call	___flsub	;wreg free
  2747  001132  C02B  F194         	movff	?___flsub,_powf$876
  2748  001136  C02C  F195         	movff	?___flsub+1,_powf$876+1
  2749  00113A  C02D  F196         	movff	?___flsub+2,_powf$876+2
  2750  00113E  C02E  F197         	movff	?___flsub+3,_powf$876+3
  2751  001142  C178  F02B         	movff	powf@v,___flsub@b
  2752  001146  C179  F02C         	movff	powf@v+1,___flsub@b+1
  2753  00114A  C17A  F02D         	movff	powf@v+2,___flsub@b+2
  2754  00114E  C17B  F02E         	movff	powf@v+3,___flsub@b+3
  2755  001152  C194  F02F         	movff	_powf$876,___flsub@a
  2756  001156  C195  F030         	movff	_powf$876+1,___flsub@a+1
  2757  00115A  C196  F031         	movff	_powf$876+2,___flsub@a+2
  2758  00115E  C197  F032         	movff	_powf$876+3,___flsub@a+3
  2759  001162  ECD7  F01F         	call	___flsub	;wreg free
  2760  001166  EFFB  F00F         	goto	L5
  2761  00116A                     l3236:
  2762  00116A  FFFF               	dw	65535	; assembler added errata NOP
  2763                           
  2764                           ; BSR set to: 1
  2765  00116C  0E00               	movlw	0
  2766  00116E  6F7C               	movwf	powf@n& (0+255),b
  2767  001170  0E00               	movlw	0
  2768  001172  6F7D               	movwf	(powf@n+1)& (0+255),b
  2769  001174  0E00               	movlw	0
  2770  001176  6F7E               	movwf	(powf@n+2)& (0+255),b
  2771  001178  0E00               	movlw	0
  2772  00117A  6F7F               	movwf	(powf@n+3)& (0+255),b
  2773                           
  2774                           ; BSR set to: 1
  2775  00117C  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  2776  00117E  D006               	goto	u3540
  2777  001180  51AB               	movf	(powf@ix+3)& (0+255),w,b
  2778  001182  E138               	bnz	l3248
  2779  001184  0E80               	movlw	128
  2780  001186  5DAA               	subwf	(powf@ix+2)& (0+255),w,b
  2781  001188  B0D8               	btfsc	status,0,c
  2782  00118A  D034               	goto	l3248
  2783  00118C                     u3540:
  2784  00118C  FFFF               	dw	65535	; assembler added errata NOP
  2785                           
  2786                           ; BSR set to: 1
  2787  00118E  C170  F012         	movff	powf@ax,___flmul@b
  2788  001192  C171  F013         	movff	powf@ax+1,___flmul@b+1
  2789  001196  C172  F014         	movff	powf@ax+2,___flmul@b+2
  2790  00119A  C173  F015         	movff	powf@ax+3,___flmul@b+3
  2791  00119E  0E00               	movlw	0
  2792  0011A0  6E16               	movwf	___flmul@a,c
  2793  0011A2  0E00               	movlw	0
  2794  0011A4  6E17               	movwf	___flmul@a+1,c
  2795  0011A6  0E80               	movlw	128
  2796  0011A8  6E18               	movwf	___flmul@a+2,c
  2797  0011AA  0E4B               	movlw	75
  2798  0011AC  6E19               	movwf	___flmul@a+3,c
  2799  0011AE  ECB9  F018         	call	___flmul	;wreg free
  2800  0011B2  C012  F170         	movff	?___flmul,powf@ax
  2801  0011B6  C013  F171         	movff	?___flmul+1,powf@ax+1
  2802  0011BA  C014  F172         	movff	?___flmul+2,powf@ax+2
  2803  0011BE  C015  F173         	movff	?___flmul+3,powf@ax+3
  2804  0011C2  0EE8               	movlw	232
  2805  0011C4  0101               	movlb	1	; () banked
  2806  0011C6  277C               	addwf	powf@n& (0+255),f,b
  2807  0011C8  0EFF               	movlw	255
  2808  0011CA  237D               	addwfc	(powf@n+1)& (0+255),f,b
  2809  0011CC  0EFF               	movlw	255
  2810  0011CE  237E               	addwfc	(powf@n+2)& (0+255),f,b
  2811  0011D0  0EFF               	movlw	255
  2812  0011D2  237F               	addwfc	(powf@n+3)& (0+255),f,b
  2813                           
  2814                           ; BSR set to: 1
  2815  0011D4  C170  F1B8         	movff	powf@ax,powf@__xc8_float_word
  2816  0011D8  C171  F1B9         	movff	powf@ax+1,powf@__xc8_float_word+1
  2817  0011DC  C172  F1BA         	movff	powf@ax+2,powf@__xc8_float_word+2
  2818  0011E0  C173  F1BB         	movff	powf@ax+3,powf@__xc8_float_word+3
  2819                           
  2820                           ; BSR set to: 1
  2821  0011E4  C1B8  F1A8         	movff	powf@__xc8_float_word,powf@ix
  2822  0011E8  C1B9  F1A9         	movff	powf@__xc8_float_word+1,powf@ix+1
  2823  0011EC  C1BA  F1AA         	movff	powf@__xc8_float_word+2,powf@ix+2
  2824  0011F0  C1BB  F1AB         	movff	powf@__xc8_float_word+3,powf@ix+3
  2825  0011F4                     l3248:
  2826  0011F4  FFFF               	dw	65535	; assembler added errata NOP
  2827                           
  2828                           ; BSR set to: 1
  2829  0011F6  0E17               	movlw	23
  2830  0011F8  6E69               	movwf	??_powf& (0+255),c
  2831  0011FA  C1A8  F06A         	movff	powf@ix,??_powf+1
  2832  0011FE  C1A9  F06B         	movff	powf@ix+1,??_powf+2
  2833  001202  C1AA  F06C         	movff	powf@ix+2,??_powf+3
  2834  001206  C1AB  F06D         	movff	powf@ix+3,??_powf+4
  2835  00120A                     u3555:
  2836  00120A  FFFF               	dw	65535	; assembler added errata NOP
  2837  00120C  6669               	tstfsz	??_powf,c
  2838  00120E  D001               	goto	u3556
  2839  001210  D008               	goto	u3557
  2840  001212                     u3556:
  2841  001212  FFFF               	dw	65535	; assembler added errata NOP
  2842  001214  346D               	rlcf	??_powf+4,w,c
  2843  001216  326D               	rrcf	??_powf+4,f,c
  2844  001218  326C               	rrcf	??_powf+3,f,c
  2845  00121A  326B               	rrcf	??_powf+2,f,c
  2846  00121C  326A               	rrcf	??_powf+1,f,c
  2847  00121E  2E69               	decfsz	??_powf,f,c
  2848  001220  D7F4               	goto	u3555
  2849  001222                     u3557:
  2850  001222  FFFF               	dw	65535	; assembler added errata NOP
  2851  001224  0E81               	movlw	129
  2852  001226  246A               	addwf	??_powf+1,w,c
  2853  001228  6E6E               	movwf	(??_powf+5)& (0+255),c
  2854  00122A  0EFF               	movlw	255
  2855  00122C  206B               	addwfc	??_powf+2,w,c
  2856  00122E  6E6F               	movwf	(??_powf+6)& (0+255),c
  2857  001230  0EFF               	movlw	255
  2858  001232  206C               	addwfc	??_powf+3,w,c
  2859  001234  6E70               	movwf	(??_powf+7)& (0+255),c
  2860  001236  0EFF               	movlw	255
  2861  001238  206D               	addwfc	??_powf+4,w,c
  2862  00123A  6E71               	movwf	(??_powf+8)& (0+255),c
  2863  00123C  506E               	movf	??_powf+5,w,c
  2864  00123E  0101               	movlb	1	; () banked
  2865  001240  277C               	addwf	powf@n& (0+255),f,b
  2866  001242  506F               	movf	??_powf+6,w,c
  2867  001244  237D               	addwfc	(powf@n+1)& (0+255),f,b
  2868  001246  5070               	movf	??_powf+7,w,c
  2869  001248  237E               	addwfc	(powf@n+2)& (0+255),f,b
  2870  00124A  5071               	movf	??_powf+8,w,c
  2871  00124C  237F               	addwfc	(powf@n+3)& (0+255),f,b
  2872                           
  2873                           ; BSR set to: 1
  2874  00124E  0EFF               	movlw	255
  2875  001250  15A8               	andwf	powf@ix& (0+255),w,b
  2876  001252  6FAC               	movwf	powf@j& (0+255),b
  2877  001254  0EFF               	movlw	255
  2878  001256  15A9               	andwf	(powf@ix+1)& (0+255),w,b
  2879  001258  6FAD               	movwf	(powf@j+1)& (0+255),b
  2880  00125A  0E7F               	movlw	127
  2881  00125C  15AA               	andwf	(powf@ix+2)& (0+255),w,b
  2882  00125E  6FAE               	movwf	(powf@j+2)& (0+255),b
  2883  001260  0E00               	movlw	0
  2884  001262  15AB               	andwf	(powf@ix+3)& (0+255),w,b
  2885  001264  6FAF               	movwf	(powf@j+3)& (0+255),b
  2886                           
  2887                           ; BSR set to: 1
  2888  001266  0E00               	movlw	0
  2889  001268  11AC               	iorwf	powf@j& (0+255),w,b
  2890  00126A  6FA8               	movwf	powf@ix& (0+255),b
  2891  00126C  0E00               	movlw	0
  2892  00126E  11AD               	iorwf	(powf@j+1)& (0+255),w,b
  2893  001270  6FA9               	movwf	(powf@ix+1)& (0+255),b
  2894  001272  0E80               	movlw	128
  2895  001274  11AE               	iorwf	(powf@j+2)& (0+255),w,b
  2896  001276  6FAA               	movwf	(powf@ix+2)& (0+255),b
  2897  001278  0E3F               	movlw	63
  2898  00127A  11AF               	iorwf	(powf@j+3)& (0+255),w,b
  2899  00127C  6FAB               	movwf	(powf@ix+3)& (0+255),b
  2900                           
  2901                           ; BSR set to: 1
  2902  00127E  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
  2903  001280  D00A               	goto	u3560
  2904  001282  51AF               	movf	(powf@j+3)& (0+255),w,b
  2905  001284  E10B               	bnz	l3258
  2906  001286  0E72               	movlw	114
  2907  001288  5DAC               	subwf	powf@j& (0+255),w,b
  2908  00128A  0EC4               	movlw	196
  2909  00128C  59AD               	subwfb	(powf@j+1)& (0+255),w,b
  2910  00128E  0E1C               	movlw	28
  2911  001290  59AE               	subwfb	(powf@j+2)& (0+255),w,b
  2912  001292  B0D8               	btfsc	status,0,c
  2913  001294  D003               	goto	l3258
  2914  001296                     u3560:
  2915  001296  FFFF               	dw	65535	; assembler added errata NOP
  2916                           
  2917                           ; BSR set to: 1
  2918  001298  0E00               	movlw	0
  2919  00129A  D00F               	goto	L6
  2920  00129C                     l3258:
  2921  00129C  FFFF               	dw	65535	; assembler added errata NOP
  2922                           
  2923                           ; BSR set to: 1
  2924  00129E  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
  2925  0012A0  D00A               	goto	u3570
  2926  0012A2  51AF               	movf	(powf@j+3)& (0+255),w,b
  2927  0012A4  E113               	bnz	l3262
  2928  0012A6  0ED7               	movlw	215
  2929  0012A8  5DAC               	subwf	powf@j& (0+255),w,b
  2930  0012AA  0EB3               	movlw	179
  2931  0012AC  59AD               	subwfb	(powf@j+1)& (0+255),w,b
  2932  0012AE  0E5D               	movlw	93
  2933  0012B0  59AE               	subwfb	(powf@j+2)& (0+255),w,b
  2934  0012B2  B0D8               	btfsc	status,0,c
  2935  0012B4  D00B               	goto	l3262
  2936  0012B6                     u3570:
  2937  0012B6  FFFF               	dw	65535	; assembler added errata NOP
  2938                           
  2939                           ; BSR set to: 1
  2940  0012B8  0E01               	movlw	1
  2941  0012BA                     L6:
  2942  0012BA  FFFF               	dw	65535	; assembler added errata NOP
  2943  0012BC  6FA0               	movwf	powf@k& (0+255),b
  2944  0012BE  0E00               	movlw	0
  2945  0012C0  6FA1               	movwf	(powf@k+1)& (0+255),b
  2946  0012C2  0E00               	movlw	0
  2947  0012C4  6FA2               	movwf	(powf@k+2)& (0+255),b
  2948  0012C6  0E00               	movlw	0
  2949  0012C8  6FA3               	movwf	(powf@k+3)& (0+255),b
  2950  0012CA  D017               	goto	l3268
  2951  0012CC                     l3262:
  2952  0012CC  FFFF               	dw	65535	; assembler added errata NOP
  2953                           
  2954                           ; BSR set to: 1
  2955  0012CE  0E00               	movlw	0
  2956  0012D0  6FA0               	movwf	powf@k& (0+255),b
  2957  0012D2  0E00               	movlw	0
  2958  0012D4  6FA1               	movwf	(powf@k+1)& (0+255),b
  2959  0012D6  0E00               	movlw	0
  2960  0012D8  6FA2               	movwf	(powf@k+2)& (0+255),b
  2961  0012DA  0E00               	movlw	0
  2962  0012DC  6FA3               	movwf	(powf@k+3)& (0+255),b
  2963                           
  2964                           ; BSR set to: 1
  2965  0012DE  0E01               	movlw	1
  2966  0012E0  277C               	addwf	powf@n& (0+255),f,b
  2967  0012E2  0E00               	movlw	0
  2968  0012E4  237D               	addwfc	(powf@n+1)& (0+255),f,b
  2969  0012E6  237E               	addwfc	(powf@n+2)& (0+255),f,b
  2970  0012E8  237F               	addwfc	(powf@n+3)& (0+255),f,b
  2971                           
  2972                           ; BSR set to: 1
  2973  0012EA  0E00               	movlw	0
  2974  0012EC  27A8               	addwf	powf@ix& (0+255),f,b
  2975  0012EE  0E00               	movlw	0
  2976  0012F0  23A9               	addwfc	(powf@ix+1)& (0+255),f,b
  2977  0012F2  0E80               	movlw	128
  2978  0012F4  23AA               	addwfc	(powf@ix+2)& (0+255),f,b
  2979  0012F6  0EFF               	movlw	255
  2980  0012F8  23AB               	addwfc	(powf@ix+3)& (0+255),f,b
  2981  0012FA                     l3268:
  2982  0012FA  FFFF               	dw	65535	; assembler added errata NOP
  2983                           
  2984                           ; BSR set to: 1
  2985  0012FC  C1A8  F1B8         	movff	powf@ix,powf@__xc8_float_word
  2986  001300  C1A9  F1B9         	movff	powf@ix+1,powf@__xc8_float_word+1
  2987  001304  C1AA  F1BA         	movff	powf@ix+2,powf@__xc8_float_word+2
  2988  001308  C1AB  F1BB         	movff	powf@ix+3,powf@__xc8_float_word+3
  2989                           
  2990                           ; BSR set to: 1
  2991  00130C  C1B8  F170         	movff	powf@__xc8_float_word,powf@ax
  2992  001310  C1B9  F171         	movff	powf@__xc8_float_word+1,powf@ax+1
  2993  001314  C1BA  F172         	movff	powf@__xc8_float_word+2,powf@ax+2
  2994  001318  C1BB  F173         	movff	powf@__xc8_float_word+3,powf@ax+3
  2995                           
  2996                           ; BSR set to: 1
  2997  00131C  C170  F02B         	movff	powf@ax,___flsub@b
  2998  001320  C171  F02C         	movff	powf@ax+1,___flsub@b+1
  2999  001324  C172  F02D         	movff	powf@ax+2,___flsub@b+2
  3000  001328  C173  F02E         	movff	powf@ax+3,___flsub@b+3
  3001  00132C  C1A0  F069         	movff	powf@k,??_powf
  3002  001330  C1A1  F06A         	movff	powf@k+1,??_powf+1
  3003  001334  90D8               	bcf	status,0,c
  3004  001336  3669               	rlcf	??_powf,f,c
  3005  001338  366A               	rlcf	??_powf+1,f,c
  3006  00133A  90D8               	bcf	status,0,c
  3007  00133C  3669               	rlcf	??_powf,f,c
  3008  00133E  366A               	rlcf	??_powf+1,f,c
  3009  001340  0E69               	movlw	low _bp
  3010  001342  2469               	addwf	??_powf,w,c
  3011  001344  6EF6               	movwf	tblptrl,c
  3012  001346  0E06               	movlw	high _bp
  3013  001348  206A               	addwfc	??_powf+1,w,c
  3014  00134A  6EF7               	movwf	tblptrh,c
  3015  00134C                     	if	0	;There are less than 3 active tblptr bytes
  3016  00134C                     	endif
  3017  00134C  0009               	tblrd		*+
  3018  00134E  FFFF               	dw	65535	; errata NOP
  3019  001350  CFF5 F02F          	movff	tablat,___flsub@a
  3020  001354  0009               	tblrd		*+
  3021  001356  FFFF               	dw	65535	; errata NOP
  3022  001358  CFF5 F030          	movff	tablat,___flsub@a+1
  3023  00135C  0009               	tblrd		*+
  3024  00135E  FFFF               	dw	65535	; errata NOP
  3025  001360  CFF5 F031          	movff	tablat,___flsub@a+2
  3026  001364  000A               	tblrd		*-
  3027  001366  FFFF               	dw	65535	; errata NOP
  3028  001368  CFF5 F032          	movff	tablat,___flsub@a+3
  3029  00136C  ECD7  F01F         	call	___flsub	;wreg free
  3030  001370  C02B  F174         	movff	?___flsub,powf@u
  3031  001374  C02C  F175         	movff	?___flsub+1,powf@u+1
  3032  001378  C02D  F176         	movff	?___flsub+2,powf@u+2
  3033  00137C  C02E  F177         	movff	?___flsub+3,powf@u+3
  3034  001380  0E00               	movlw	0
  3035  001382  6E33               	movwf	___fldiv@b,c
  3036  001384  0E00               	movlw	0
  3037  001386  6E34               	movwf	___fldiv@b+1,c
  3038  001388  0E80               	movlw	128
  3039  00138A  6E35               	movwf	___fldiv@b+2,c
  3040  00138C  0E3F               	movlw	63
  3041  00138E  6E36               	movwf	___fldiv@b+3,c
  3042  001390  C170  F006         	movff	powf@ax,___fladd@a
  3043  001394  C171  F007         	movff	powf@ax+1,___fladd@a+1
  3044  001398  C172  F008         	movff	powf@ax+2,___fladd@a+2
  3045  00139C  C173  F009         	movff	powf@ax+3,___fladd@a+3
  3046  0013A0  C1A0  F069         	movff	powf@k,??_powf
  3047  0013A4  C1A1  F06A         	movff	powf@k+1,??_powf+1
  3048  0013A8  90D8               	bcf	status,0,c
  3049  0013AA  3669               	rlcf	??_powf,f,c
  3050  0013AC  366A               	rlcf	??_powf+1,f,c
  3051  0013AE  90D8               	bcf	status,0,c
  3052  0013B0  3669               	rlcf	??_powf,f,c
  3053  0013B2  366A               	rlcf	??_powf+1,f,c
  3054  0013B4  0E69               	movlw	low _bp
  3055  0013B6  2469               	addwf	??_powf,w,c
  3056  0013B8  6EF6               	movwf	tblptrl,c
  3057  0013BA  0E06               	movlw	high _bp
  3058  0013BC  206A               	addwfc	??_powf+1,w,c
  3059  0013BE  6EF7               	movwf	tblptrh,c
  3060  0013C0                     	if	0	;There are less than 3 active tblptr bytes
  3061  0013C0                     	endif
  3062  0013C0  0009               	tblrd		*+
  3063  0013C2  FFFF               	dw	65535	; errata NOP
  3064  0013C4  CFF5 F002          	movff	tablat,___fladd@b
  3065  0013C8  0009               	tblrd		*+
  3066  0013CA  FFFF               	dw	65535	; errata NOP
  3067  0013CC  CFF5 F003          	movff	tablat,___fladd@b+1
  3068  0013D0  0009               	tblrd		*+
  3069  0013D2  FFFF               	dw	65535	; errata NOP
  3070  0013D4  CFF5 F004          	movff	tablat,___fladd@b+2
  3071  0013D8  000A               	tblrd		*-
  3072  0013DA  FFFF               	dw	65535	; errata NOP
  3073  0013DC  CFF5 F005          	movff	tablat,___fladd@b+3
  3074  0013E0  EC7A  F01A         	call	___fladd	;wreg free
  3075  0013E4  C002  F037         	movff	?___fladd,___fldiv@a
  3076  0013E8  C003  F038         	movff	?___fladd+1,___fldiv@a+1
  3077  0013EC  C004  F039         	movff	?___fladd+2,___fldiv@a+2
  3078  0013F0  C005  F03A         	movff	?___fladd+3,___fldiv@a+3
  3079  0013F4  EC7E  F01D         	call	___fldiv	;wreg free
  3080  0013F8  C033  F178         	movff	?___fldiv,powf@v
  3081  0013FC  C034  F179         	movff	?___fldiv+1,powf@v+1
  3082  001400  C035  F17A         	movff	?___fldiv+2,powf@v+2
  3083  001404  C036  F17B         	movff	?___fldiv+3,powf@v+3
  3084  001408  C174  F012         	movff	powf@u,___flmul@b
  3085  00140C  C175  F013         	movff	powf@u+1,___flmul@b+1
  3086  001410  C176  F014         	movff	powf@u+2,___flmul@b+2
  3087  001414  C177  F015         	movff	powf@u+3,___flmul@b+3
  3088  001418  C178  F016         	movff	powf@v,___flmul@a
  3089  00141C  C179  F017         	movff	powf@v+1,___flmul@a+1
  3090  001420  C17A  F018         	movff	powf@v+2,___flmul@a+2
  3091  001424  C17B  F019         	movff	powf@v+3,___flmul@a+3
  3092  001428  ECB9  F018         	call	___flmul	;wreg free
  3093  00142C  C012  F15C         	movff	?___flmul,powf@s
  3094  001430  C013  F15D         	movff	?___flmul+1,powf@s+1
  3095  001434  C014  F15E         	movff	?___flmul+2,powf@s+2
  3096  001438  C015  F15F         	movff	?___flmul+3,powf@s+3
  3097  00143C  C15C  F16C         	movff	powf@s,powf@s_h
  3098  001440  C15D  F16D         	movff	powf@s+1,powf@s_h+1
  3099  001444  C15E  F16E         	movff	powf@s+2,powf@s_h+2
  3100  001448  C15F  F16F         	movff	powf@s+3,powf@s_h+3
  3101  00144C  C16C  F1B8         	movff	powf@s_h,powf@__xc8_float_word
  3102  001450  C16D  F1B9         	movff	powf@s_h+1,powf@__xc8_float_word+1
  3103  001454  C16E  F1BA         	movff	powf@s_h+2,powf@__xc8_float_word+2
  3104  001458  C16F  F1BB         	movff	powf@s_h+3,powf@__xc8_float_word+3
  3105  00145C  C1B8  F190         	movff	powf@__xc8_float_word,powf@is
  3106  001460  C1B9  F191         	movff	powf@__xc8_float_word+1,powf@is+1
  3107  001464  C1BA  F192         	movff	powf@__xc8_float_word+2,powf@is+2
  3108  001468  C1BB  F193         	movff	powf@__xc8_float_word+3,powf@is+3
  3109  00146C  0E00               	movlw	0
  3110  00146E  0101               	movlb	1	; () banked
  3111  001470  1590               	andwf	powf@is& (0+255),w,b
  3112  001472  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  3113  001474  0EF0               	movlw	240
  3114  001476  1591               	andwf	(powf@is+1)& (0+255),w,b
  3115  001478  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  3116  00147A  0EFF               	movlw	255
  3117  00147C  1592               	andwf	(powf@is+2)& (0+255),w,b
  3118  00147E  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  3119  001480  0EFF               	movlw	255
  3120  001482  1593               	andwf	(powf@is+3)& (0+255),w,b
  3121  001484  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  3122                           
  3123                           ; BSR set to: 1
  3124  001486  C1B8  F16C         	movff	powf@__xc8_float_word,powf@s_h
  3125  00148A  C1B9  F16D         	movff	powf@__xc8_float_word+1,powf@s_h+1
  3126  00148E  C1BA  F16E         	movff	powf@__xc8_float_word+2,powf@s_h+2
  3127  001492  C1BB  F16F         	movff	powf@__xc8_float_word+3,powf@s_h+3
  3128                           
  3129                           ; BSR set to: 1
  3130  001496  C1A8  F069         	movff	powf@ix,??_powf
  3131  00149A  C1A9  F06A         	movff	powf@ix+1,??_powf+1
  3132  00149E  C1AA  F06B         	movff	powf@ix+2,??_powf+2
  3133  0014A2  C1AB  F06C         	movff	powf@ix+3,??_powf+3
  3134  0014A6  346C               	rlcf	??_powf+3,w,c
  3135  0014A8  326C               	rrcf	??_powf+3,f,c
  3136  0014AA  326B               	rrcf	??_powf+2,f,c
  3137  0014AC  326A               	rrcf	??_powf+1,f,c
  3138  0014AE  3269               	rrcf	??_powf,f,c
  3139  0014B0  0E00               	movlw	0
  3140  0014B2  1469               	andwf	??_powf,w,c
  3141  0014B4  6E6D               	movwf	(??_powf+4)& (0+255),c
  3142  0014B6  0EF0               	movlw	240
  3143  0014B8  146A               	andwf	??_powf+1,w,c
  3144  0014BA  6E6E               	movwf	(??_powf+5)& (0+255),c
  3145  0014BC  0EFF               	movlw	255
  3146  0014BE  146B               	andwf	??_powf+2,w,c
  3147  0014C0  6E6F               	movwf	(??_powf+6)& (0+255),c
  3148  0014C2  0EFF               	movlw	255
  3149  0014C4  146C               	andwf	??_powf+3,w,c
  3150  0014C6  6E70               	movwf	(??_powf+7)& (0+255),c
  3151  0014C8  0E00               	movlw	0
  3152  0014CA  106D               	iorwf	??_powf+4,w,c
  3153  0014CC  6F90               	movwf	powf@is& (0+255),b
  3154  0014CE  0E00               	movlw	0
  3155  0014D0  106E               	iorwf	??_powf+5,w,c
  3156  0014D2  6F91               	movwf	(powf@is+1)& (0+255),b
  3157  0014D4  0E00               	movlw	0
  3158  0014D6  106F               	iorwf	??_powf+6,w,c
  3159  0014D8  6F92               	movwf	(powf@is+2)& (0+255),b
  3160  0014DA  0E20               	movlw	32
  3161  0014DC  1070               	iorwf	??_powf+7,w,c
  3162  0014DE  6F93               	movwf	(powf@is+3)& (0+255),b
  3163                           
  3164                           ; BSR set to: 1
  3165  0014E0  C1A0  F069         	movff	powf@k,??_powf
  3166  0014E4  C1A1  F06A         	movff	powf@k+1,??_powf+1
  3167  0014E8  C1A2  F06B         	movff	powf@k+2,??_powf+2
  3168  0014EC  C1A3  F06C         	movff	powf@k+3,??_powf+3
  3169  0014F0  0E15               	movlw	21
  3170  0014F2                     u3585:
  3171  0014F2  FFFF               	dw	65535	; assembler added errata NOP
  3172  0014F4  90D8               	bcf	status,0,c
  3173  0014F6  3669               	rlcf	??_powf,f,c
  3174  0014F8  366A               	rlcf	??_powf+1,f,c
  3175  0014FA  366B               	rlcf	??_powf+2,f,c
  3176  0014FC  366C               	rlcf	??_powf+3,f,c
  3177  0014FE  2EE8               	decfsz	wreg,f,c
  3178  001500  D7F8               	goto	u3585
  3179  001502  5190               	movf	powf@is& (0+255),w,b
  3180  001504  2469               	addwf	??_powf,w,c
  3181  001506  6E6D               	movwf	(??_powf+4)& (0+255),c
  3182  001508  5191               	movf	(powf@is+1)& (0+255),w,b
  3183  00150A  206A               	addwfc	??_powf+1,w,c
  3184  00150C  6E6E               	movwf	(??_powf+5)& (0+255),c
  3185  00150E  5192               	movf	(powf@is+2)& (0+255),w,b
  3186  001510  206B               	addwfc	??_powf+2,w,c
  3187  001512  6E6F               	movwf	(??_powf+6)& (0+255),c
  3188  001514  5193               	movf	(powf@is+3)& (0+255),w,b
  3189  001516  206C               	addwfc	??_powf+3,w,c
  3190  001518  6E70               	movwf	(??_powf+7)& (0+255),c
  3191  00151A  0E00               	movlw	0
  3192  00151C  246D               	addwf	??_powf+4,w,c
  3193  00151E  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  3194  001520  0E00               	movlw	0
  3195  001522  206E               	addwfc	??_powf+5,w,c
  3196  001524  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  3197  001526  0E40               	movlw	64
  3198  001528  206F               	addwfc	??_powf+6,w,c
  3199  00152A  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  3200  00152C  0E00               	movlw	0
  3201  00152E  2070               	addwfc	??_powf+7,w,c
  3202  001530  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  3203                           
  3204                           ; BSR set to: 1
  3205  001532  C1B8  F168         	movff	powf@__xc8_float_word,powf@t_h
  3206  001536  C1B9  F169         	movff	powf@__xc8_float_word+1,powf@t_h+1
  3207  00153A  C1BA  F16A         	movff	powf@__xc8_float_word+2,powf@t_h+2
  3208  00153E  C1BB  F16B         	movff	powf@__xc8_float_word+3,powf@t_h+3
  3209                           
  3210                           ; BSR set to: 1
  3211  001542  C1A0  F069         	movff	powf@k,??_powf
  3212  001546  C1A1  F06A         	movff	powf@k+1,??_powf+1
  3213  00154A  90D8               	bcf	status,0,c
  3214  00154C  3669               	rlcf	??_powf,f,c
  3215  00154E  366A               	rlcf	??_powf+1,f,c
  3216  001550  90D8               	bcf	status,0,c
  3217  001552  3669               	rlcf	??_powf,f,c
  3218  001554  366A               	rlcf	??_powf+1,f,c
  3219  001556  0E69               	movlw	low _bp
  3220  001558  2469               	addwf	??_powf,w,c
  3221  00155A  6EF6               	movwf	tblptrl,c
  3222  00155C  0E06               	movlw	high _bp
  3223  00155E  206A               	addwfc	??_powf+1,w,c
  3224  001560  6EF7               	movwf	tblptrh,c
  3225  001562                     	if	0	;There are less than 3 active tblptr bytes
  3226  001562                     	endif
  3227  001562  0009               	tblrd		*+
  3228  001564  FFFF               	dw	65535	; errata NOP
  3229  001566  CFF5 F02F          	movff	tablat,___flsub@a
  3230  00156A  0009               	tblrd		*+
  3231  00156C  FFFF               	dw	65535	; errata NOP
  3232  00156E  CFF5 F030          	movff	tablat,___flsub@a+1
  3233  001572  0009               	tblrd		*+
  3234  001574  FFFF               	dw	65535	; errata NOP
  3235  001576  CFF5 F031          	movff	tablat,___flsub@a+2
  3236  00157A  000A               	tblrd		*-
  3237  00157C  FFFF               	dw	65535	; errata NOP
  3238  00157E  CFF5 F032          	movff	tablat,___flsub@a+3
  3239  001582  C168  F02B         	movff	powf@t_h,___flsub@b
  3240  001586  C169  F02C         	movff	powf@t_h+1,___flsub@b+1
  3241  00158A  C16A  F02D         	movff	powf@t_h+2,___flsub@b+2
  3242  00158E  C16B  F02E         	movff	powf@t_h+3,___flsub@b+3
  3243  001592  ECD7  F01F         	call	___flsub	;wreg free
  3244  001596  C02B  F194         	movff	?___flsub,_powf$876
  3245  00159A  C02C  F195         	movff	?___flsub+1,_powf$876+1
  3246  00159E  C02D  F196         	movff	?___flsub+2,_powf$876+2
  3247  0015A2  C02E  F197         	movff	?___flsub+3,_powf$876+3
  3248  0015A6  C170  F02B         	movff	powf@ax,___flsub@b
  3249  0015AA  C171  F02C         	movff	powf@ax+1,___flsub@b+1
  3250  0015AE  C172  F02D         	movff	powf@ax+2,___flsub@b+2
  3251  0015B2  C173  F02E         	movff	powf@ax+3,___flsub@b+3
  3252  0015B6  C194  F02F         	movff	_powf$876,___flsub@a
  3253  0015BA  C195  F030         	movff	_powf$876+1,___flsub@a+1
  3254  0015BE  C196  F031         	movff	_powf$876+2,___flsub@a+2
  3255  0015C2  C197  F032         	movff	_powf$876+3,___flsub@a+3
  3256  0015C6  ECD7  F01F         	call	___flsub	;wreg free
  3257  0015CA  C02B  F134         	movff	?___flsub,powf@t_l
  3258  0015CE  C02C  F135         	movff	?___flsub+1,powf@t_l+1
  3259  0015D2  C02D  F136         	movff	?___flsub+2,powf@t_l+2
  3260  0015D6  C02E  F137         	movff	?___flsub+3,powf@t_l+3
  3261  0015DA  C168  F016         	movff	powf@t_h,___flmul@a
  3262  0015DE  C169  F017         	movff	powf@t_h+1,___flmul@a+1
  3263  0015E2  C16A  F018         	movff	powf@t_h+2,___flmul@a+2
  3264  0015E6  C16B  F019         	movff	powf@t_h+3,___flmul@a+3
  3265  0015EA  C16C  F012         	movff	powf@s_h,___flmul@b
  3266  0015EE  C16D  F013         	movff	powf@s_h+1,___flmul@b+1
  3267  0015F2  C16E  F014         	movff	powf@s_h+2,___flmul@b+2
  3268  0015F6  C16F  F015         	movff	powf@s_h+3,___flmul@b+3
  3269  0015FA  ECB9  F018         	call	___flmul	;wreg free
  3270  0015FE  C012  F02F         	movff	?___flmul,___flsub@a
  3271  001602  C013  F030         	movff	?___flmul+1,___flsub@a+1
  3272  001606  C014  F031         	movff	?___flmul+2,___flsub@a+2
  3273  00160A  C015  F032         	movff	?___flmul+3,___flsub@a+3
  3274  00160E  C174  F02B         	movff	powf@u,___flsub@b
  3275  001612  C175  F02C         	movff	powf@u+1,___flsub@b+1
  3276  001616  C176  F02D         	movff	powf@u+2,___flsub@b+2
  3277  00161A  C177  F02E         	movff	powf@u+3,___flsub@b+3
  3278  00161E  ECD7  F01F         	call	___flsub	;wreg free
  3279  001622  C02B  F194         	movff	?___flsub,_powf$876
  3280  001626  C02C  F195         	movff	?___flsub+1,_powf$876+1
  3281  00162A  C02D  F196         	movff	?___flsub+2,_powf$876+2
  3282  00162E  C02E  F197         	movff	?___flsub+3,_powf$876+3
  3283  001632  C134  F016         	movff	powf@t_l,___flmul@a
  3284  001636  C135  F017         	movff	powf@t_l+1,___flmul@a+1
  3285  00163A  C136  F018         	movff	powf@t_l+2,___flmul@a+2
  3286  00163E  C137  F019         	movff	powf@t_l+3,___flmul@a+3
  3287  001642  C16C  F012         	movff	powf@s_h,___flmul@b
  3288  001646  C16D  F013         	movff	powf@s_h+1,___flmul@b+1
  3289  00164A  C16E  F014         	movff	powf@s_h+2,___flmul@b+2
  3290  00164E  C16F  F015         	movff	powf@s_h+3,___flmul@b+3
  3291  001652  ECB9  F018         	call	___flmul	;wreg free
  3292  001656  C012  F02F         	movff	?___flmul,___flsub@a
  3293  00165A  C013  F030         	movff	?___flmul+1,___flsub@a+1
  3294  00165E  C014  F031         	movff	?___flmul+2,___flsub@a+2
  3295  001662  C015  F032         	movff	?___flmul+3,___flsub@a+3
  3296  001666  C194  F02B         	movff	_powf$876,___flsub@b
  3297  00166A  C195  F02C         	movff	_powf$876+1,___flsub@b+1
  3298  00166E  C196  F02D         	movff	_powf$876+2,___flsub@b+2
  3299  001672  C197  F02E         	movff	_powf$876+3,___flsub@b+3
  3300  001676  ECD7  F01F         	call	___flsub	;wreg free
  3301  00167A  C02B  F154         	movff	?___flsub,_powf$874
  3302  00167E  C02C  F155         	movff	?___flsub+1,_powf$874+1
  3303  001682  C02D  F156         	movff	?___flsub+2,_powf$874+2
  3304  001686  C02E  F157         	movff	?___flsub+3,_powf$874+3
  3305  00168A  C154  F012         	movff	_powf$874,___flmul@b
  3306  00168E  C155  F013         	movff	_powf$874+1,___flmul@b+1
  3307  001692  C156  F014         	movff	_powf$874+2,___flmul@b+2
  3308  001696  C157  F015         	movff	_powf$874+3,___flmul@b+3
  3309  00169A  C178  F016         	movff	powf@v,___flmul@a
  3310  00169E  C179  F017         	movff	powf@v+1,___flmul@a+1
  3311  0016A2  C17A  F018         	movff	powf@v+2,___flmul@a+2
  3312  0016A6  C17B  F019         	movff	powf@v+3,___flmul@a+3
  3313  0016AA  ECB9  F018         	call	___flmul	;wreg free
  3314  0016AE  C012  F130         	movff	?___flmul,powf@s_l
  3315  0016B2  C013  F131         	movff	?___flmul+1,powf@s_l+1
  3316  0016B6  C014  F132         	movff	?___flmul+2,powf@s_l+2
  3317  0016BA  C015  F133         	movff	?___flmul+3,powf@s_l+3
  3318  0016BE  C15C  F012         	movff	powf@s,___flmul@b
  3319  0016C2  C15D  F013         	movff	powf@s+1,___flmul@b+1
  3320  0016C6  C15E  F014         	movff	powf@s+2,___flmul@b+2
  3321  0016CA  C15F  F015         	movff	powf@s+3,___flmul@b+3
  3322  0016CE  C15C  F016         	movff	powf@s,___flmul@a
  3323  0016D2  C15D  F017         	movff	powf@s+1,___flmul@a+1
  3324  0016D6  C15E  F018         	movff	powf@s+2,___flmul@a+2
  3325  0016DA  C15F  F019         	movff	powf@s+3,___flmul@a+3
  3326  0016DE  ECB9  F018         	call	___flmul	;wreg free
  3327  0016E2  C012  F18C         	movff	?___flmul,powf@s2
  3328  0016E6  C013  F18D         	movff	?___flmul+1,powf@s2+1
  3329  0016EA  C014  F18E         	movff	?___flmul+2,powf@s2+2
  3330  0016EE  C015  F18F         	movff	?___flmul+3,powf@s2+3
  3331  0016F2  0E55               	movlw	85
  3332  0016F4  6E06               	movwf	___fladd@a,c
  3333  0016F6  0E32               	movlw	50
  3334  0016F8  6E07               	movwf	___fladd@a+1,c
  3335  0016FA  0E6C               	movlw	108
  3336  0016FC  6E08               	movwf	___fladd@a+2,c
  3337  0016FE  0E3E               	movlw	62
  3338  001700  6E09               	movwf	___fladd@a+3,c
  3339  001702  0E42               	movlw	66
  3340  001704  6E16               	movwf	___flmul@a,c
  3341  001706  0EF1               	movlw	241
  3342  001708  6E17               	movwf	___flmul@a+1,c
  3343  00170A  0E53               	movlw	83
  3344  00170C  6E18               	movwf	___flmul@a+2,c
  3345  00170E  0E3E               	movlw	62
  3346  001710  6E19               	movwf	___flmul@a+3,c
  3347  001712  C18C  F012         	movff	powf@s2,___flmul@b
  3348  001716  C18D  F013         	movff	powf@s2+1,___flmul@b+1
  3349  00171A  C18E  F014         	movff	powf@s2+2,___flmul@b+2
  3350  00171E  C18F  F015         	movff	powf@s2+3,___flmul@b+3
  3351  001722  ECB9  F018         	call	___flmul	;wreg free
  3352  001726  C012  F002         	movff	?___flmul,___fladd@b
  3353  00172A  C013  F003         	movff	?___flmul+1,___fladd@b+1
  3354  00172E  C014  F004         	movff	?___flmul+2,___fladd@b+2
  3355  001732  C015  F005         	movff	?___flmul+3,___fladd@b+3
  3356  001736  EC7A  F01A         	call	___fladd	;wreg free
  3357  00173A  C002  F1A4         	movff	?___fladd,_powf$873
  3358  00173E  C003  F1A5         	movff	?___fladd+1,_powf$873+1
  3359  001742  C004  F1A6         	movff	?___fladd+2,_powf$873+2
  3360  001746  C005  F1A7         	movff	?___fladd+3,_powf$873+3
  3361  00174A  0E05               	movlw	5
  3362  00174C  6E06               	movwf	___fladd@a,c
  3363  00174E  0EA3               	movlw	163
  3364  001750  6E07               	movwf	___fladd@a+1,c
  3365  001752  0E8B               	movlw	139
  3366  001754  6E08               	movwf	___fladd@a+2,c
  3367  001756  0E3E               	movlw	62
  3368  001758  6E09               	movwf	___fladd@a+3,c
  3369  00175A  C18C  F016         	movff	powf@s2,___flmul@a
  3370  00175E  C18D  F017         	movff	powf@s2+1,___flmul@a+1
  3371  001762  C18E  F018         	movff	powf@s2+2,___flmul@a+2
  3372  001766  C18F  F019         	movff	powf@s2+3,___flmul@a+3
  3373  00176A  C1A4  F012         	movff	_powf$873,___flmul@b
  3374  00176E  C1A5  F013         	movff	_powf$873+1,___flmul@b+1
  3375  001772  C1A6  F014         	movff	_powf$873+2,___flmul@b+2
  3376  001776  C1A7  F015         	movff	_powf$873+3,___flmul@b+3
  3377  00177A  ECB9  F018         	call	___flmul	;wreg free
  3378  00177E  C012  F002         	movff	?___flmul,___fladd@b
  3379  001782  C013  F003         	movff	?___flmul+1,___fladd@b+1
  3380  001786  C014  F004         	movff	?___flmul+2,___fladd@b+2
  3381  00178A  C015  F005         	movff	?___flmul+3,___fladd@b+3
  3382  00178E  EC7A  F01A         	call	___fladd	;wreg free
  3383  001792  C002  F154         	movff	?___fladd,_powf$874
  3384  001796  C003  F155         	movff	?___fladd+1,_powf$874+1
  3385  00179A  C004  F156         	movff	?___fladd+2,_powf$874+2
  3386  00179E  C005  F157         	movff	?___fladd+3,_powf$874+3
  3387  0017A2  0EAB               	movlw	171
  3388  0017A4  6E06               	movwf	___fladd@a,c
  3389  0017A6  0EAA               	movlw	170
  3390  0017A8  6E07               	movwf	___fladd@a+1,c
  3391  0017AA  0EAA               	movlw	170
  3392  0017AC  6E08               	movwf	___fladd@a+2,c
  3393  0017AE  0E3E               	movlw	62
  3394  0017B0  6E09               	movwf	___fladd@a+3,c
  3395  0017B2  C18C  F016         	movff	powf@s2,___flmul@a
  3396  0017B6  C18D  F017         	movff	powf@s2+1,___flmul@a+1
  3397  0017BA  C18E  F018         	movff	powf@s2+2,___flmul@a+2
  3398  0017BE  C18F  F019         	movff	powf@s2+3,___flmul@a+3
  3399  0017C2  C154  F012         	movff	_powf$874,___flmul@b
  3400  0017C6  C155  F013         	movff	_powf$874+1,___flmul@b+1
  3401  0017CA  C156  F014         	movff	_powf$874+2,___flmul@b+2
  3402  0017CE  C157  F015         	movff	_powf$874+3,___flmul@b+3
  3403  0017D2  ECB9  F018         	call	___flmul	;wreg free
  3404  0017D6  C012  F002         	movff	?___flmul,___fladd@b
  3405  0017DA  C013  F003         	movff	?___flmul+1,___fladd@b+1
  3406  0017DE  C014  F004         	movff	?___flmul+2,___fladd@b+2
  3407  0017E2  C015  F005         	movff	?___flmul+3,___fladd@b+3
  3408  0017E6  EC7A  F01A         	call	___fladd	;wreg free
  3409  0017EA  C002  F148         	movff	?___fladd,_powf$875
  3410  0017EE  C003  F149         	movff	?___fladd+1,_powf$875+1
  3411  0017F2  C004  F14A         	movff	?___fladd+2,_powf$875+2
  3412  0017F6  C005  F14B         	movff	?___fladd+3,_powf$875+3
  3413  0017FA  0EB7               	movlw	183
  3414  0017FC  6E06               	movwf	___fladd@a,c
  3415  0017FE  0E6D               	movlw	109
  3416  001800  6E07               	movwf	___fladd@a+1,c
  3417  001802  0EDB               	movlw	219
  3418  001804  6E08               	movwf	___fladd@a+2,c
  3419  001806  0E3E               	movlw	62
  3420  001808  6E09               	movwf	___fladd@a+3,c
  3421  00180A  C18C  F016         	movff	powf@s2,___flmul@a
  3422  00180E  C18D  F017         	movff	powf@s2+1,___flmul@a+1
  3423  001812  C18E  F018         	movff	powf@s2+2,___flmul@a+2
  3424  001816  C18F  F019         	movff	powf@s2+3,___flmul@a+3
  3425  00181A  C148  F012         	movff	_powf$875,___flmul@b
  3426  00181E  C149  F013         	movff	_powf$875+1,___flmul@b+1
  3427  001822  C14A  F014         	movff	_powf$875+2,___flmul@b+2
  3428  001826  C14B  F015         	movff	_powf$875+3,___flmul@b+3
  3429  00182A  ECB9  F018         	call	___flmul	;wreg free
  3430  00182E  C012  F002         	movff	?___flmul,___fladd@b
  3431  001832  C013  F003         	movff	?___flmul+1,___fladd@b+1
  3432  001836  C014  F004         	movff	?___flmul+2,___fladd@b+2
  3433  00183A  C015  F005         	movff	?___flmul+3,___fladd@b+3
  3434  00183E  EC7A  F01A         	call	___fladd	;wreg free
  3435  001842  C002  F138         	movff	?___fladd,_powf$877
  3436  001846  C003  F139         	movff	?___fladd+1,_powf$877+1
  3437  00184A  C004  F13A         	movff	?___fladd+2,_powf$877+2
  3438  00184E  C005  F13B         	movff	?___fladd+3,_powf$877+3
  3439  001852  0E9A               	movlw	154
  3440  001854  6E06               	movwf	___fladd@a,c
  3441  001856  0E99               	movlw	153
  3442  001858  6E07               	movwf	___fladd@a+1,c
  3443  00185A  0E19               	movlw	25
  3444  00185C  6E08               	movwf	___fladd@a+2,c
  3445  00185E  0E3F               	movlw	63
  3446  001860  6E09               	movwf	___fladd@a+3,c
  3447  001862  C18C  F016         	movff	powf@s2,___flmul@a
  3448  001866  C18D  F017         	movff	powf@s2+1,___flmul@a+1
  3449  00186A  C18E  F018         	movff	powf@s2+2,___flmul@a+2
  3450  00186E  C18F  F019         	movff	powf@s2+3,___flmul@a+3
  3451  001872  C138  F012         	movff	_powf$877,___flmul@b
  3452  001876  C139  F013         	movff	_powf$877+1,___flmul@b+1
  3453  00187A  C13A  F014         	movff	_powf$877+2,___flmul@b+2
  3454  00187E  C13B  F015         	movff	_powf$877+3,___flmul@b+3
  3455  001882  ECB9  F018         	call	___flmul	;wreg free
  3456  001886  C012  F002         	movff	?___flmul,___fladd@b
  3457  00188A  C013  F003         	movff	?___flmul+1,___fladd@b+1
  3458  00188E  C014  F004         	movff	?___flmul+2,___fladd@b+2
  3459  001892  C015  F005         	movff	?___flmul+3,___fladd@b+3
  3460  001896  EC7A  F01A         	call	___fladd	;wreg free
  3461  00189A  C002  F100         	movff	?___fladd,_powf$878
  3462  00189E  C003  F101         	movff	?___fladd+1,_powf$878+1
  3463  0018A2  C004  F102         	movff	?___fladd+2,_powf$878+2
  3464  0018A6  C005  F103         	movff	?___fladd+3,_powf$878+3
  3465  0018AA  C18C  F016         	movff	powf@s2,___flmul@a
  3466  0018AE  C18D  F017         	movff	powf@s2+1,___flmul@a+1
  3467  0018B2  C18E  F018         	movff	powf@s2+2,___flmul@a+2
  3468  0018B6  C18F  F019         	movff	powf@s2+3,___flmul@a+3
  3469  0018BA  C18C  F012         	movff	powf@s2,___flmul@b
  3470  0018BE  C18D  F013         	movff	powf@s2+1,___flmul@b+1
  3471  0018C2  C18E  F014         	movff	powf@s2+2,___flmul@b+2
  3472  0018C6  C18F  F015         	movff	powf@s2+3,___flmul@b+3
  3473  0018CA  ECB9  F018         	call	___flmul	;wreg free
  3474  0018CE  C012  F104         	movff	?___flmul,_powf$879
  3475  0018D2  C013  F105         	movff	?___flmul+1,_powf$879+1
  3476  0018D6  C014  F106         	movff	?___flmul+2,_powf$879+2
  3477  0018DA  C015  F107         	movff	?___flmul+3,_powf$879+3
  3478  0018DE  C100  F012         	movff	_powf$878,___flmul@b
  3479  0018E2  C101  F013         	movff	_powf$878+1,___flmul@b+1
  3480  0018E6  C102  F014         	movff	_powf$878+2,___flmul@b+2
  3481  0018EA  C103  F015         	movff	_powf$878+3,___flmul@b+3
  3482  0018EE  C104  F016         	movff	_powf$879,___flmul@a
  3483  0018F2  C105  F017         	movff	_powf$879+1,___flmul@a+1
  3484  0018F6  C106  F018         	movff	_powf$879+2,___flmul@a+2
  3485  0018FA  C107  F019         	movff	_powf$879+3,___flmul@a+3
  3486  0018FE  ECB9  F018         	call	___flmul	;wreg free
  3487  001902  C012  F14C         	movff	?___flmul,powf@r
  3488  001906  C013  F14D         	movff	?___flmul+1,powf@r+1
  3489  00190A  C014  F14E         	movff	?___flmul+2,powf@r+2
  3490  00190E  C015  F14F         	movff	?___flmul+3,powf@r+3
  3491  001912  C130  F016         	movff	powf@s_l,___flmul@a
  3492  001916  C131  F017         	movff	powf@s_l+1,___flmul@a+1
  3493  00191A  C132  F018         	movff	powf@s_l+2,___flmul@a+2
  3494  00191E  C133  F019         	movff	powf@s_l+3,___flmul@a+3
  3495  001922  C15C  F006         	movff	powf@s,___fladd@a
  3496  001926  C15D  F007         	movff	powf@s+1,___fladd@a+1
  3497  00192A  C15E  F008         	movff	powf@s+2,___fladd@a+2
  3498  00192E  C15F  F009         	movff	powf@s+3,___fladd@a+3
  3499  001932  C16C  F002         	movff	powf@s_h,___fladd@b
  3500  001936  C16D  F003         	movff	powf@s_h+1,___fladd@b+1
  3501  00193A  C16E  F004         	movff	powf@s_h+2,___fladd@b+2
  3502  00193E  C16F  F005         	movff	powf@s_h+3,___fladd@b+3
  3503  001942  EC7A  F01A         	call	___fladd	;wreg free
  3504  001946  C002  F012         	movff	?___fladd,___flmul@b
  3505  00194A  C003  F013         	movff	?___fladd+1,___flmul@b+1
  3506  00194E  C004  F014         	movff	?___fladd+2,___flmul@b+2
  3507  001952  C005  F015         	movff	?___fladd+3,___flmul@b+3
  3508  001956  ECB9  F018         	call	___flmul	;wreg free
  3509  00195A  C012  F158         	movff	?___flmul,_powf$880
  3510  00195E  C013  F159         	movff	?___flmul+1,_powf$880+1
  3511  001962  C014  F15A         	movff	?___flmul+2,_powf$880+2
  3512  001966  C015  F15B         	movff	?___flmul+3,_powf$880+3
  3513  00196A  C14C  F002         	movff	powf@r,___fladd@b
  3514  00196E  C14D  F003         	movff	powf@r+1,___fladd@b+1
  3515  001972  C14E  F004         	movff	powf@r+2,___fladd@b+2
  3516  001976  C14F  F005         	movff	powf@r+3,___fladd@b+3
  3517  00197A  C158  F006         	movff	_powf$880,___fladd@a
  3518  00197E  C159  F007         	movff	_powf$880+1,___fladd@a+1
  3519  001982  C15A  F008         	movff	_powf$880+2,___fladd@a+2
  3520  001986  C15B  F009         	movff	_powf$880+3,___fladd@a+3
  3521  00198A  EC7A  F01A         	call	___fladd	;wreg free
  3522  00198E  C002  F14C         	movff	?___fladd,powf@r
  3523  001992  C003  F14D         	movff	?___fladd+1,powf@r+1
  3524  001996  C004  F14E         	movff	?___fladd+2,powf@r+2
  3525  00199A  C005  F14F         	movff	?___fladd+3,powf@r+3
  3526  00199E  C16C  F012         	movff	powf@s_h,___flmul@b
  3527  0019A2  C16D  F013         	movff	powf@s_h+1,___flmul@b+1
  3528  0019A6  C16E  F014         	movff	powf@s_h+2,___flmul@b+2
  3529  0019AA  C16F  F015         	movff	powf@s_h+3,___flmul@b+3
  3530  0019AE  C16C  F016         	movff	powf@s_h,___flmul@a
  3531  0019B2  C16D  F017         	movff	powf@s_h+1,___flmul@a+1
  3532  0019B6  C16E  F018         	movff	powf@s_h+2,___flmul@a+2
  3533  0019BA  C16F  F019         	movff	powf@s_h+3,___flmul@a+3
  3534  0019BE  ECB9  F018         	call	___flmul	;wreg free
  3535  0019C2  C012  F18C         	movff	?___flmul,powf@s2
  3536  0019C6  C013  F18D         	movff	?___flmul+1,powf@s2+1
  3537  0019CA  C014  F18E         	movff	?___flmul+2,powf@s2+2
  3538  0019CE  C015  F18F         	movff	?___flmul+3,powf@s2+3
  3539  0019D2  0E00               	movlw	0
  3540  0019D4  6E06               	movwf	___fladd@a,c
  3541  0019D6  0E00               	movlw	0
  3542  0019D8  6E07               	movwf	___fladd@a+1,c
  3543  0019DA  0E40               	movlw	64
  3544  0019DC  6E08               	movwf	___fladd@a+2,c
  3545  0019DE  0E40               	movlw	64
  3546  0019E0  6E09               	movwf	___fladd@a+3,c
  3547  0019E2  C18C  F002         	movff	powf@s2,___fladd@b
  3548  0019E6  C18D  F003         	movff	powf@s2+1,___fladd@b+1
  3549  0019EA  C18E  F004         	movff	powf@s2+2,___fladd@b+2
  3550  0019EE  C18F  F005         	movff	powf@s2+3,___fladd@b+3
  3551  0019F2  EC7A  F01A         	call	___fladd	;wreg free
  3552  0019F6  C002  F158         	movff	?___fladd,_powf$880
  3553  0019FA  C003  F159         	movff	?___fladd+1,_powf$880+1
  3554  0019FE  C004  F15A         	movff	?___fladd+2,_powf$880+2
  3555  001A02  C005  F15B         	movff	?___fladd+3,_powf$880+3
  3556  001A06  C158  F002         	movff	_powf$880,___fladd@b
  3557  001A0A  C159  F003         	movff	_powf$880+1,___fladd@b+1
  3558  001A0E  C15A  F004         	movff	_powf$880+2,___fladd@b+2
  3559  001A12  C15B  F005         	movff	_powf$880+3,___fladd@b+3
  3560  001A16  C14C  F006         	movff	powf@r,___fladd@a
  3561  001A1A  C14D  F007         	movff	powf@r+1,___fladd@a+1
  3562  001A1E  C14E  F008         	movff	powf@r+2,___fladd@a+2
  3563  001A22  C14F  F009         	movff	powf@r+3,___fladd@a+3
  3564  001A26  EC7A  F01A         	call	___fladd	;wreg free
  3565  001A2A  C002  F168         	movff	?___fladd,powf@t_h
  3566  001A2E  C003  F169         	movff	?___fladd+1,powf@t_h+1
  3567  001A32  C004  F16A         	movff	?___fladd+2,powf@t_h+2
  3568  001A36  C005  F16B         	movff	?___fladd+3,powf@t_h+3
  3569  001A3A  C168  F1B8         	movff	powf@t_h,powf@__xc8_float_word
  3570  001A3E  C169  F1B9         	movff	powf@t_h+1,powf@__xc8_float_word+1
  3571  001A42  C16A  F1BA         	movff	powf@t_h+2,powf@__xc8_float_word+2
  3572  001A46  C16B  F1BB         	movff	powf@t_h+3,powf@__xc8_float_word+3
  3573  001A4A  C1B8  F190         	movff	powf@__xc8_float_word,powf@is
  3574  001A4E  C1B9  F191         	movff	powf@__xc8_float_word+1,powf@is+1
  3575  001A52  C1BA  F192         	movff	powf@__xc8_float_word+2,powf@is+2
  3576  001A56  C1BB  F193         	movff	powf@__xc8_float_word+3,powf@is+3
  3577  001A5A  0E00               	movlw	0
  3578  001A5C  0101               	movlb	1	; () banked
  3579  001A5E  1590               	andwf	powf@is& (0+255),w,b
  3580  001A60  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  3581  001A62  0EF0               	movlw	240
  3582  001A64  1591               	andwf	(powf@is+1)& (0+255),w,b
  3583  001A66  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  3584  001A68  0EFF               	movlw	255
  3585  001A6A  1592               	andwf	(powf@is+2)& (0+255),w,b
  3586  001A6C  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  3587  001A6E  0EFF               	movlw	255
  3588  001A70  1593               	andwf	(powf@is+3)& (0+255),w,b
  3589  001A72  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  3590                           
  3591                           ; BSR set to: 1
  3592  001A74  C1B8  F168         	movff	powf@__xc8_float_word,powf@t_h
  3593  001A78  C1B9  F169         	movff	powf@__xc8_float_word+1,powf@t_h+1
  3594  001A7C  C1BA  F16A         	movff	powf@__xc8_float_word+2,powf@t_h+2
  3595  001A80  C1BB  F16B         	movff	powf@__xc8_float_word+3,powf@t_h+3
  3596                           
  3597                           ; BSR set to: 1
  3598  001A84  0E00               	movlw	0
  3599  001A86  6E06               	movwf	___fladd@a,c
  3600  001A88  0E00               	movlw	0
  3601  001A8A  6E07               	movwf	___fladd@a+1,c
  3602  001A8C  0E40               	movlw	64
  3603  001A8E  6E08               	movwf	___fladd@a+2,c
  3604  001A90  0EC0               	movlw	192
  3605  001A92  6E09               	movwf	___fladd@a+3,c
  3606  001A94  C168  F002         	movff	powf@t_h,___fladd@b
  3607  001A98  C169  F003         	movff	powf@t_h+1,___fladd@b+1
  3608  001A9C  C16A  F004         	movff	powf@t_h+2,___fladd@b+2
  3609  001AA0  C16B  F005         	movff	powf@t_h+3,___fladd@b+3
  3610  001AA4  EC7A  F01A         	call	___fladd	;wreg free
  3611  001AA8  C002  F13C         	movff	?___fladd,_powf$881
  3612  001AAC  C003  F13D         	movff	?___fladd+1,_powf$881+1
  3613  001AB0  C004  F13E         	movff	?___fladd+2,_powf$881+2
  3614  001AB4  C005  F13F         	movff	?___fladd+3,_powf$881+3
  3615  001AB8  C18C  F02F         	movff	powf@s2,___flsub@a
  3616  001ABC  C18D  F030         	movff	powf@s2+1,___flsub@a+1
  3617  001AC0  C18E  F031         	movff	powf@s2+2,___flsub@a+2
  3618  001AC4  C18F  F032         	movff	powf@s2+3,___flsub@a+3
  3619  001AC8  C13C  F02B         	movff	_powf$881,___flsub@b
  3620  001ACC  C13D  F02C         	movff	_powf$881+1,___flsub@b+1
  3621  001AD0  C13E  F02D         	movff	_powf$881+2,___flsub@b+2
  3622  001AD4  C13F  F02E         	movff	_powf$881+3,___flsub@b+3
  3623  001AD8  ECD7  F01F         	call	___flsub	;wreg free
  3624  001ADC  C02B  F140         	movff	?___flsub,_powf$882
  3625  001AE0  C02C  F141         	movff	?___flsub+1,_powf$882+1
  3626  001AE4  C02D  F142         	movff	?___flsub+2,_powf$882+2
  3627  001AE8  C02E  F143         	movff	?___flsub+3,_powf$882+3
  3628  001AEC  C14C  F02B         	movff	powf@r,___flsub@b
  3629  001AF0  C14D  F02C         	movff	powf@r+1,___flsub@b+1
  3630  001AF4  C14E  F02D         	movff	powf@r+2,___flsub@b+2
  3631  001AF8  C14F  F02E         	movff	powf@r+3,___flsub@b+3
  3632  001AFC  C140  F02F         	movff	_powf$882,___flsub@a
  3633  001B00  C141  F030         	movff	_powf$882+1,___flsub@a+1
  3634  001B04  C142  F031         	movff	_powf$882+2,___flsub@a+2
  3635  001B08  C143  F032         	movff	_powf$882+3,___flsub@a+3
  3636  001B0C  ECD7  F01F         	call	___flsub	;wreg free
  3637  001B10  C02B  F134         	movff	?___flsub,powf@t_l
  3638  001B14  C02C  F135         	movff	?___flsub+1,powf@t_l+1
  3639  001B18  C02D  F136         	movff	?___flsub+2,powf@t_l+2
  3640  001B1C  C02E  F137         	movff	?___flsub+3,powf@t_l+3
  3641  001B20  C16C  F012         	movff	powf@s_h,___flmul@b
  3642  001B24  C16D  F013         	movff	powf@s_h+1,___flmul@b+1
  3643  001B28  C16E  F014         	movff	powf@s_h+2,___flmul@b+2
  3644  001B2C  C16F  F015         	movff	powf@s_h+3,___flmul@b+3
  3645  001B30  C168  F016         	movff	powf@t_h,___flmul@a
  3646  001B34  C169  F017         	movff	powf@t_h+1,___flmul@a+1
  3647  001B38  C16A  F018         	movff	powf@t_h+2,___flmul@a+2
  3648  001B3C  C16B  F019         	movff	powf@t_h+3,___flmul@a+3
  3649  001B40  ECB9  F018         	call	___flmul	;wreg free
  3650  001B44  C012  F174         	movff	?___flmul,powf@u
  3651  001B48  C013  F175         	movff	?___flmul+1,powf@u+1
  3652  001B4C  C014  F176         	movff	?___flmul+2,powf@u+2
  3653  001B50  C015  F177         	movff	?___flmul+3,powf@u+3
  3654  001B54  C168  F016         	movff	powf@t_h,___flmul@a
  3655  001B58  C169  F017         	movff	powf@t_h+1,___flmul@a+1
  3656  001B5C  C16A  F018         	movff	powf@t_h+2,___flmul@a+2
  3657  001B60  C16B  F019         	movff	powf@t_h+3,___flmul@a+3
  3658  001B64  C130  F012         	movff	powf@s_l,___flmul@b
  3659  001B68  C131  F013         	movff	powf@s_l+1,___flmul@b+1
  3660  001B6C  C132  F014         	movff	powf@s_l+2,___flmul@b+2
  3661  001B70  C133  F015         	movff	powf@s_l+3,___flmul@b+3
  3662  001B74  ECB9  F018         	call	___flmul	;wreg free
  3663  001B78  C012  F002         	movff	?___flmul,___fladd@b
  3664  001B7C  C013  F003         	movff	?___flmul+1,___fladd@b+1
  3665  001B80  C014  F004         	movff	?___flmul+2,___fladd@b+2
  3666  001B84  C015  F005         	movff	?___flmul+3,___fladd@b+3
  3667  001B88  C15C  F016         	movff	powf@s,___flmul@a
  3668  001B8C  C15D  F017         	movff	powf@s+1,___flmul@a+1
  3669  001B90  C15E  F018         	movff	powf@s+2,___flmul@a+2
  3670  001B94  C15F  F019         	movff	powf@s+3,___flmul@a+3
  3671  001B98  C134  F012         	movff	powf@t_l,___flmul@b
  3672  001B9C  C135  F013         	movff	powf@t_l+1,___flmul@b+1
  3673  001BA0  C136  F014         	movff	powf@t_l+2,___flmul@b+2
  3674  001BA4  C137  F015         	movff	powf@t_l+3,___flmul@b+3
  3675  001BA8  ECB9  F018         	call	___flmul	;wreg free
  3676  001BAC  C012  F006         	movff	?___flmul,___fladd@a
  3677  001BB0  C013  F007         	movff	?___flmul+1,___fladd@a+1
  3678  001BB4  C014  F008         	movff	?___flmul+2,___fladd@a+2
  3679  001BB8  C015  F009         	movff	?___flmul+3,___fladd@a+3
  3680  001BBC  EC7A  F01A         	call	___fladd	;wreg free
  3681  001BC0  C002  F178         	movff	?___fladd,powf@v
  3682  001BC4  C003  F179         	movff	?___fladd+1,powf@v+1
  3683  001BC8  C004  F17A         	movff	?___fladd+2,powf@v+2
  3684  001BCC  C005  F17B         	movff	?___fladd+3,powf@v+3
  3685  001BD0  C174  F002         	movff	powf@u,___fladd@b
  3686  001BD4  C175  F003         	movff	powf@u+1,___fladd@b+1
  3687  001BD8  C176  F004         	movff	powf@u+2,___fladd@b+2
  3688  001BDC  C177  F005         	movff	powf@u+3,___fladd@b+3
  3689  001BE0  C178  F006         	movff	powf@v,___fladd@a
  3690  001BE4  C179  F007         	movff	powf@v+1,___fladd@a+1
  3691  001BE8  C17A  F008         	movff	powf@v+2,___fladd@a+2
  3692  001BEC  C17B  F009         	movff	powf@v+3,___fladd@a+3
  3693  001BF0  EC7A  F01A         	call	___fladd	;wreg free
  3694  001BF4  C002  F19C         	movff	?___fladd,powf@p_h
  3695  001BF8  C003  F19D         	movff	?___fladd+1,powf@p_h+1
  3696  001BFC  C004  F19E         	movff	?___fladd+2,powf@p_h+2
  3697  001C00  C005  F19F         	movff	?___fladd+3,powf@p_h+3
  3698  001C04  C19C  F1B8         	movff	powf@p_h,powf@__xc8_float_word
  3699  001C08  C19D  F1B9         	movff	powf@p_h+1,powf@__xc8_float_word+1
  3700  001C0C  C19E  F1BA         	movff	powf@p_h+2,powf@__xc8_float_word+2
  3701  001C10  C19F  F1BB         	movff	powf@p_h+3,powf@__xc8_float_word+3
  3702  001C14  C1B8  F190         	movff	powf@__xc8_float_word,powf@is
  3703  001C18  C1B9  F191         	movff	powf@__xc8_float_word+1,powf@is+1
  3704  001C1C  C1BA  F192         	movff	powf@__xc8_float_word+2,powf@is+2
  3705  001C20  C1BB  F193         	movff	powf@__xc8_float_word+3,powf@is+3
  3706  001C24  0E00               	movlw	0
  3707  001C26  0101               	movlb	1	; () banked
  3708  001C28  1590               	andwf	powf@is& (0+255),w,b
  3709  001C2A  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  3710  001C2C  0EF0               	movlw	240
  3711  001C2E  1591               	andwf	(powf@is+1)& (0+255),w,b
  3712  001C30  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  3713  001C32  0EFF               	movlw	255
  3714  001C34  1592               	andwf	(powf@is+2)& (0+255),w,b
  3715  001C36  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  3716  001C38  0EFF               	movlw	255
  3717  001C3A  1593               	andwf	(powf@is+3)& (0+255),w,b
  3718  001C3C  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  3719                           
  3720                           ; BSR set to: 1
  3721  001C3E  C1B8  F19C         	movff	powf@__xc8_float_word,powf@p_h
  3722  001C42  C1B9  F19D         	movff	powf@__xc8_float_word+1,powf@p_h+1
  3723  001C46  C1BA  F19E         	movff	powf@__xc8_float_word+2,powf@p_h+2
  3724  001C4A  C1BB  F19F         	movff	powf@__xc8_float_word+3,powf@p_h+3
  3725                           
  3726                           ; BSR set to: 1
  3727  001C4E  C174  F02F         	movff	powf@u,___flsub@a
  3728  001C52  C175  F030         	movff	powf@u+1,___flsub@a+1
  3729  001C56  C176  F031         	movff	powf@u+2,___flsub@a+2
  3730  001C5A  C177  F032         	movff	powf@u+3,___flsub@a+3
  3731  001C5E  C19C  F02B         	movff	powf@p_h,___flsub@b
  3732  001C62  C19D  F02C         	movff	powf@p_h+1,___flsub@b+1
  3733  001C66  C19E  F02D         	movff	powf@p_h+2,___flsub@b+2
  3734  001C6A  C19F  F02E         	movff	powf@p_h+3,___flsub@b+3
  3735  001C6E  ECD7  F01F         	call	___flsub	;wreg free
  3736  001C72  C02B  F194         	movff	?___flsub,_powf$876
  3737  001C76  C02C  F195         	movff	?___flsub+1,_powf$876+1
  3738  001C7A  C02D  F196         	movff	?___flsub+2,_powf$876+2
  3739  001C7E  C02E  F197         	movff	?___flsub+3,_powf$876+3
  3740  001C82  C178  F02B         	movff	powf@v,___flsub@b
  3741  001C86  C179  F02C         	movff	powf@v+1,___flsub@b+1
  3742  001C8A  C17A  F02D         	movff	powf@v+2,___flsub@b+2
  3743  001C8E  C17B  F02E         	movff	powf@v+3,___flsub@b+3
  3744  001C92  C194  F02F         	movff	_powf$876,___flsub@a
  3745  001C96  C195  F030         	movff	_powf$876+1,___flsub@a+1
  3746  001C9A  C196  F031         	movff	_powf$876+2,___flsub@a+2
  3747  001C9E  C197  F032         	movff	_powf$876+3,___flsub@a+3
  3748  001CA2  ECD7  F01F         	call	___flsub	;wreg free
  3749  001CA6  C02B  F164         	movff	?___flsub,powf@p_l
  3750  001CAA  C02C  F165         	movff	?___flsub+1,powf@p_l+1
  3751  001CAE  C02D  F166         	movff	?___flsub+2,powf@p_l+2
  3752  001CB2  C02E  F167         	movff	?___flsub+3,powf@p_l+3
  3753  001CB6  C19C  F012         	movff	powf@p_h,___flmul@b
  3754  001CBA  C19D  F013         	movff	powf@p_h+1,___flmul@b+1
  3755  001CBE  C19E  F014         	movff	powf@p_h+2,___flmul@b+2
  3756  001CC2  C19F  F015         	movff	powf@p_h+3,___flmul@b+3
  3757  001CC6  0E00               	movlw	0
  3758  001CC8  6E16               	movwf	___flmul@a,c
  3759  001CCA  0E40               	movlw	64
  3760  001CCC  6E17               	movwf	___flmul@a+1,c
  3761  001CCE  0E76               	movlw	118
  3762  001CD0  6E18               	movwf	___flmul@a+2,c
  3763  001CD2  0E3F               	movlw	63
  3764  001CD4  6E19               	movwf	___flmul@a+3,c
  3765  001CD6  ECB9  F018         	call	___flmul	;wreg free
  3766  001CDA  C012  F120         	movff	?___flmul,powf@z_h
  3767  001CDE  C013  F121         	movff	?___flmul+1,powf@z_h+1
  3768  001CE2  C014  F122         	movff	?___flmul+2,powf@z_h+2
  3769  001CE6  C015  F123         	movff	?___flmul+3,powf@z_h+3
  3770  001CEA  0E4F               	movlw	79
  3771  001CEC  6E16               	movwf	___flmul@a,c
  3772  001CEE  0E38               	movlw	56
  3773  001CF0  6E17               	movwf	___flmul@a+1,c
  3774  001CF2  0E76               	movlw	118
  3775  001CF4  6E18               	movwf	___flmul@a+2,c
  3776  001CF6  0E3F               	movlw	63
  3777  001CF8  6E19               	movwf	___flmul@a+3,c
  3778  001CFA  C164  F012         	movff	powf@p_l,___flmul@b
  3779  001CFE  C165  F013         	movff	powf@p_l+1,___flmul@b+1
  3780  001D02  C166  F014         	movff	powf@p_l+2,___flmul@b+2
  3781  001D06  C167  F015         	movff	powf@p_l+3,___flmul@b+3
  3782  001D0A  ECB9  F018         	call	___flmul	;wreg free
  3783  001D0E  C012  F006         	movff	?___flmul,___fladd@a
  3784  001D12  C013  F007         	movff	?___flmul+1,___fladd@a+1
  3785  001D16  C014  F008         	movff	?___flmul+2,___fladd@a+2
  3786  001D1A  C015  F009         	movff	?___flmul+3,___fladd@a+3
  3787  001D1E  0EC6               	movlw	198
  3788  001D20  6E16               	movwf	___flmul@a,c
  3789  001D22  0E23               	movlw	35
  3790  001D24  6E17               	movwf	___flmul@a+1,c
  3791  001D26  0EF6               	movlw	246
  3792  001D28  6E18               	movwf	___flmul@a+2,c
  3793  001D2A  0EB8               	movlw	184
  3794  001D2C  6E19               	movwf	___flmul@a+3,c
  3795  001D2E  C19C  F012         	movff	powf@p_h,___flmul@b
  3796  001D32  C19D  F013         	movff	powf@p_h+1,___flmul@b+1
  3797  001D36  C19E  F014         	movff	powf@p_h+2,___flmul@b+2
  3798  001D3A  C19F  F015         	movff	powf@p_h+3,___flmul@b+3
  3799  001D3E  ECB9  F018         	call	___flmul	;wreg free
  3800  001D42  C012  F002         	movff	?___flmul,___fladd@b
  3801  001D46  C013  F003         	movff	?___flmul+1,___fladd@b+1
  3802  001D4A  C014  F004         	movff	?___flmul+2,___fladd@b+2
  3803  001D4E  C015  F005         	movff	?___flmul+3,___fladd@b+3
  3804  001D52  EC7A  F01A         	call	___fladd	;wreg free
  3805  001D56  C002  F158         	movff	?___fladd,_powf$880
  3806  001D5A  C003  F159         	movff	?___fladd+1,_powf$880+1
  3807  001D5E  C004  F15A         	movff	?___fladd+2,_powf$880+2
  3808  001D62  C005  F15B         	movff	?___fladd+3,_powf$880+3
  3809  001D66  C158  F002         	movff	_powf$880,___fladd@b
  3810  001D6A  C159  F003         	movff	_powf$880+1,___fladd@b+1
  3811  001D6E  C15A  F004         	movff	_powf$880+2,___fladd@b+2
  3812  001D72  C15B  F005         	movff	_powf$880+3,___fladd@b+3
  3813  001D76  C1A0  F069         	movff	powf@k,??_powf
  3814  001D7A  C1A1  F06A         	movff	powf@k+1,??_powf+1
  3815  001D7E  90D8               	bcf	status,0,c
  3816  001D80  3669               	rlcf	??_powf,f,c
  3817  001D82  366A               	rlcf	??_powf+1,f,c
  3818  001D84  90D8               	bcf	status,0,c
  3819  001D86  3669               	rlcf	??_powf,f,c
  3820  001D88  366A               	rlcf	??_powf+1,f,c
  3821  001D8A  0E01               	movlw	low _dp_l
  3822  001D8C  2469               	addwf	??_powf,w,c
  3823  001D8E  6EF6               	movwf	tblptrl,c
  3824  001D90  0E06               	movlw	high _dp_l
  3825  001D92  206A               	addwfc	??_powf+1,w,c
  3826  001D94  6EF7               	movwf	tblptrh,c
  3827  001D96                     	if	0	;There are less than 3 active tblptr bytes
  3828  001D96                     	endif
  3829  001D96  0009               	tblrd		*+
  3830  001D98  FFFF               	dw	65535	; errata NOP
  3831  001D9A  CFF5 F006          	movff	tablat,___fladd@a
  3832  001D9E  0009               	tblrd		*+
  3833  001DA0  FFFF               	dw	65535	; errata NOP
  3834  001DA2  CFF5 F007          	movff	tablat,___fladd@a+1
  3835  001DA6  0009               	tblrd		*+
  3836  001DA8  FFFF               	dw	65535	; errata NOP
  3837  001DAA  CFF5 F008          	movff	tablat,___fladd@a+2
  3838  001DAE  000A               	tblrd		*-
  3839  001DB0  FFFF               	dw	65535	; errata NOP
  3840  001DB2  CFF5 F009          	movff	tablat,___fladd@a+3
  3841  001DB6  EC7A  F01A         	call	___fladd	;wreg free
  3842  001DBA  C002  F124         	movff	?___fladd,powf@z_l
  3843  001DBE  C003  F125         	movff	?___fladd+1,powf@z_l+1
  3844  001DC2  C004  F126         	movff	?___fladd+2,powf@z_l+2
  3845  001DC6  C005  F127         	movff	?___fladd+3,powf@z_l+3
  3846  001DCA  C17C  F002         	movff	powf@n,___xxtofl@val
  3847  001DCE  C17D  F003         	movff	powf@n+1,___xxtofl@val+1
  3848  001DD2  C17E  F004         	movff	powf@n+2,___xxtofl@val+2
  3849  001DD6  C17F  F005         	movff	powf@n+3,___xxtofl@val+3
  3850  001DDA  0E01               	movlw	1
  3851  001DDC  EC17  F000         	call	___xxtofl
  3852  001DE0  C002  F1B0         	movff	?___xxtofl,powf@t
  3853  001DE4  C003  F1B1         	movff	?___xxtofl+1,powf@t+1
  3854  001DE8  C004  F1B2         	movff	?___xxtofl+2,powf@t+2
  3855  001DEC  C005  F1B3         	movff	?___xxtofl+3,powf@t+3
  3856  001DF0  C124  F006         	movff	powf@z_l,___fladd@a
  3857  001DF4  C125  F007         	movff	powf@z_l+1,___fladd@a+1
  3858  001DF8  C126  F008         	movff	powf@z_l+2,___fladd@a+2
  3859  001DFC  C127  F009         	movff	powf@z_l+3,___fladd@a+3
  3860  001E00  C120  F002         	movff	powf@z_h,___fladd@b
  3861  001E04  C121  F003         	movff	powf@z_h+1,___fladd@b+1
  3862  001E08  C122  F004         	movff	powf@z_h+2,___fladd@b+2
  3863  001E0C  C123  F005         	movff	powf@z_h+3,___fladd@b+3
  3864  001E10  EC7A  F01A         	call	___fladd	;wreg free
  3865  001E14  C002  F158         	movff	?___fladd,_powf$880
  3866  001E18  C003  F159         	movff	?___fladd+1,_powf$880+1
  3867  001E1C  C004  F15A         	movff	?___fladd+2,_powf$880+2
  3868  001E20  C005  F15B         	movff	?___fladd+3,_powf$880+3
  3869  001E24  C1A0  F069         	movff	powf@k,??_powf
  3870  001E28  C1A1  F06A         	movff	powf@k+1,??_powf+1
  3871  001E2C  90D8               	bcf	status,0,c
  3872  001E2E  3669               	rlcf	??_powf,f,c
  3873  001E30  366A               	rlcf	??_powf+1,f,c
  3874  001E32  90D8               	bcf	status,0,c
  3875  001E34  3669               	rlcf	??_powf,f,c
  3876  001E36  366A               	rlcf	??_powf+1,f,c
  3877  001E38  0E09               	movlw	low _dp_h
  3878  001E3A  2469               	addwf	??_powf,w,c
  3879  001E3C  6EF6               	movwf	tblptrl,c
  3880  001E3E  0E06               	movlw	high _dp_h
  3881  001E40  206A               	addwfc	??_powf+1,w,c
  3882  001E42  6EF7               	movwf	tblptrh,c
  3883  001E44                     	if	0	;There are less than 3 active tblptr bytes
  3884  001E44                     	endif
  3885  001E44  0009               	tblrd		*+
  3886  001E46  FFFF               	dw	65535	; errata NOP
  3887  001E48  CFF5 F006          	movff	tablat,___fladd@a
  3888  001E4C  0009               	tblrd		*+
  3889  001E4E  FFFF               	dw	65535	; errata NOP
  3890  001E50  CFF5 F007          	movff	tablat,___fladd@a+1
  3891  001E54  0009               	tblrd		*+
  3892  001E56  FFFF               	dw	65535	; errata NOP
  3893  001E58  CFF5 F008          	movff	tablat,___fladd@a+2
  3894  001E5C  000A               	tblrd		*-
  3895  001E5E  FFFF               	dw	65535	; errata NOP
  3896  001E60  CFF5 F009          	movff	tablat,___fladd@a+3
  3897  001E64  C158  F002         	movff	_powf$880,___fladd@b
  3898  001E68  C159  F003         	movff	_powf$880+1,___fladd@b+1
  3899  001E6C  C15A  F004         	movff	_powf$880+2,___fladd@b+2
  3900  001E70  C15B  F005         	movff	_powf$880+3,___fladd@b+3
  3901  001E74  EC7A  F01A         	call	___fladd	;wreg free
  3902  001E78  C002  F108         	movff	?___fladd,_powf$883
  3903  001E7C  C003  F109         	movff	?___fladd+1,_powf$883+1
  3904  001E80  C004  F10A         	movff	?___fladd+2,_powf$883+2
  3905  001E84  C005  F10B         	movff	?___fladd+3,_powf$883+3
  3906  001E88  C108  F002         	movff	_powf$883,___fladd@b
  3907  001E8C  C109  F003         	movff	_powf$883+1,___fladd@b+1
  3908  001E90  C10A  F004         	movff	_powf$883+2,___fladd@b+2
  3909  001E94  C10B  F005         	movff	_powf$883+3,___fladd@b+3
  3910  001E98  C1B0  F006         	movff	powf@t,___fladd@a
  3911  001E9C  C1B1  F007         	movff	powf@t+1,___fladd@a+1
  3912  001EA0  C1B2  F008         	movff	powf@t+2,___fladd@a+2
  3913  001EA4  C1B3  F009         	movff	powf@t+3,___fladd@a+3
  3914  001EA8  EC7A  F01A         	call	___fladd	;wreg free
  3915  001EAC  C002  F180         	movff	?___fladd,powf@t1
  3916  001EB0  C003  F181         	movff	?___fladd+1,powf@t1+1
  3917  001EB4  C004  F182         	movff	?___fladd+2,powf@t1+2
  3918  001EB8  C005  F183         	movff	?___fladd+3,powf@t1+3
  3919  001EBC  C180  F1B8         	movff	powf@t1,powf@__xc8_float_word
  3920  001EC0  C181  F1B9         	movff	powf@t1+1,powf@__xc8_float_word+1
  3921  001EC4  C182  F1BA         	movff	powf@t1+2,powf@__xc8_float_word+2
  3922  001EC8  C183  F1BB         	movff	powf@t1+3,powf@__xc8_float_word+3
  3923  001ECC  C1B8  F190         	movff	powf@__xc8_float_word,powf@is
  3924  001ED0  C1B9  F191         	movff	powf@__xc8_float_word+1,powf@is+1
  3925  001ED4  C1BA  F192         	movff	powf@__xc8_float_word+2,powf@is+2
  3926  001ED8  C1BB  F193         	movff	powf@__xc8_float_word+3,powf@is+3
  3927  001EDC  0E00               	movlw	0
  3928  001EDE  0101               	movlb	1	; () banked
  3929  001EE0  1590               	andwf	powf@is& (0+255),w,b
  3930  001EE2  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  3931  001EE4  0EF0               	movlw	240
  3932  001EE6  1591               	andwf	(powf@is+1)& (0+255),w,b
  3933  001EE8  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  3934  001EEA  0EFF               	movlw	255
  3935  001EEC  1592               	andwf	(powf@is+2)& (0+255),w,b
  3936  001EEE  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  3937  001EF0  0EFF               	movlw	255
  3938  001EF2  1593               	andwf	(powf@is+3)& (0+255),w,b
  3939  001EF4  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  3940                           
  3941                           ; BSR set to: 1
  3942  001EF6  C1B8  F180         	movff	powf@__xc8_float_word,powf@t1
  3943  001EFA  C1B9  F181         	movff	powf@__xc8_float_word+1,powf@t1+1
  3944  001EFE  C1BA  F182         	movff	powf@__xc8_float_word+2,powf@t1+2
  3945  001F02  C1BB  F183         	movff	powf@__xc8_float_word+3,powf@t1+3
  3946                           
  3947                           ; BSR set to: 1
  3948  001F06  C1B0  F02F         	movff	powf@t,___flsub@a
  3949  001F0A  C1B1  F030         	movff	powf@t+1,___flsub@a+1
  3950  001F0E  C1B2  F031         	movff	powf@t+2,___flsub@a+2
  3951  001F12  C1B3  F032         	movff	powf@t+3,___flsub@a+3
  3952  001F16  C180  F02B         	movff	powf@t1,___flsub@b
  3953  001F1A  C181  F02C         	movff	powf@t1+1,___flsub@b+1
  3954  001F1E  C182  F02D         	movff	powf@t1+2,___flsub@b+2
  3955  001F22  C183  F02E         	movff	powf@t1+3,___flsub@b+3
  3956  001F26  ECD7  F01F         	call	___flsub	;wreg free
  3957  001F2A  C02B  F194         	movff	?___flsub,_powf$876
  3958  001F2E  C02C  F195         	movff	?___flsub+1,_powf$876+1
  3959  001F32  C02D  F196         	movff	?___flsub+2,_powf$876+2
  3960  001F36  C02E  F197         	movff	?___flsub+3,_powf$876+3
  3961  001F3A  C1A0  F069         	movff	powf@k,??_powf
  3962  001F3E  C1A1  F06A         	movff	powf@k+1,??_powf+1
  3963  001F42  90D8               	bcf	status,0,c
  3964  001F44  3669               	rlcf	??_powf,f,c
  3965  001F46  366A               	rlcf	??_powf+1,f,c
  3966  001F48  90D8               	bcf	status,0,c
  3967  001F4A  3669               	rlcf	??_powf,f,c
  3968  001F4C  366A               	rlcf	??_powf+1,f,c
  3969  001F4E  0E09               	movlw	low _dp_h
  3970  001F50  2469               	addwf	??_powf,w,c
  3971  001F52  6EF6               	movwf	tblptrl,c
  3972  001F54  0E06               	movlw	high _dp_h
  3973  001F56  206A               	addwfc	??_powf+1,w,c
  3974  001F58  6EF7               	movwf	tblptrh,c
  3975  001F5A                     	if	0	;There are less than 3 active tblptr bytes
  3976  001F5A                     	endif
  3977  001F5A  0009               	tblrd		*+
  3978  001F5C  FFFF               	dw	65535	; errata NOP
  3979  001F5E  CFF5 F02F          	movff	tablat,___flsub@a
  3980  001F62  0009               	tblrd		*+
  3981  001F64  FFFF               	dw	65535	; errata NOP
  3982  001F66  CFF5 F030          	movff	tablat,___flsub@a+1
  3983  001F6A  0009               	tblrd		*+
  3984  001F6C  FFFF               	dw	65535	; errata NOP
  3985  001F6E  CFF5 F031          	movff	tablat,___flsub@a+2
  3986  001F72  000A               	tblrd		*-
  3987  001F74  FFFF               	dw	65535	; errata NOP
  3988  001F76  CFF5 F032          	movff	tablat,___flsub@a+3
  3989  001F7A  C194  F02B         	movff	_powf$876,___flsub@b
  3990  001F7E  C195  F02C         	movff	_powf$876+1,___flsub@b+1
  3991  001F82  C196  F02D         	movff	_powf$876+2,___flsub@b+2
  3992  001F86  C197  F02E         	movff	_powf$876+3,___flsub@b+3
  3993  001F8A  ECD7  F01F         	call	___flsub	;wreg free
  3994  001F8E  C02B  F140         	movff	?___flsub,_powf$882
  3995  001F92  C02C  F141         	movff	?___flsub+1,_powf$882+1
  3996  001F96  C02D  F142         	movff	?___flsub+2,_powf$882+2
  3997  001F9A  C02E  F143         	movff	?___flsub+3,_powf$882+3
  3998  001F9E  C120  F02F         	movff	powf@z_h,___flsub@a
  3999  001FA2  C121  F030         	movff	powf@z_h+1,___flsub@a+1
  4000  001FA6  C122  F031         	movff	powf@z_h+2,___flsub@a+2
  4001  001FAA  C123  F032         	movff	powf@z_h+3,___flsub@a+3
  4002  001FAE  C140  F02B         	movff	_powf$882,___flsub@b
  4003  001FB2  C141  F02C         	movff	_powf$882+1,___flsub@b+1
  4004  001FB6  C142  F02D         	movff	_powf$882+2,___flsub@b+2
  4005  001FBA  C143  F02E         	movff	_powf$882+3,___flsub@b+3
  4006  001FBE  ECD7  F01F         	call	___flsub	;wreg free
  4007  001FC2  C02B  F10C         	movff	?___flsub,_powf$884
  4008  001FC6  C02C  F10D         	movff	?___flsub+1,_powf$884+1
  4009  001FCA  C02D  F10E         	movff	?___flsub+2,_powf$884+2
  4010  001FCE  C02E  F10F         	movff	?___flsub+3,_powf$884+3
  4011  001FD2  C124  F02B         	movff	powf@z_l,___flsub@b
  4012  001FD6  C125  F02C         	movff	powf@z_l+1,___flsub@b+1
  4013  001FDA  C126  F02D         	movff	powf@z_l+2,___flsub@b+2
  4014  001FDE  C127  F02E         	movff	powf@z_l+3,___flsub@b+3
  4015  001FE2  C10C  F02F         	movff	_powf$884,___flsub@a
  4016  001FE6  C10D  F030         	movff	_powf$884+1,___flsub@a+1
  4017  001FEA  C10E  F031         	movff	_powf$884+2,___flsub@a+2
  4018  001FEE  C10F  F032         	movff	_powf$884+3,___flsub@a+3
  4019  001FF2  ECD7  F01F         	call	___flsub	;wreg free
  4020  001FF6                     L5:
  4021  001FF6  FFFF               	dw	65535	; assembler added errata NOP
  4022  001FF8  C02B  F11C         	movff	?___flsub,powf@t2
  4023  001FFC  C02C  F11D         	movff	?___flsub+1,powf@t2+1
  4024  002000  C02D  F11E         	movff	?___flsub+2,powf@t2+2
  4025  002004  C02E  F11F         	movff	?___flsub+3,powf@t2+3
  4026  002008  C065  F1B8         	movff	powf@y,powf@__xc8_float_word
  4027  00200C  C066  F1B9         	movff	powf@y+1,powf@__xc8_float_word+1
  4028  002010  C067  F1BA         	movff	powf@y+2,powf@__xc8_float_word+2
  4029  002014  C068  F1BB         	movff	powf@y+3,powf@__xc8_float_word+3
  4030  002018  C1B8  F190         	movff	powf@__xc8_float_word,powf@is
  4031  00201C  C1B9  F191         	movff	powf@__xc8_float_word+1,powf@is+1
  4032  002020  C1BA  F192         	movff	powf@__xc8_float_word+2,powf@is+2
  4033  002024  C1BB  F193         	movff	powf@__xc8_float_word+3,powf@is+3
  4034  002028  0E00               	movlw	0
  4035  00202A  0101               	movlb	1	; () banked
  4036  00202C  1590               	andwf	powf@is& (0+255),w,b
  4037  00202E  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  4038  002030  0EF0               	movlw	240
  4039  002032  1591               	andwf	(powf@is+1)& (0+255),w,b
  4040  002034  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  4041  002036  0EFF               	movlw	255
  4042  002038  1592               	andwf	(powf@is+2)& (0+255),w,b
  4043  00203A  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  4044  00203C  0EFF               	movlw	255
  4045  00203E  1593               	andwf	(powf@is+3)& (0+255),w,b
  4046  002040  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  4047                           
  4048                           ; BSR set to: 1
  4049  002042  C1B8  F128         	movff	powf@__xc8_float_word,powf@y1
  4050  002046  C1B9  F129         	movff	powf@__xc8_float_word+1,powf@y1+1
  4051  00204A  C1BA  F12A         	movff	powf@__xc8_float_word+2,powf@y1+2
  4052  00204E  C1BB  F12B         	movff	powf@__xc8_float_word+3,powf@y1+3
  4053                           
  4054                           ; BSR set to: 1
  4055  002052  C180  F016         	movff	powf@t1,___flmul@a
  4056  002056  C181  F017         	movff	powf@t1+1,___flmul@a+1
  4057  00205A  C182  F018         	movff	powf@t1+2,___flmul@a+2
  4058  00205E  C183  F019         	movff	powf@t1+3,___flmul@a+3
  4059  002062  C128  F02F         	movff	powf@y1,___flsub@a
  4060  002066  C129  F030         	movff	powf@y1+1,___flsub@a+1
  4061  00206A  C12A  F031         	movff	powf@y1+2,___flsub@a+2
  4062  00206E  C12B  F032         	movff	powf@y1+3,___flsub@a+3
  4063  002072  C065  F02B         	movff	powf@y,___flsub@b
  4064  002076  C066  F02C         	movff	powf@y+1,___flsub@b+1
  4065  00207A  C067  F02D         	movff	powf@y+2,___flsub@b+2
  4066  00207E  C068  F02E         	movff	powf@y+3,___flsub@b+3
  4067  002082  ECD7  F01F         	call	___flsub	;wreg free
  4068  002086  C02B  F012         	movff	?___flsub,___flmul@b
  4069  00208A  C02C  F013         	movff	?___flsub+1,___flmul@b+1
  4070  00208E  C02D  F014         	movff	?___flsub+2,___flmul@b+2
  4071  002092  C02E  F015         	movff	?___flsub+3,___flmul@b+3
  4072  002096  ECB9  F018         	call	___flmul	;wreg free
  4073  00209A  C012  F110         	movff	?___flmul,_powf$885
  4074  00209E  C013  F111         	movff	?___flmul+1,_powf$885+1
  4075  0020A2  C014  F112         	movff	?___flmul+2,_powf$885+2
  4076  0020A6  C015  F113         	movff	?___flmul+3,_powf$885+3
  4077  0020AA  C110  F002         	movff	_powf$885,___fladd@b
  4078  0020AE  C111  F003         	movff	_powf$885+1,___fladd@b+1
  4079  0020B2  C112  F004         	movff	_powf$885+2,___fladd@b+2
  4080  0020B6  C113  F005         	movff	_powf$885+3,___fladd@b+3
  4081  0020BA  C11C  F016         	movff	powf@t2,___flmul@a
  4082  0020BE  C11D  F017         	movff	powf@t2+1,___flmul@a+1
  4083  0020C2  C11E  F018         	movff	powf@t2+2,___flmul@a+2
  4084  0020C6  C11F  F019         	movff	powf@t2+3,___flmul@a+3
  4085  0020CA  C065  F012         	movff	powf@y,___flmul@b
  4086  0020CE  C066  F013         	movff	powf@y+1,___flmul@b+1
  4087  0020D2  C067  F014         	movff	powf@y+2,___flmul@b+2
  4088  0020D6  C068  F015         	movff	powf@y+3,___flmul@b+3
  4089  0020DA  ECB9  F018         	call	___flmul	;wreg free
  4090  0020DE  C012  F006         	movff	?___flmul,___fladd@a
  4091  0020E2  C013  F007         	movff	?___flmul+1,___fladd@a+1
  4092  0020E6  C014  F008         	movff	?___flmul+2,___fladd@a+2
  4093  0020EA  C015  F009         	movff	?___flmul+3,___fladd@a+3
  4094  0020EE  EC7A  F01A         	call	___fladd	;wreg free
  4095  0020F2  C002  F164         	movff	?___fladd,powf@p_l
  4096  0020F6  C003  F165         	movff	?___fladd+1,powf@p_l+1
  4097  0020FA  C004  F166         	movff	?___fladd+2,powf@p_l+2
  4098  0020FE  C005  F167         	movff	?___fladd+3,powf@p_l+3
  4099  002102  C128  F012         	movff	powf@y1,___flmul@b
  4100  002106  C129  F013         	movff	powf@y1+1,___flmul@b+1
  4101  00210A  C12A  F014         	movff	powf@y1+2,___flmul@b+2
  4102  00210E  C12B  F015         	movff	powf@y1+3,___flmul@b+3
  4103  002112  C180  F016         	movff	powf@t1,___flmul@a
  4104  002116  C181  F017         	movff	powf@t1+1,___flmul@a+1
  4105  00211A  C182  F018         	movff	powf@t1+2,___flmul@a+2
  4106  00211E  C183  F019         	movff	powf@t1+3,___flmul@a+3
  4107  002122  ECB9  F018         	call	___flmul	;wreg free
  4108  002126  C012  F19C         	movff	?___flmul,powf@p_h
  4109  00212A  C013  F19D         	movff	?___flmul+1,powf@p_h+1
  4110  00212E  C014  F19E         	movff	?___flmul+2,powf@p_h+2
  4111  002132  C015  F19F         	movff	?___flmul+3,powf@p_h+3
  4112  002136  C164  F002         	movff	powf@p_l,___fladd@b
  4113  00213A  C165  F003         	movff	powf@p_l+1,___fladd@b+1
  4114  00213E  C166  F004         	movff	powf@p_l+2,___fladd@b+2
  4115  002142  C167  F005         	movff	powf@p_l+3,___fladd@b+3
  4116  002146  C19C  F006         	movff	powf@p_h,___fladd@a
  4117  00214A  C19D  F007         	movff	powf@p_h+1,___fladd@a+1
  4118  00214E  C19E  F008         	movff	powf@p_h+2,___fladd@a+2
  4119  002152  C19F  F009         	movff	powf@p_h+3,___fladd@a+3
  4120  002156  EC7A  F01A         	call	___fladd	;wreg free
  4121  00215A  C002  F1B4         	movff	?___fladd,powf@z
  4122  00215E  C003  F1B5         	movff	?___fladd+1,powf@z+1
  4123  002162  C004  F1B6         	movff	?___fladd+2,powf@z+2
  4124  002166  C005  F1B7         	movff	?___fladd+3,powf@z+3
  4125  00216A  C1B4  F1B8         	movff	powf@z,powf@__xc8_float_word
  4126  00216E  C1B5  F1B9         	movff	powf@z+1,powf@__xc8_float_word+1
  4127  002172  C1B6  F1BA         	movff	powf@z+2,powf@__xc8_float_word+2
  4128  002176  C1B7  F1BB         	movff	powf@z+3,powf@__xc8_float_word+3
  4129  00217A  C1B8  F1AC         	movff	powf@__xc8_float_word,powf@j
  4130  00217E  C1B9  F1AD         	movff	powf@__xc8_float_word+1,powf@j+1
  4131  002182  C1BA  F1AE         	movff	powf@__xc8_float_word+2,powf@j+2
  4132  002186  C1BB  F1AF         	movff	powf@__xc8_float_word+3,powf@j+3
  4133  00218A  0101               	movlb	1	; () banked
  4134  00218C  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
  4135  00218E  D037               	goto	l3420
  4136  002190  05AC               	decf	powf@j& (0+255),w,b
  4137  002192  0E00               	movlw	0
  4138  002194  59AD               	subwfb	(powf@j+1)& (0+255),w,b
  4139  002196  0E00               	movlw	0
  4140  002198  59AE               	subwfb	(powf@j+2)& (0+255),w,b
  4141  00219A  0E43               	movlw	67
  4142  00219C  59AF               	subwfb	(powf@j+3)& (0+255),w,b
  4143  00219E  A0D8               	btfss	status,0,c
  4144  0021A0  D02E               	goto	l3420
  4145                           
  4146                           ; BSR set to: 1
  4147  0021A2  0ECA               	movlw	202
  4148  0021A4  6E16               	movwf	___flmul@a,c
  4149  0021A6  0EF2               	movlw	242
  4150  0021A8  6E17               	movwf	___flmul@a+1,c
  4151  0021AA  0E49               	movlw	73
  4152  0021AC  6E18               	movwf	___flmul@a+2,c
  4153  0021AE  0E71               	movlw	113
  4154  0021B0  6E19               	movwf	___flmul@a+3,c
  4155  0021B2  C188  F012         	movff	powf@sn,___flmul@b
  4156  0021B6  C189  F013         	movff	powf@sn+1,___flmul@b+1
  4157  0021BA  C18A  F014         	movff	powf@sn+2,___flmul@b+2
  4158  0021BE  C18B  F015         	movff	powf@sn+3,___flmul@b+3
  4159  0021C2  ECB9  F018         	call	___flmul	;wreg free
  4160  0021C6  C012  F1A4         	movff	?___flmul,_powf$873
  4161  0021CA  C013  F1A5         	movff	?___flmul+1,_powf$873+1
  4162  0021CE  C014  F1A6         	movff	?___flmul+2,_powf$873+2
  4163  0021D2  C015  F1A7         	movff	?___flmul+3,_powf$873+3
  4164  0021D6  C1A4  F012         	movff	_powf$873,___flmul@b
  4165  0021DA  C1A5  F013         	movff	_powf$873+1,___flmul@b+1
  4166  0021DE  C1A6  F014         	movff	_powf$873+2,___flmul@b+2
  4167  0021E2  C1A7  F015         	movff	_powf$873+3,___flmul@b+3
  4168  0021E6  0ECA               	movlw	202
  4169  0021E8  6E16               	movwf	___flmul@a,c
  4170  0021EA  0EF2               	movlw	242
  4171  0021EC  6E17               	movwf	___flmul@a+1,c
  4172  0021EE  0E49               	movlw	73
  4173  0021F0  6E18               	movwf	___flmul@a+2,c
  4174  0021F2  0E71               	movlw	113
  4175  0021F4  6E19               	movwf	___flmul@a+3,c
  4176  0021F6  ECB9  F018         	call	___flmul	;wreg free
  4177  0021FA  EF80  F016         	goto	L4
  4178  0021FE                     l3420:
  4179  0021FE  FFFF               	dw	65535	; assembler added errata NOP
  4180                           
  4181                           ; BSR set to: 1
  4182  002200  0E43               	movlw	67
  4183  002202  19AF               	xorwf	(powf@j+3)& (0+255),w,b
  4184  002204  11AC               	iorwf	powf@j& (0+255),w,b
  4185  002206  11AD               	iorwf	(powf@j+1)& (0+255),w,b
  4186  002208  11AE               	iorwf	(powf@j+2)& (0+255),w,b
  4187  00220A  A4D8               	btfss	status,2,c
  4188  00220C  D066               	goto	l3428
  4189                           
  4190                           ; BSR set to: 1
  4191  00220E  C19C  F02F         	movff	powf@p_h,___flsub@a
  4192  002212  C19D  F030         	movff	powf@p_h+1,___flsub@a+1
  4193  002216  C19E  F031         	movff	powf@p_h+2,___flsub@a+2
  4194  00221A  C19F  F032         	movff	powf@p_h+3,___flsub@a+3
  4195  00221E  C1B4  F02B         	movff	powf@z,___flsub@b
  4196  002222  C1B5  F02C         	movff	powf@z+1,___flsub@b+1
  4197  002226  C1B6  F02D         	movff	powf@z+2,___flsub@b+2
  4198  00222A  C1B7  F02E         	movff	powf@z+3,___flsub@b+3
  4199  00222E  ECD7  F01F         	call	___flsub	;wreg free
  4200  002232  C02B  F04C         	movff	?___flsub,___flge@ff1
  4201  002236  C02C  F04D         	movff	?___flsub+1,___flge@ff1+1
  4202  00223A  C02D  F04E         	movff	?___flsub+2,___flge@ff1+2
  4203  00223E  C02E  F04F         	movff	?___flsub+3,___flge@ff1+3
  4204  002242  0E3C               	movlw	60
  4205  002244  6E06               	movwf	___fladd@a,c
  4206  002246  0EAA               	movlw	170
  4207  002248  6E07               	movwf	___fladd@a+1,c
  4208  00224A  0E38               	movlw	56
  4209  00224C  6E08               	movwf	___fladd@a+2,c
  4210  00224E  0E33               	movlw	51
  4211  002250  6E09               	movwf	___fladd@a+3,c
  4212  002252  C164  F002         	movff	powf@p_l,___fladd@b
  4213  002256  C165  F003         	movff	powf@p_l+1,___fladd@b+1
  4214  00225A  C166  F004         	movff	powf@p_l+2,___fladd@b+2
  4215  00225E  C167  F005         	movff	powf@p_l+3,___fladd@b+3
  4216  002262  EC7A  F01A         	call	___fladd	;wreg free
  4217  002266  C002  F050         	movff	?___fladd,___flge@ff2
  4218  00226A  C003  F051         	movff	?___fladd+1,___flge@ff2+1
  4219  00226E  C004  F052         	movff	?___fladd+2,___flge@ff2+2
  4220  002272  C005  F053         	movff	?___fladd+3,___flge@ff2+3
  4221  002276  EC3D  F001         	call	___flge	;wreg free
  4222  00227A  B0D8               	btfsc	status,0,c
  4223  00227C  D0D2               	goto	l3444
  4224  00227E  0ECA               	movlw	202
  4225  002280  6E16               	movwf	___flmul@a,c
  4226  002282  0EF2               	movlw	242
  4227  002284  6E17               	movwf	___flmul@a+1,c
  4228  002286  0E49               	movlw	73
  4229  002288  6E18               	movwf	___flmul@a+2,c
  4230  00228A  0E71               	movlw	113
  4231  00228C  6E19               	movwf	___flmul@a+3,c
  4232  00228E  C188  F012         	movff	powf@sn,___flmul@b
  4233  002292  C189  F013         	movff	powf@sn+1,___flmul@b+1
  4234  002296  C18A  F014         	movff	powf@sn+2,___flmul@b+2
  4235  00229A  C18B  F015         	movff	powf@sn+3,___flmul@b+3
  4236  00229E  ECB9  F018         	call	___flmul	;wreg free
  4237  0022A2  C012  F1A4         	movff	?___flmul,_powf$873
  4238  0022A6  C013  F1A5         	movff	?___flmul+1,_powf$873+1
  4239  0022AA  C014  F1A6         	movff	?___flmul+2,_powf$873+2
  4240  0022AE  C015  F1A7         	movff	?___flmul+3,_powf$873+3
  4241  0022B2  C1A4  F012         	movff	_powf$873,___flmul@b
  4242  0022B6  C1A5  F013         	movff	_powf$873+1,___flmul@b+1
  4243  0022BA  C1A6  F014         	movff	_powf$873+2,___flmul@b+2
  4244  0022BE  C1A7  F015         	movff	_powf$873+3,___flmul@b+3
  4245  0022C2  0ECA               	movlw	202
  4246  0022C4  6E16               	movwf	___flmul@a,c
  4247  0022C6  0EF2               	movlw	242
  4248  0022C8  6E17               	movwf	___flmul@a+1,c
  4249  0022CA  0E49               	movlw	73
  4250  0022CC  6E18               	movwf	___flmul@a+2,c
  4251  0022CE  0E71               	movlw	113
  4252  0022D0  6E19               	movwf	___flmul@a+3,c
  4253  0022D2  ECB9  F018         	call	___flmul	;wreg free
  4254  0022D6  EF80  F016         	goto	L4
  4255  0022DA                     l3428:
  4256  0022DA  FFFF               	dw	65535	; assembler added errata NOP
  4257                           
  4258                           ; BSR set to: 1
  4259  0022DC  0EFF               	movlw	255
  4260  0022DE  15AC               	andwf	powf@j& (0+255),w,b
  4261  0022E0  6E69               	movwf	??_powf& (0+255),c
  4262  0022E2  0EFF               	movlw	255
  4263  0022E4  15AD               	andwf	(powf@j+1)& (0+255),w,b
  4264  0022E6  6E6A               	movwf	(??_powf+1)& (0+255),c
  4265  0022E8  0EFF               	movlw	255
  4266  0022EA  15AE               	andwf	(powf@j+2)& (0+255),w,b
  4267  0022EC  6E6B               	movwf	(??_powf+2)& (0+255),c
  4268  0022EE  0E7F               	movlw	127
  4269  0022F0  15AF               	andwf	(powf@j+3)& (0+255),w,b
  4270  0022F2  6E6C               	movwf	(??_powf+3)& (0+255),c
  4271  0022F4  BE6C               	btfsc	??_powf+3,7,c
  4272  0022F6  D037               	goto	l3436
  4273  0022F8  0469               	decf	??_powf,w,c
  4274  0022FA  0E00               	movlw	0
  4275  0022FC  586A               	subwfb	??_powf+1,w,c
  4276  0022FE  0E16               	movlw	22
  4277  002300  586B               	subwfb	??_powf+2,w,c
  4278  002302  0E43               	movlw	67
  4279  002304  586C               	subwfb	??_powf+3,w,c
  4280  002306  A0D8               	btfss	status,0,c
  4281  002308  D02E               	goto	l3436
  4282                           
  4283                           ; BSR set to: 1
  4284  00230A  0E60               	movlw	96
  4285  00230C  6E16               	movwf	___flmul@a,c
  4286  00230E  0E42               	movlw	66
  4287  002310  6E17               	movwf	___flmul@a+1,c
  4288  002312  0EA2               	movlw	162
  4289  002314  6E18               	movwf	___flmul@a+2,c
  4290  002316  0E0D               	movlw	13
  4291  002318  6E19               	movwf	___flmul@a+3,c
  4292  00231A  C188  F012         	movff	powf@sn,___flmul@b
  4293  00231E  C189  F013         	movff	powf@sn+1,___flmul@b+1
  4294  002322  C18A  F014         	movff	powf@sn+2,___flmul@b+2
  4295  002326  C18B  F015         	movff	powf@sn+3,___flmul@b+3
  4296  00232A  ECB9  F018         	call	___flmul	;wreg free
  4297  00232E  C012  F1A4         	movff	?___flmul,_powf$873
  4298  002332  C013  F1A5         	movff	?___flmul+1,_powf$873+1
  4299  002336  C014  F1A6         	movff	?___flmul+2,_powf$873+2
  4300  00233A  C015  F1A7         	movff	?___flmul+3,_powf$873+3
  4301  00233E  C1A4  F012         	movff	_powf$873,___flmul@b
  4302  002342  C1A5  F013         	movff	_powf$873+1,___flmul@b+1
  4303  002346  C1A6  F014         	movff	_powf$873+2,___flmul@b+2
  4304  00234A  C1A7  F015         	movff	_powf$873+3,___flmul@b+3
  4305  00234E  0E60               	movlw	96
  4306  002350  6E16               	movwf	___flmul@a,c
  4307  002352  0E42               	movlw	66
  4308  002354  6E17               	movwf	___flmul@a+1,c
  4309  002356  0EA2               	movlw	162
  4310  002358  6E18               	movwf	___flmul@a+2,c
  4311  00235A  0E0D               	movlw	13
  4312  00235C  6E19               	movwf	___flmul@a+3,c
  4313  00235E  ECB9  F018         	call	___flmul	;wreg free
  4314  002362  EF80  F016         	goto	L4
  4315  002366                     l3436:
  4316  002366  FFFF               	dw	65535	; assembler added errata NOP
  4317                           
  4318                           ; BSR set to: 1
  4319  002368  0E16               	movlw	22
  4320  00236A  19AE               	xorwf	(powf@j+2)& (0+255),w,b
  4321  00236C  E15A               	bnz	l3444
  4322  00236E  0EC3               	movlw	195
  4323  002370  19AF               	xorwf	(powf@j+3)& (0+255),w,b
  4324  002372  11AC               	iorwf	powf@j& (0+255),w,b
  4325  002374  11AD               	iorwf	(powf@j+1)& (0+255),w,b
  4326  002376  A4D8               	btfss	status,2,c
  4327  002378  D054               	goto	l3444
  4328                           
  4329                           ; BSR set to: 1
  4330  00237A  C19C  F02F         	movff	powf@p_h,___flsub@a
  4331  00237E  C19D  F030         	movff	powf@p_h+1,___flsub@a+1
  4332  002382  C19E  F031         	movff	powf@p_h+2,___flsub@a+2
  4333  002386  C19F  F032         	movff	powf@p_h+3,___flsub@a+3
  4334  00238A  C1B4  F02B         	movff	powf@z,___flsub@b
  4335  00238E  C1B5  F02C         	movff	powf@z+1,___flsub@b+1
  4336  002392  C1B6  F02D         	movff	powf@z+2,___flsub@b+2
  4337  002396  C1B7  F02E         	movff	powf@z+3,___flsub@b+3
  4338  00239A  ECD7  F01F         	call	___flsub	;wreg free
  4339  00239E  C02B  F04C         	movff	?___flsub,___flge@ff1
  4340  0023A2  C02C  F04D         	movff	?___flsub+1,___flge@ff1+1
  4341  0023A6  C02D  F04E         	movff	?___flsub+2,___flge@ff1+2
  4342  0023AA  C02E  F04F         	movff	?___flsub+3,___flge@ff1+3
  4343  0023AE  C164  F050         	movff	powf@p_l,___flge@ff2
  4344  0023B2  C165  F051         	movff	powf@p_l+1,___flge@ff2+1
  4345  0023B6  C166  F052         	movff	powf@p_l+2,___flge@ff2+2
  4346  0023BA  C167  F053         	movff	powf@p_l+3,___flge@ff2+3
  4347  0023BE  EC3D  F001         	call	___flge	;wreg free
  4348  0023C2  A0D8               	btfss	status,0,c
  4349  0023C4  D02E               	goto	l3444
  4350  0023C6  0E60               	movlw	96
  4351  0023C8  6E16               	movwf	___flmul@a,c
  4352  0023CA  0E42               	movlw	66
  4353  0023CC  6E17               	movwf	___flmul@a+1,c
  4354  0023CE  0EA2               	movlw	162
  4355  0023D0  6E18               	movwf	___flmul@a+2,c
  4356  0023D2  0E0D               	movlw	13
  4357  0023D4  6E19               	movwf	___flmul@a+3,c
  4358  0023D6  C188  F012         	movff	powf@sn,___flmul@b
  4359  0023DA  C189  F013         	movff	powf@sn+1,___flmul@b+1
  4360  0023DE  C18A  F014         	movff	powf@sn+2,___flmul@b+2
  4361  0023E2  C18B  F015         	movff	powf@sn+3,___flmul@b+3
  4362  0023E6  ECB9  F018         	call	___flmul	;wreg free
  4363  0023EA  C012  F1A4         	movff	?___flmul,_powf$873
  4364  0023EE  C013  F1A5         	movff	?___flmul+1,_powf$873+1
  4365  0023F2  C014  F1A6         	movff	?___flmul+2,_powf$873+2
  4366  0023F6  C015  F1A7         	movff	?___flmul+3,_powf$873+3
  4367  0023FA  C1A4  F012         	movff	_powf$873,___flmul@b
  4368  0023FE  C1A5  F013         	movff	_powf$873+1,___flmul@b+1
  4369  002402  C1A6  F014         	movff	_powf$873+2,___flmul@b+2
  4370  002406  C1A7  F015         	movff	_powf$873+3,___flmul@b+3
  4371  00240A  0E60               	movlw	96
  4372  00240C  6E16               	movwf	___flmul@a,c
  4373  00240E  0E42               	movlw	66
  4374  002410  6E17               	movwf	___flmul@a+1,c
  4375  002412  0EA2               	movlw	162
  4376  002414  6E18               	movwf	___flmul@a+2,c
  4377  002416  0E0D               	movlw	13
  4378  002418  6E19               	movwf	___flmul@a+3,c
  4379  00241A  ECB9  F018         	call	___flmul	;wreg free
  4380  00241E  EF80  F016         	goto	L4
  4381  002422                     l3444:
  4382  002422  FFFF               	dw	65535	; assembler added errata NOP
  4383  002424  0EFF               	movlw	255
  4384  002426  0101               	movlb	1	; () banked
  4385  002428  15AC               	andwf	powf@j& (0+255),w,b
  4386  00242A  6F2C               	movwf	powf@i& (0+255),b
  4387  00242C  0EFF               	movlw	255
  4388  00242E  15AD               	andwf	(powf@j+1)& (0+255),w,b
  4389  002430  6F2D               	movwf	(powf@i+1)& (0+255),b
  4390  002432  0EFF               	movlw	255
  4391  002434  15AE               	andwf	(powf@j+2)& (0+255),w,b
  4392  002436  6F2E               	movwf	(powf@i+2)& (0+255),b
  4393  002438  0E7F               	movlw	127
  4394  00243A  15AF               	andwf	(powf@j+3)& (0+255),w,b
  4395  00243C  6F2F               	movwf	(powf@i+3)& (0+255),b
  4396  00243E  0E17               	movlw	23
  4397  002440  6E69               	movwf	??_powf& (0+255),c
  4398  002442  C12C  F06A         	movff	powf@i,??_powf+1
  4399  002446  C12D  F06B         	movff	powf@i+1,??_powf+2
  4400  00244A  C12E  F06C         	movff	powf@i+2,??_powf+3
  4401  00244E  C12F  F06D         	movff	powf@i+3,??_powf+4
  4402  002452                     u3655:
  4403  002452  FFFF               	dw	65535	; assembler added errata NOP
  4404  002454  6669               	tstfsz	??_powf,c
  4405  002456  D001               	goto	u3656
  4406  002458  D008               	goto	u3657
  4407  00245A                     u3656:
  4408  00245A  FFFF               	dw	65535	; assembler added errata NOP
  4409  00245C  346D               	rlcf	??_powf+4,w,c
  4410  00245E  326D               	rrcf	??_powf+4,f,c
  4411  002460  326C               	rrcf	??_powf+3,f,c
  4412  002462  326B               	rrcf	??_powf+2,f,c
  4413  002464  326A               	rrcf	??_powf+1,f,c
  4414  002466  2E69               	decfsz	??_powf,f,c
  4415  002468  D7F4               	goto	u3655
  4416  00246A                     u3657:
  4417  00246A  FFFF               	dw	65535	; assembler added errata NOP
  4418  00246C  0E81               	movlw	129
  4419  00246E  246A               	addwf	??_powf+1,w,c
  4420  002470  0101               	movlb	1	; () banked
  4421  002472  6FA0               	movwf	powf@k& (0+255),b
  4422  002474  0EFF               	movlw	255
  4423  002476  206B               	addwfc	??_powf+2,w,c
  4424  002478  6FA1               	movwf	(powf@k+1)& (0+255),b
  4425  00247A  0EFF               	movlw	255
  4426  00247C  206C               	addwfc	??_powf+3,w,c
  4427  00247E  6FA2               	movwf	(powf@k+2)& (0+255),b
  4428  002480  0EFF               	movlw	255
  4429  002482  206D               	addwfc	??_powf+4,w,c
  4430  002484  6FA3               	movwf	(powf@k+3)& (0+255),b
  4431                           
  4432                           ; BSR set to: 1
  4433  002486  0E00               	movlw	0
  4434  002488  6F7C               	movwf	powf@n& (0+255),b
  4435  00248A  0E00               	movlw	0
  4436  00248C  6F7D               	movwf	(powf@n+1)& (0+255),b
  4437  00248E  0E00               	movlw	0
  4438  002490  6F7E               	movwf	(powf@n+2)& (0+255),b
  4439  002492  0E00               	movlw	0
  4440  002494  6F7F               	movwf	(powf@n+3)& (0+255),b
  4441                           
  4442                           ; BSR set to: 1
  4443  002496  BF2F               	btfsc	(powf@i+3)& (0+255),7,b
  4444  002498  D0E5               	goto	l3458
  4445  00249A  052C               	decf	powf@i& (0+255),w,b
  4446  00249C  0E00               	movlw	0
  4447  00249E  592D               	subwfb	(powf@i+1)& (0+255),w,b
  4448  0024A0  0E00               	movlw	0
  4449  0024A2  592E               	subwfb	(powf@i+2)& (0+255),w,b
  4450  0024A4  0E3F               	movlw	63
  4451  0024A6  592F               	subwfb	(powf@i+3)& (0+255),w,b
  4452  0024A8  A0D8               	btfss	status,0,c
  4453  0024AA  D0DC               	goto	l3458
  4454                           
  4455                           ; BSR set to: 1
  4456  0024AC  C1A0  F069         	movff	powf@k,??_powf
  4457  0024B0  0E01               	movlw	1
  4458  0024B2  2669               	addwf	??_powf,f,c
  4459  0024B4  0E00               	movlw	0
  4460  0024B6  6E6A               	movwf	(??_powf+1)& (0+255),c
  4461  0024B8  0E00               	movlw	0
  4462  0024BA  6E6B               	movwf	(??_powf+2)& (0+255),c
  4463  0024BC  0E80               	movlw	128
  4464  0024BE  6E6C               	movwf	(??_powf+3)& (0+255),c
  4465  0024C0  0E00               	movlw	0
  4466  0024C2  6E6D               	movwf	(??_powf+4)& (0+255),c
  4467  0024C4                     u3675:
  4468  0024C4  FFFF               	dw	65535	; assembler added errata NOP
  4469  0024C6  6669               	tstfsz	??_powf,c
  4470  0024C8  D001               	goto	u3676
  4471  0024CA  D008               	goto	u3677
  4472  0024CC                     u3676:
  4473  0024CC  FFFF               	dw	65535	; assembler added errata NOP
  4474  0024CE  346D               	rlcf	??_powf+4,w,c
  4475  0024D0  326D               	rrcf	??_powf+4,f,c
  4476  0024D2  326C               	rrcf	??_powf+3,f,c
  4477  0024D4  326B               	rrcf	??_powf+2,f,c
  4478  0024D6  326A               	rrcf	??_powf+1,f,c
  4479  0024D8  2E69               	decfsz	??_powf,f,c
  4480  0024DA  D7F4               	goto	u3675
  4481  0024DC                     u3677:
  4482  0024DC  FFFF               	dw	65535	; assembler added errata NOP
  4483  0024DE  0101               	movlb	1	; () banked
  4484  0024E0  51AC               	movf	powf@j& (0+255),w,b
  4485  0024E2  246A               	addwf	??_powf+1,w,c
  4486  0024E4  6F7C               	movwf	powf@n& (0+255),b
  4487  0024E6  51AD               	movf	(powf@j+1)& (0+255),w,b
  4488  0024E8  206B               	addwfc	??_powf+2,w,c
  4489  0024EA  6F7D               	movwf	(powf@n+1)& (0+255),b
  4490  0024EC  51AE               	movf	(powf@j+2)& (0+255),w,b
  4491  0024EE  206C               	addwfc	??_powf+3,w,c
  4492  0024F0  6F7E               	movwf	(powf@n+2)& (0+255),b
  4493  0024F2  51AF               	movf	(powf@j+3)& (0+255),w,b
  4494  0024F4  206D               	addwfc	??_powf+4,w,c
  4495  0024F6  6F7F               	movwf	(powf@n+3)& (0+255),b
  4496  0024F8  0E81               	movlw	129
  4497  0024FA  6E69               	movwf	??_powf& (0+255),c
  4498  0024FC  0EFF               	movlw	255
  4499  0024FE  6E6A               	movwf	(??_powf+1)& (0+255),c
  4500  002500  0EFF               	movlw	255
  4501  002502  6E6B               	movwf	(??_powf+2)& (0+255),c
  4502  002504  0EFF               	movlw	255
  4503  002506  6E6C               	movwf	(??_powf+3)& (0+255),c
  4504  002508  0E17               	movlw	23
  4505  00250A  6E6D               	movwf	(??_powf+4)& (0+255),c
  4506  00250C  C17C  F06E         	movff	powf@n,??_powf+5
  4507  002510  C17D  F06F         	movff	powf@n+1,??_powf+6
  4508  002514  C17E  F070         	movff	powf@n+2,??_powf+7
  4509  002518  C17F  F071         	movff	powf@n+3,??_powf+8
  4510  00251C                     u3685:
  4511  00251C  FFFF               	dw	65535	; assembler added errata NOP
  4512  00251E  666D               	tstfsz	??_powf+4,c
  4513  002520  D001               	goto	u3686
  4514  002522  D008               	goto	u3687
  4515  002524                     u3686:
  4516  002524  FFFF               	dw	65535	; assembler added errata NOP
  4517  002526  3471               	rlcf	??_powf+8,w,c
  4518  002528  3271               	rrcf	??_powf+8,f,c
  4519  00252A  3270               	rrcf	??_powf+7,f,c
  4520  00252C  326F               	rrcf	??_powf+6,f,c
  4521  00252E  326E               	rrcf	??_powf+5,f,c
  4522  002530  2E6D               	decfsz	??_powf+4,f,c
  4523  002532  D7F4               	goto	u3685
  4524  002534                     u3687:
  4525  002534  FFFF               	dw	65535	; assembler added errata NOP
  4526  002536  506E               	movf	??_powf+5,w,c
  4527  002538  2469               	addwf	??_powf,w,c
  4528  00253A  0101               	movlb	1	; () banked
  4529  00253C  6FA0               	movwf	powf@k& (0+255),b
  4530  00253E  0E00               	movlw	0
  4531  002540  206A               	addwfc	??_powf+1,w,c
  4532  002542  6FA1               	movwf	(powf@k+1)& (0+255),b
  4533  002544  0E00               	movlw	0
  4534  002546  206B               	addwfc	??_powf+2,w,c
  4535  002548  6FA2               	movwf	(powf@k+2)& (0+255),b
  4536  00254A  0E00               	movlw	0
  4537  00254C  206C               	addwfc	??_powf+3,w,c
  4538  00254E  6FA3               	movwf	(powf@k+3)& (0+255),b
  4539                           
  4540                           ; BSR set to: 1
  4541  002550  C1A0  F069         	movff	powf@k,??_powf
  4542  002554  0EFF               	movlw	255
  4543  002556  6E6A               	movwf	(??_powf+1)& (0+255),c
  4544  002558  0EFF               	movlw	255
  4545  00255A  6E6B               	movwf	(??_powf+2)& (0+255),c
  4546  00255C  0E7F               	movlw	127
  4547  00255E  6E6C               	movwf	(??_powf+3)& (0+255),c
  4548  002560  0E00               	movlw	0
  4549  002562  6E6D               	movwf	(??_powf+4)& (0+255),c
  4550  002564                     u3695:
  4551  002564  FFFF               	dw	65535	; assembler added errata NOP
  4552  002566  6669               	tstfsz	??_powf,c
  4553  002568  D001               	goto	u3696
  4554  00256A  D008               	goto	u3697
  4555  00256C                     u3696:
  4556  00256C  FFFF               	dw	65535	; assembler added errata NOP
  4557  00256E  346D               	rlcf	??_powf+4,w,c
  4558  002570  326D               	rrcf	??_powf+4,f,c
  4559  002572  326C               	rrcf	??_powf+3,f,c
  4560  002574  326B               	rrcf	??_powf+2,f,c
  4561  002576  326A               	rrcf	??_powf+1,f,c
  4562  002578  2E69               	decfsz	??_powf,f,c
  4563  00257A  D7F4               	goto	u3695
  4564  00257C                     u3697:
  4565  00257C  FFFF               	dw	65535	; assembler added errata NOP
  4566  00257E  1C6A               	comf	??_powf+1,w,c
  4567  002580  6E6E               	movwf	(??_powf+5)& (0+255),c
  4568  002582  1C6B               	comf	??_powf+2,w,c
  4569  002584  6E6F               	movwf	(??_powf+6)& (0+255),c
  4570  002586  1C6C               	comf	??_powf+3,w,c
  4571  002588  6E70               	movwf	(??_powf+7)& (0+255),c
  4572  00258A  1C6D               	comf	??_powf+4,w,c
  4573  00258C  6E71               	movwf	(??_powf+8)& (0+255),c
  4574  00258E  0101               	movlb	1	; () banked
  4575  002590  517C               	movf	powf@n& (0+255),w,b
  4576  002592  146E               	andwf	??_powf+5,w,c
  4577  002594  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  4578  002596  517D               	movf	(powf@n+1)& (0+255),w,b
  4579  002598  146F               	andwf	??_powf+6,w,c
  4580  00259A  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  4581  00259C  517E               	movf	(powf@n+2)& (0+255),w,b
  4582  00259E  1470               	andwf	??_powf+7,w,c
  4583  0025A0  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  4584  0025A2  517F               	movf	(powf@n+3)& (0+255),w,b
  4585  0025A4  1471               	andwf	??_powf+8,w,c
  4586  0025A6  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  4587                           
  4588                           ; BSR set to: 1
  4589  0025A8  C1B8  F1B0         	movff	powf@__xc8_float_word,powf@t
  4590  0025AC  C1B9  F1B1         	movff	powf@__xc8_float_word+1,powf@t+1
  4591  0025B0  C1BA  F1B2         	movff	powf@__xc8_float_word+2,powf@t+2
  4592  0025B4  C1BB  F1B3         	movff	powf@__xc8_float_word+3,powf@t+3
  4593                           
  4594                           ; BSR set to: 1
  4595  0025B8  51A0               	movf	powf@k& (0+255),w,b
  4596  0025BA  0817               	sublw	23
  4597  0025BC  6E69               	movwf	??_powf& (0+255),c
  4598  0025BE  0EFF               	movlw	255
  4599  0025C0  157C               	andwf	powf@n& (0+255),w,b
  4600  0025C2  6E6A               	movwf	(??_powf+1)& (0+255),c
  4601  0025C4  0EFF               	movlw	255
  4602  0025C6  157D               	andwf	(powf@n+1)& (0+255),w,b
  4603  0025C8  6E6B               	movwf	(??_powf+2)& (0+255),c
  4604  0025CA  0E7F               	movlw	127
  4605  0025CC  157E               	andwf	(powf@n+2)& (0+255),w,b
  4606  0025CE  6E6C               	movwf	(??_powf+3)& (0+255),c
  4607  0025D0  0E00               	movlw	0
  4608  0025D2  157F               	andwf	(powf@n+3)& (0+255),w,b
  4609  0025D4  6E6D               	movwf	(??_powf+4)& (0+255),c
  4610  0025D6  0E00               	movlw	0
  4611  0025D8  106A               	iorwf	??_powf+1,w,c
  4612  0025DA  6E6E               	movwf	(??_powf+5)& (0+255),c
  4613  0025DC  0E00               	movlw	0
  4614  0025DE  106B               	iorwf	??_powf+2,w,c
  4615  0025E0  6E6F               	movwf	(??_powf+6)& (0+255),c
  4616  0025E2  0E80               	movlw	128
  4617  0025E4  106C               	iorwf	??_powf+3,w,c
  4618  0025E6  6E70               	movwf	(??_powf+7)& (0+255),c
  4619  0025E8  0E00               	movlw	0
  4620  0025EA  106D               	iorwf	??_powf+4,w,c
  4621  0025EC  6E71               	movwf	(??_powf+8)& (0+255),c
  4622  0025EE                     u3705:
  4623  0025EE  FFFF               	dw	65535	; assembler added errata NOP
  4624  0025F0  6669               	tstfsz	??_powf,c
  4625  0025F2  D001               	goto	u3706
  4626  0025F4  D008               	goto	u3707
  4627  0025F6                     u3706:
  4628  0025F6  FFFF               	dw	65535	; assembler added errata NOP
  4629  0025F8  3471               	rlcf	??_powf+8,w,c
  4630  0025FA  3271               	rrcf	??_powf+8,f,c
  4631  0025FC  3270               	rrcf	??_powf+7,f,c
  4632  0025FE  326F               	rrcf	??_powf+6,f,c
  4633  002600  326E               	rrcf	??_powf+5,f,c
  4634  002602  2E69               	decfsz	??_powf,f,c
  4635  002604  D7F4               	goto	u3705
  4636  002606                     u3707:
  4637  002606  FFFF               	dw	65535	; assembler added errata NOP
  4638  002608  C06E  F17C         	movff	??_powf+5,powf@n
  4639  00260C  C06F  F17D         	movff	??_powf+6,powf@n+1
  4640  002610  C070  F17E         	movff	??_powf+7,powf@n+2
  4641  002614  C071  F17F         	movff	??_powf+8,powf@n+3
  4642  002618  0101               	movlb	1	; () banked
  4643  00261A  AFAF               	btfss	(powf@j+3)& (0+255),7,b
  4644  00261C  D008               	goto	l3456
  4645                           
  4646                           ; BSR set to: 1
  4647  00261E  1F7F               	comf	(powf@n+3)& (0+255),f,b
  4648  002620  1F7E               	comf	(powf@n+2)& (0+255),f,b
  4649  002622  1F7D               	comf	(powf@n+1)& (0+255),f,b
  4650  002624  6D7C               	negf	powf@n& (0+255),b
  4651  002626  0E00               	movlw	0
  4652  002628  237D               	addwfc	(powf@n+1)& (0+255),f,b
  4653  00262A  237E               	addwfc	(powf@n+2)& (0+255),f,b
  4654  00262C  237F               	addwfc	(powf@n+3)& (0+255),f,b
  4655  00262E                     l3456:
  4656  00262E  FFFF               	dw	65535	; assembler added errata NOP
  4657                           
  4658                           ; BSR set to: 1
  4659  002630  C19C  F02B         	movff	powf@p_h,___flsub@b
  4660  002634  C19D  F02C         	movff	powf@p_h+1,___flsub@b+1
  4661  002638  C19E  F02D         	movff	powf@p_h+2,___flsub@b+2
  4662  00263C  C19F  F02E         	movff	powf@p_h+3,___flsub@b+3
  4663  002640  C1B0  F02F         	movff	powf@t,___flsub@a
  4664  002644  C1B1  F030         	movff	powf@t+1,___flsub@a+1
  4665  002648  C1B2  F031         	movff	powf@t+2,___flsub@a+2
  4666  00264C  C1B3  F032         	movff	powf@t+3,___flsub@a+3
  4667  002650  ECD7  F01F         	call	___flsub	;wreg free
  4668  002654  C02B  F19C         	movff	?___flsub,powf@p_h
  4669  002658  C02C  F19D         	movff	?___flsub+1,powf@p_h+1
  4670  00265C  C02D  F19E         	movff	?___flsub+2,powf@p_h+2
  4671  002660  C02E  F19F         	movff	?___flsub+3,powf@p_h+3
  4672  002664                     l3458:
  4673  002664  FFFF               	dw	65535	; assembler added errata NOP
  4674  002666  C164  F002         	movff	powf@p_l,___fladd@b
  4675  00266A  C165  F003         	movff	powf@p_l+1,___fladd@b+1
  4676  00266E  C166  F004         	movff	powf@p_l+2,___fladd@b+2
  4677  002672  C167  F005         	movff	powf@p_l+3,___fladd@b+3
  4678  002676  C19C  F006         	movff	powf@p_h,___fladd@a
  4679  00267A  C19D  F007         	movff	powf@p_h+1,___fladd@a+1
  4680  00267E  C19E  F008         	movff	powf@p_h+2,___fladd@a+2
  4681  002682  C19F  F009         	movff	powf@p_h+3,___fladd@a+3
  4682  002686  EC7A  F01A         	call	___fladd	;wreg free
  4683  00268A  C002  F1B0         	movff	?___fladd,powf@t
  4684  00268E  C003  F1B1         	movff	?___fladd+1,powf@t+1
  4685  002692  C004  F1B2         	movff	?___fladd+2,powf@t+2
  4686  002696  C005  F1B3         	movff	?___fladd+3,powf@t+3
  4687  00269A  C1B0  F1B8         	movff	powf@t,powf@__xc8_float_word
  4688  00269E  C1B1  F1B9         	movff	powf@t+1,powf@__xc8_float_word+1
  4689  0026A2  C1B2  F1BA         	movff	powf@t+2,powf@__xc8_float_word+2
  4690  0026A6  C1B3  F1BB         	movff	powf@t+3,powf@__xc8_float_word+3
  4691  0026AA  C1B8  F190         	movff	powf@__xc8_float_word,powf@is
  4692  0026AE  C1B9  F191         	movff	powf@__xc8_float_word+1,powf@is+1
  4693  0026B2  C1BA  F192         	movff	powf@__xc8_float_word+2,powf@is+2
  4694  0026B6  C1BB  F193         	movff	powf@__xc8_float_word+3,powf@is+3
  4695  0026BA  0E00               	movlw	0
  4696  0026BC  0101               	movlb	1	; () banked
  4697  0026BE  1590               	andwf	powf@is& (0+255),w,b
  4698  0026C0  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  4699  0026C2  0E80               	movlw	128
  4700  0026C4  1591               	andwf	(powf@is+1)& (0+255),w,b
  4701  0026C6  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  4702  0026C8  0EFF               	movlw	255
  4703  0026CA  1592               	andwf	(powf@is+2)& (0+255),w,b
  4704  0026CC  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  4705  0026CE  0EFF               	movlw	255
  4706  0026D0  1593               	andwf	(powf@is+3)& (0+255),w,b
  4707  0026D2  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  4708                           
  4709                           ; BSR set to: 1
  4710  0026D4  C1B8  F1B0         	movff	powf@__xc8_float_word,powf@t
  4711  0026D8  C1B9  F1B1         	movff	powf@__xc8_float_word+1,powf@t+1
  4712  0026DC  C1BA  F1B2         	movff	powf@__xc8_float_word+2,powf@t+2
  4713  0026E0  C1BB  F1B3         	movff	powf@__xc8_float_word+3,powf@t+3
  4714                           
  4715                           ; BSR set to: 1
  4716  0026E4  C1B0  F012         	movff	powf@t,___flmul@b
  4717  0026E8  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  4718  0026EC  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  4719  0026F0  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  4720  0026F4  0E00               	movlw	0
  4721  0026F6  6E16               	movwf	___flmul@a,c
  4722  0026F8  0E72               	movlw	114
  4723  0026FA  6E17               	movwf	___flmul@a+1,c
  4724  0026FC  0E31               	movlw	49
  4725  0026FE  6E18               	movwf	___flmul@a+2,c
  4726  002700  0E3F               	movlw	63
  4727  002702  6E19               	movwf	___flmul@a+3,c
  4728  002704  ECB9  F018         	call	___flmul	;wreg free
  4729  002708  C012  F174         	movff	?___flmul,powf@u
  4730  00270C  C013  F175         	movff	?___flmul+1,powf@u+1
  4731  002710  C014  F176         	movff	?___flmul+2,powf@u+2
  4732  002714  C015  F177         	movff	?___flmul+3,powf@u+3
  4733  002718  C19C  F02F         	movff	powf@p_h,___flsub@a
  4734  00271C  C19D  F030         	movff	powf@p_h+1,___flsub@a+1
  4735  002720  C19E  F031         	movff	powf@p_h+2,___flsub@a+2
  4736  002724  C19F  F032         	movff	powf@p_h+3,___flsub@a+3
  4737  002728  C1B0  F02B         	movff	powf@t,___flsub@b
  4738  00272C  C1B1  F02C         	movff	powf@t+1,___flsub@b+1
  4739  002730  C1B2  F02D         	movff	powf@t+2,___flsub@b+2
  4740  002734  C1B3  F02E         	movff	powf@t+3,___flsub@b+3
  4741  002738  ECD7  F01F         	call	___flsub	;wreg free
  4742  00273C  C02B  F194         	movff	?___flsub,_powf$876
  4743  002740  C02C  F195         	movff	?___flsub+1,_powf$876+1
  4744  002744  C02D  F196         	movff	?___flsub+2,_powf$876+2
  4745  002748  C02E  F197         	movff	?___flsub+3,_powf$876+3
  4746  00274C  0E18               	movlw	24
  4747  00274E  6E16               	movwf	___flmul@a,c
  4748  002750  0E72               	movlw	114
  4749  002752  6E17               	movwf	___flmul@a+1,c
  4750  002754  0E31               	movlw	49
  4751  002756  6E18               	movwf	___flmul@a+2,c
  4752  002758  0E3F               	movlw	63
  4753  00275A  6E19               	movwf	___flmul@a+3,c
  4754  00275C  C194  F02F         	movff	_powf$876,___flsub@a
  4755  002760  C195  F030         	movff	_powf$876+1,___flsub@a+1
  4756  002764  C196  F031         	movff	_powf$876+2,___flsub@a+2
  4757  002768  C197  F032         	movff	_powf$876+3,___flsub@a+3
  4758  00276C  C164  F02B         	movff	powf@p_l,___flsub@b
  4759  002770  C165  F02C         	movff	powf@p_l+1,___flsub@b+1
  4760  002774  C166  F02D         	movff	powf@p_l+2,___flsub@b+2
  4761  002778  C167  F02E         	movff	powf@p_l+3,___flsub@b+3
  4762  00277C  ECD7  F01F         	call	___flsub	;wreg free
  4763  002780  C02B  F012         	movff	?___flsub,___flmul@b
  4764  002784  C02C  F013         	movff	?___flsub+1,___flmul@b+1
  4765  002788  C02D  F014         	movff	?___flsub+2,___flmul@b+2
  4766  00278C  C02E  F015         	movff	?___flsub+3,___flmul@b+3
  4767  002790  ECB9  F018         	call	___flmul	;wreg free
  4768  002794  C012  F114         	movff	?___flmul,_powf$886
  4769  002798  C013  F115         	movff	?___flmul+1,_powf$886+1
  4770  00279C  C014  F116         	movff	?___flmul+2,_powf$886+2
  4771  0027A0  C015  F117         	movff	?___flmul+3,_powf$886+3
  4772  0027A4  C114  F002         	movff	_powf$886,___fladd@b
  4773  0027A8  C115  F003         	movff	_powf$886+1,___fladd@b+1
  4774  0027AC  C116  F004         	movff	_powf$886+2,___fladd@b+2
  4775  0027B0  C117  F005         	movff	_powf$886+3,___fladd@b+3
  4776  0027B4  0E8C               	movlw	140
  4777  0027B6  6E16               	movwf	___flmul@a,c
  4778  0027B8  0EBE               	movlw	190
  4779  0027BA  6E17               	movwf	___flmul@a+1,c
  4780  0027BC  0EBF               	movlw	191
  4781  0027BE  6E18               	movwf	___flmul@a+2,c
  4782  0027C0  0E35               	movlw	53
  4783  0027C2  6E19               	movwf	___flmul@a+3,c
  4784  0027C4  C1B0  F012         	movff	powf@t,___flmul@b
  4785  0027C8  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  4786  0027CC  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  4787  0027D0  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  4788  0027D4  ECB9  F018         	call	___flmul	;wreg free
  4789  0027D8  C012  F006         	movff	?___flmul,___fladd@a
  4790  0027DC  C013  F007         	movff	?___flmul+1,___fladd@a+1
  4791  0027E0  C014  F008         	movff	?___flmul+2,___fladd@a+2
  4792  0027E4  C015  F009         	movff	?___flmul+3,___fladd@a+3
  4793  0027E8  EC7A  F01A         	call	___fladd	;wreg free
  4794  0027EC  C002  F178         	movff	?___fladd,powf@v
  4795  0027F0  C003  F179         	movff	?___fladd+1,powf@v+1
  4796  0027F4  C004  F17A         	movff	?___fladd+2,powf@v+2
  4797  0027F8  C005  F17B         	movff	?___fladd+3,powf@v+3
  4798  0027FC  C174  F002         	movff	powf@u,___fladd@b
  4799  002800  C175  F003         	movff	powf@u+1,___fladd@b+1
  4800  002804  C176  F004         	movff	powf@u+2,___fladd@b+2
  4801  002808  C177  F005         	movff	powf@u+3,___fladd@b+3
  4802  00280C  C178  F006         	movff	powf@v,___fladd@a
  4803  002810  C179  F007         	movff	powf@v+1,___fladd@a+1
  4804  002814  C17A  F008         	movff	powf@v+2,___fladd@a+2
  4805  002818  C17B  F009         	movff	powf@v+3,___fladd@a+3
  4806  00281C  EC7A  F01A         	call	___fladd	;wreg free
  4807  002820  C002  F1B4         	movff	?___fladd,powf@z
  4808  002824  C003  F1B5         	movff	?___fladd+1,powf@z+1
  4809  002828  C004  F1B6         	movff	?___fladd+2,powf@z+2
  4810  00282C  C005  F1B7         	movff	?___fladd+3,powf@z+3
  4811  002830  C174  F02F         	movff	powf@u,___flsub@a
  4812  002834  C175  F030         	movff	powf@u+1,___flsub@a+1
  4813  002838  C176  F031         	movff	powf@u+2,___flsub@a+2
  4814  00283C  C177  F032         	movff	powf@u+3,___flsub@a+3
  4815  002840  C1B4  F02B         	movff	powf@z,___flsub@b
  4816  002844  C1B5  F02C         	movff	powf@z+1,___flsub@b+1
  4817  002848  C1B6  F02D         	movff	powf@z+2,___flsub@b+2
  4818  00284C  C1B7  F02E         	movff	powf@z+3,___flsub@b+3
  4819  002850  ECD7  F01F         	call	___flsub	;wreg free
  4820  002854  C02B  F194         	movff	?___flsub,_powf$876
  4821  002858  C02C  F195         	movff	?___flsub+1,_powf$876+1
  4822  00285C  C02D  F196         	movff	?___flsub+2,_powf$876+2
  4823  002860  C02E  F197         	movff	?___flsub+3,_powf$876+3
  4824  002864  C178  F02B         	movff	powf@v,___flsub@b
  4825  002868  C179  F02C         	movff	powf@v+1,___flsub@b+1
  4826  00286C  C17A  F02D         	movff	powf@v+2,___flsub@b+2
  4827  002870  C17B  F02E         	movff	powf@v+3,___flsub@b+3
  4828  002874  C194  F02F         	movff	_powf$876,___flsub@a
  4829  002878  C195  F030         	movff	_powf$876+1,___flsub@a+1
  4830  00287C  C196  F031         	movff	_powf$876+2,___flsub@a+2
  4831  002880  C197  F032         	movff	_powf$876+3,___flsub@a+3
  4832  002884  ECD7  F01F         	call	___flsub	;wreg free
  4833  002888  C02B  F144         	movff	?___flsub,powf@w
  4834  00288C  C02C  F145         	movff	?___flsub+1,powf@w+1
  4835  002890  C02D  F146         	movff	?___flsub+2,powf@w+2
  4836  002894  C02E  F147         	movff	?___flsub+3,powf@w+3
  4837  002898  C1B4  F012         	movff	powf@z,___flmul@b
  4838  00289C  C1B5  F013         	movff	powf@z+1,___flmul@b+1
  4839  0028A0  C1B6  F014         	movff	powf@z+2,___flmul@b+2
  4840  0028A4  C1B7  F015         	movff	powf@z+3,___flmul@b+3
  4841  0028A8  C1B4  F016         	movff	powf@z,___flmul@a
  4842  0028AC  C1B5  F017         	movff	powf@z+1,___flmul@a+1
  4843  0028B0  C1B6  F018         	movff	powf@z+2,___flmul@a+2
  4844  0028B4  C1B7  F019         	movff	powf@z+3,___flmul@a+3
  4845  0028B8  ECB9  F018         	call	___flmul	;wreg free
  4846  0028BC  C012  F1B0         	movff	?___flmul,powf@t
  4847  0028C0  C013  F1B1         	movff	?___flmul+1,powf@t+1
  4848  0028C4  C014  F1B2         	movff	?___flmul+2,powf@t+2
  4849  0028C8  C015  F1B3         	movff	?___flmul+3,powf@t+3
  4850  0028CC  0E0E               	movlw	14
  4851  0028CE  6E06               	movwf	___fladd@a,c
  4852  0028D0  0EEA               	movlw	234
  4853  0028D2  6E07               	movwf	___fladd@a+1,c
  4854  0028D4  0EDD               	movlw	221
  4855  0028D6  6E08               	movwf	___fladd@a+2,c
  4856  0028D8  0EB5               	movlw	181
  4857  0028DA  6E09               	movwf	___fladd@a+3,c
  4858  0028DC  0E4C               	movlw	76
  4859  0028DE  6E16               	movwf	___flmul@a,c
  4860  0028E0  0EBB               	movlw	187
  4861  0028E2  6E17               	movwf	___flmul@a+1,c
  4862  0028E4  0E31               	movlw	49
  4863  0028E6  6E18               	movwf	___flmul@a+2,c
  4864  0028E8  0E33               	movlw	51
  4865  0028EA  6E19               	movwf	___flmul@a+3,c
  4866  0028EC  C1B0  F012         	movff	powf@t,___flmul@b
  4867  0028F0  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  4868  0028F4  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  4869  0028F8  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  4870  0028FC  ECB9  F018         	call	___flmul	;wreg free
  4871  002900  C012  F002         	movff	?___flmul,___fladd@b
  4872  002904  C013  F003         	movff	?___flmul+1,___fladd@b+1
  4873  002908  C014  F004         	movff	?___flmul+2,___fladd@b+2
  4874  00290C  C015  F005         	movff	?___flmul+3,___fladd@b+3
  4875  002910  EC7A  F01A         	call	___fladd	;wreg free
  4876  002914  C002  F1A4         	movff	?___fladd,_powf$873
  4877  002918  C003  F1A5         	movff	?___fladd+1,_powf$873+1
  4878  00291C  C004  F1A6         	movff	?___fladd+2,_powf$873+2
  4879  002920  C005  F1A7         	movff	?___fladd+3,_powf$873+3
  4880  002924  0E55               	movlw	85
  4881  002926  6E06               	movwf	___fladd@a,c
  4882  002928  0EB3               	movlw	179
  4883  00292A  6E07               	movwf	___fladd@a+1,c
  4884  00292C  0E8A               	movlw	138
  4885  00292E  6E08               	movwf	___fladd@a+2,c
  4886  002930  0E38               	movlw	56
  4887  002932  6E09               	movwf	___fladd@a+3,c
  4888  002934  C1B0  F016         	movff	powf@t,___flmul@a
  4889  002938  C1B1  F017         	movff	powf@t+1,___flmul@a+1
  4890  00293C  C1B2  F018         	movff	powf@t+2,___flmul@a+2
  4891  002940  C1B3  F019         	movff	powf@t+3,___flmul@a+3
  4892  002944  C1A4  F012         	movff	_powf$873,___flmul@b
  4893  002948  C1A5  F013         	movff	_powf$873+1,___flmul@b+1
  4894  00294C  C1A6  F014         	movff	_powf$873+2,___flmul@b+2
  4895  002950  C1A7  F015         	movff	_powf$873+3,___flmul@b+3
  4896  002954  ECB9  F018         	call	___flmul	;wreg free
  4897  002958  C012  F002         	movff	?___flmul,___fladd@b
  4898  00295C  C013  F003         	movff	?___flmul+1,___fladd@b+1
  4899  002960  C014  F004         	movff	?___flmul+2,___fladd@b+2
  4900  002964  C015  F005         	movff	?___flmul+3,___fladd@b+3
  4901  002968  EC7A  F01A         	call	___fladd	;wreg free
  4902  00296C  C002  F154         	movff	?___fladd,_powf$874
  4903  002970  C003  F155         	movff	?___fladd+1,_powf$874+1
  4904  002974  C004  F156         	movff	?___fladd+2,_powf$874+2
  4905  002978  C005  F157         	movff	?___fladd+3,_powf$874+3
  4906  00297C  0E61               	movlw	97
  4907  00297E  6E06               	movwf	___fladd@a,c
  4908  002980  0E0B               	movlw	11
  4909  002982  6E07               	movwf	___fladd@a+1,c
  4910  002984  0E36               	movlw	54
  4911  002986  6E08               	movwf	___fladd@a+2,c
  4912  002988  0EBB               	movlw	187
  4913  00298A  6E09               	movwf	___fladd@a+3,c
  4914  00298C  C1B0  F016         	movff	powf@t,___flmul@a
  4915  002990  C1B1  F017         	movff	powf@t+1,___flmul@a+1
  4916  002994  C1B2  F018         	movff	powf@t+2,___flmul@a+2
  4917  002998  C1B3  F019         	movff	powf@t+3,___flmul@a+3
  4918  00299C  C154  F012         	movff	_powf$874,___flmul@b
  4919  0029A0  C155  F013         	movff	_powf$874+1,___flmul@b+1
  4920  0029A4  C156  F014         	movff	_powf$874+2,___flmul@b+2
  4921  0029A8  C157  F015         	movff	_powf$874+3,___flmul@b+3
  4922  0029AC  ECB9  F018         	call	___flmul	;wreg free
  4923  0029B0  C012  F002         	movff	?___flmul,___fladd@b
  4924  0029B4  C013  F003         	movff	?___flmul+1,___fladd@b+1
  4925  0029B8  C014  F004         	movff	?___flmul+2,___fladd@b+2
  4926  0029BC  C015  F005         	movff	?___flmul+3,___fladd@b+3
  4927  0029C0  EC7A  F01A         	call	___fladd	;wreg free
  4928  0029C4  C002  F148         	movff	?___fladd,_powf$875
  4929  0029C8  C003  F149         	movff	?___fladd+1,_powf$875+1
  4930  0029CC  C004  F14A         	movff	?___fladd+2,_powf$875+2
  4931  0029D0  C005  F14B         	movff	?___fladd+3,_powf$875+3
  4932  0029D4  0EAB               	movlw	171
  4933  0029D6  6E06               	movwf	___fladd@a,c
  4934  0029D8  0EAA               	movlw	170
  4935  0029DA  6E07               	movwf	___fladd@a+1,c
  4936  0029DC  0E2A               	movlw	42
  4937  0029DE  6E08               	movwf	___fladd@a+2,c
  4938  0029E0  0E3E               	movlw	62
  4939  0029E2  6E09               	movwf	___fladd@a+3,c
  4940  0029E4  C1B0  F016         	movff	powf@t,___flmul@a
  4941  0029E8  C1B1  F017         	movff	powf@t+1,___flmul@a+1
  4942  0029EC  C1B2  F018         	movff	powf@t+2,___flmul@a+2
  4943  0029F0  C1B3  F019         	movff	powf@t+3,___flmul@a+3
  4944  0029F4  C148  F012         	movff	_powf$875,___flmul@b
  4945  0029F8  C149  F013         	movff	_powf$875+1,___flmul@b+1
  4946  0029FC  C14A  F014         	movff	_powf$875+2,___flmul@b+2
  4947  002A00  C14B  F015         	movff	_powf$875+3,___flmul@b+3
  4948  002A04  ECB9  F018         	call	___flmul	;wreg free
  4949  002A08  C012  F002         	movff	?___flmul,___fladd@b
  4950  002A0C  C013  F003         	movff	?___flmul+1,___fladd@b+1
  4951  002A10  C014  F004         	movff	?___flmul+2,___fladd@b+2
  4952  002A14  C015  F005         	movff	?___flmul+3,___fladd@b+3
  4953  002A18  EC7A  F01A         	call	___fladd	;wreg free
  4954  002A1C  C002  F138         	movff	?___fladd,_powf$877
  4955  002A20  C003  F139         	movff	?___fladd+1,_powf$877+1
  4956  002A24  C004  F13A         	movff	?___fladd+2,_powf$877+2
  4957  002A28  C005  F13B         	movff	?___fladd+3,_powf$877+3
  4958  002A2C  C1B4  F02B         	movff	powf@z,___flsub@b
  4959  002A30  C1B5  F02C         	movff	powf@z+1,___flsub@b+1
  4960  002A34  C1B6  F02D         	movff	powf@z+2,___flsub@b+2
  4961  002A38  C1B7  F02E         	movff	powf@z+3,___flsub@b+3
  4962  002A3C  C1B0  F016         	movff	powf@t,___flmul@a
  4963  002A40  C1B1  F017         	movff	powf@t+1,___flmul@a+1
  4964  002A44  C1B2  F018         	movff	powf@t+2,___flmul@a+2
  4965  002A48  C1B3  F019         	movff	powf@t+3,___flmul@a+3
  4966  002A4C  C138  F012         	movff	_powf$877,___flmul@b
  4967  002A50  C139  F013         	movff	_powf$877+1,___flmul@b+1
  4968  002A54  C13A  F014         	movff	_powf$877+2,___flmul@b+2
  4969  002A58  C13B  F015         	movff	_powf$877+3,___flmul@b+3
  4970  002A5C  ECB9  F018         	call	___flmul	;wreg free
  4971  002A60  C012  F02F         	movff	?___flmul,___flsub@a
  4972  002A64  C013  F030         	movff	?___flmul+1,___flsub@a+1
  4973  002A68  C014  F031         	movff	?___flmul+2,___flsub@a+2
  4974  002A6C  C015  F032         	movff	?___flmul+3,___flsub@a+3
  4975  002A70  ECD7  F01F         	call	___flsub	;wreg free
  4976  002A74  C02B  F180         	movff	?___flsub,powf@t1
  4977  002A78  C02C  F181         	movff	?___flsub+1,powf@t1+1
  4978  002A7C  C02D  F182         	movff	?___flsub+2,powf@t1+2
  4979  002A80  C02E  F183         	movff	?___flsub+3,powf@t1+3
  4980  002A84  0E00               	movlw	0
  4981  002A86  6E06               	movwf	___fladd@a,c
  4982  002A88  0E00               	movlw	0
  4983  002A8A  6E07               	movwf	___fladd@a+1,c
  4984  002A8C  0E00               	movlw	0
  4985  002A8E  6E08               	movwf	___fladd@a+2,c
  4986  002A90  0EC0               	movlw	192
  4987  002A92  6E09               	movwf	___fladd@a+3,c
  4988  002A94  C180  F002         	movff	powf@t1,___fladd@b
  4989  002A98  C181  F003         	movff	powf@t1+1,___fladd@b+1
  4990  002A9C  C182  F004         	movff	powf@t1+2,___fladd@b+2
  4991  002AA0  C183  F005         	movff	powf@t1+3,___fladd@b+3
  4992  002AA4  EC7A  F01A         	call	___fladd	;wreg free
  4993  002AA8  C002  F037         	movff	?___fladd,___fldiv@a
  4994  002AAC  C003  F038         	movff	?___fladd+1,___fldiv@a+1
  4995  002AB0  C004  F039         	movff	?___fladd+2,___fldiv@a+2
  4996  002AB4  C005  F03A         	movff	?___fladd+3,___fldiv@a+3
  4997  002AB8  C180  F016         	movff	powf@t1,___flmul@a
  4998  002ABC  C181  F017         	movff	powf@t1+1,___flmul@a+1
  4999  002AC0  C182  F018         	movff	powf@t1+2,___flmul@a+2
  5000  002AC4  C183  F019         	movff	powf@t1+3,___flmul@a+3
  5001  002AC8  C1B4  F012         	movff	powf@z,___flmul@b
  5002  002ACC  C1B5  F013         	movff	powf@z+1,___flmul@b+1
  5003  002AD0  C1B6  F014         	movff	powf@z+2,___flmul@b+2
  5004  002AD4  C1B7  F015         	movff	powf@z+3,___flmul@b+3
  5005  002AD8  ECB9  F018         	call	___flmul	;wreg free
  5006  002ADC  C012  F033         	movff	?___flmul,___fldiv@b
  5007  002AE0  C013  F034         	movff	?___flmul+1,___fldiv@b+1
  5008  002AE4  C014  F035         	movff	?___flmul+2,___fldiv@b+2
  5009  002AE8  C015  F036         	movff	?___flmul+3,___fldiv@b+3
  5010  002AEC  EC7E  F01D         	call	___fldiv	;wreg free
  5011  002AF0  C033  F13C         	movff	?___fldiv,_powf$881
  5012  002AF4  C034  F13D         	movff	?___fldiv+1,_powf$881+1
  5013  002AF8  C035  F13E         	movff	?___fldiv+2,_powf$881+2
  5014  002AFC  C036  F13F         	movff	?___fldiv+3,_powf$881+3
  5015  002B00  C144  F006         	movff	powf@w,___fladd@a
  5016  002B04  C145  F007         	movff	powf@w+1,___fladd@a+1
  5017  002B08  C146  F008         	movff	powf@w+2,___fladd@a+2
  5018  002B0C  C147  F009         	movff	powf@w+3,___fladd@a+3
  5019  002B10  C144  F016         	movff	powf@w,___flmul@a
  5020  002B14  C145  F017         	movff	powf@w+1,___flmul@a+1
  5021  002B18  C146  F018         	movff	powf@w+2,___flmul@a+2
  5022  002B1C  C147  F019         	movff	powf@w+3,___flmul@a+3
  5023  002B20  C1B4  F012         	movff	powf@z,___flmul@b
  5024  002B24  C1B5  F013         	movff	powf@z+1,___flmul@b+1
  5025  002B28  C1B6  F014         	movff	powf@z+2,___flmul@b+2
  5026  002B2C  C1B7  F015         	movff	powf@z+3,___flmul@b+3
  5027  002B30  ECB9  F018         	call	___flmul	;wreg free
  5028  002B34  C012  F002         	movff	?___flmul,___fladd@b
  5029  002B38  C013  F003         	movff	?___flmul+1,___fladd@b+1
  5030  002B3C  C014  F004         	movff	?___flmul+2,___fladd@b+2
  5031  002B40  C015  F005         	movff	?___flmul+3,___fladd@b+3
  5032  002B44  EC7A  F01A         	call	___fladd	;wreg free
  5033  002B48  C002  F118         	movff	?___fladd,_powf$887
  5034  002B4C  C003  F119         	movff	?___fladd+1,_powf$887+1
  5035  002B50  C004  F11A         	movff	?___fladd+2,_powf$887+2
  5036  002B54  C005  F11B         	movff	?___fladd+3,_powf$887+3
  5037  002B58  C13C  F02B         	movff	_powf$881,___flsub@b
  5038  002B5C  C13D  F02C         	movff	_powf$881+1,___flsub@b+1
  5039  002B60  C13E  F02D         	movff	_powf$881+2,___flsub@b+2
  5040  002B64  C13F  F02E         	movff	_powf$881+3,___flsub@b+3
  5041  002B68  C118  F02F         	movff	_powf$887,___flsub@a
  5042  002B6C  C119  F030         	movff	_powf$887+1,___flsub@a+1
  5043  002B70  C11A  F031         	movff	_powf$887+2,___flsub@a+2
  5044  002B74  C11B  F032         	movff	_powf$887+3,___flsub@a+3
  5045  002B78  ECD7  F01F         	call	___flsub	;wreg free
  5046  002B7C  C02B  F14C         	movff	?___flsub,powf@r
  5047  002B80  C02C  F14D         	movff	?___flsub+1,powf@r+1
  5048  002B84  C02D  F14E         	movff	?___flsub+2,powf@r+2
  5049  002B88  C02E  F14F         	movff	?___flsub+3,powf@r+3
  5050  002B8C  C1B4  F02F         	movff	powf@z,___flsub@a
  5051  002B90  C1B5  F030         	movff	powf@z+1,___flsub@a+1
  5052  002B94  C1B6  F031         	movff	powf@z+2,___flsub@a+2
  5053  002B98  C1B7  F032         	movff	powf@z+3,___flsub@a+3
  5054  002B9C  C14C  F02B         	movff	powf@r,___flsub@b
  5055  002BA0  C14D  F02C         	movff	powf@r+1,___flsub@b+1
  5056  002BA4  C14E  F02D         	movff	powf@r+2,___flsub@b+2
  5057  002BA8  C14F  F02E         	movff	powf@r+3,___flsub@b+3
  5058  002BAC  ECD7  F01F         	call	___flsub	;wreg free
  5059  002BB0  C02B  F194         	movff	?___flsub,_powf$876
  5060  002BB4  C02C  F195         	movff	?___flsub+1,_powf$876+1
  5061  002BB8  C02D  F196         	movff	?___flsub+2,_powf$876+2
  5062  002BBC  C02E  F197         	movff	?___flsub+3,_powf$876+3
  5063  002BC0  0E00               	movlw	0
  5064  002BC2  6E2B               	movwf	___flsub@b,c
  5065  002BC4  0E00               	movlw	0
  5066  002BC6  6E2C               	movwf	___flsub@b+1,c
  5067  002BC8  0E80               	movlw	128
  5068  002BCA  6E2D               	movwf	___flsub@b+2,c
  5069  002BCC  0E3F               	movlw	63
  5070  002BCE  6E2E               	movwf	___flsub@b+3,c
  5071  002BD0  C194  F02F         	movff	_powf$876,___flsub@a
  5072  002BD4  C195  F030         	movff	_powf$876+1,___flsub@a+1
  5073  002BD8  C196  F031         	movff	_powf$876+2,___flsub@a+2
  5074  002BDC  C197  F032         	movff	_powf$876+3,___flsub@a+3
  5075  002BE0  ECD7  F01F         	call	___flsub	;wreg free
  5076  002BE4  C02B  F1B4         	movff	?___flsub,powf@z
  5077  002BE8  C02C  F1B5         	movff	?___flsub+1,powf@z+1
  5078  002BEC  C02D  F1B6         	movff	?___flsub+2,powf@z+2
  5079  002BF0  C02E  F1B7         	movff	?___flsub+3,powf@z+3
  5080  002BF4  C1B4  F1B8         	movff	powf@z,powf@__xc8_float_word
  5081  002BF8  C1B5  F1B9         	movff	powf@z+1,powf@__xc8_float_word+1
  5082  002BFC  C1B6  F1BA         	movff	powf@z+2,powf@__xc8_float_word+2
  5083  002C00  C1B7  F1BB         	movff	powf@z+3,powf@__xc8_float_word+3
  5084  002C04  C1B8  F1AC         	movff	powf@__xc8_float_word,powf@j
  5085  002C08  C1B9  F1AD         	movff	powf@__xc8_float_word+1,powf@j+1
  5086  002C0C  C1BA  F1AE         	movff	powf@__xc8_float_word+2,powf@j+2
  5087  002C10  C1BB  F1AF         	movff	powf@__xc8_float_word+3,powf@j+3
  5088  002C14  C17C  F069         	movff	powf@n,??_powf
  5089  002C18  C17D  F06A         	movff	powf@n+1,??_powf+1
  5090  002C1C  C17E  F06B         	movff	powf@n+2,??_powf+2
  5091  002C20  C17F  F06C         	movff	powf@n+3,??_powf+3
  5092  002C24  0E17               	movlw	23
  5093  002C26                     u3725:
  5094  002C26  FFFF               	dw	65535	; assembler added errata NOP
  5095  002C28  90D8               	bcf	status,0,c
  5096  002C2A  3669               	rlcf	??_powf,f,c
  5097  002C2C  366A               	rlcf	??_powf+1,f,c
  5098  002C2E  366B               	rlcf	??_powf+2,f,c
  5099  002C30  366C               	rlcf	??_powf+3,f,c
  5100  002C32  2EE8               	decfsz	wreg,f,c
  5101  002C34  D7F8               	goto	u3725
  5102  002C36  5069               	movf	??_powf,w,c
  5103  002C38  0101               	movlb	1	; () banked
  5104  002C3A  27AC               	addwf	powf@j& (0+255),f,b
  5105  002C3C  506A               	movf	??_powf+1,w,c
  5106  002C3E  23AD               	addwfc	(powf@j+1)& (0+255),f,b
  5107  002C40  506B               	movf	??_powf+2,w,c
  5108  002C42  23AE               	addwfc	(powf@j+2)& (0+255),f,b
  5109  002C44  506C               	movf	??_powf+3,w,c
  5110  002C46  23AF               	addwfc	(powf@j+3)& (0+255),f,b
  5111                           
  5112                           ; BSR set to: 1
  5113  002C48  0E17               	movlw	23
  5114  002C4A  6E69               	movwf	??_powf& (0+255),c
  5115  002C4C  C1AC  F06A         	movff	powf@j,??_powf+1
  5116  002C50  C1AD  F06B         	movff	powf@j+1,??_powf+2
  5117  002C54  C1AE  F06C         	movff	powf@j+2,??_powf+3
  5118  002C58  C1AF  F06D         	movff	powf@j+3,??_powf+4
  5119  002C5C                     u3735:
  5120  002C5C  FFFF               	dw	65535	; assembler added errata NOP
  5121  002C5E  6669               	tstfsz	??_powf,c
  5122  002C60  D001               	goto	u3736
  5123  002C62  D008               	goto	u3737
  5124  002C64                     u3736:
  5125  002C64  FFFF               	dw	65535	; assembler added errata NOP
  5126  002C66  346D               	rlcf	??_powf+4,w,c
  5127  002C68  326D               	rrcf	??_powf+4,f,c
  5128  002C6A  326C               	rrcf	??_powf+3,f,c
  5129  002C6C  326B               	rrcf	??_powf+2,f,c
  5130  002C6E  326A               	rrcf	??_powf+1,f,c
  5131  002C70  2E69               	decfsz	??_powf,f,c
  5132  002C72  D7F4               	goto	u3735
  5133  002C74                     u3737:
  5134  002C74  FFFF               	dw	65535	; assembler added errata NOP
  5135  002C76  BE6D               	btfsc	??_powf+4,7,c
  5136  002C78  D007               	goto	u3740
  5137  002C7A  506D               	movf	??_powf+4,w,c
  5138  002C7C  106C               	iorwf	??_powf+3,w,c
  5139  002C7E  106B               	iorwf	??_powf+2,w,c
  5140  002C80  E11B               	bnz	l943
  5141  002C82  046A               	decf	??_powf+1,w,c
  5142  002C84  B0D8               	btfsc	status,0,c
  5143  002C86  D018               	goto	l943
  5144  002C88                     u3740:
  5145  002C88  FFFF               	dw	65535	; assembler added errata NOP
  5146  002C8A  C1B4  F02B         	movff	powf@z,scalbnf@x
  5147  002C8E  C1B5  F02C         	movff	powf@z+1,scalbnf@x+1
  5148  002C92  C1B6  F02D         	movff	powf@z+2,scalbnf@x+2
  5149  002C96  C1B7  F02E         	movff	powf@z+3,scalbnf@x+3
  5150  002C9A  C17C  F02F         	movff	powf@n,scalbnf@n
  5151  002C9E  C17D  F030         	movff	powf@n+1,scalbnf@n+1
  5152  002CA2  ECDE  F01E         	call	_scalbnf	;wreg free
  5153  002CA6  C02B  F1B4         	movff	?_scalbnf,powf@z
  5154  002CAA  C02C  F1B5         	movff	?_scalbnf+1,powf@z+1
  5155  002CAE  C02D  F1B6         	movff	?_scalbnf+2,powf@z+2
  5156  002CB2  C02E  F1B7         	movff	?_scalbnf+3,powf@z+3
  5157  002CB6  D011               	goto	l3514
  5158  002CB8                     l943:
  5159  002CB8  FFFF               	dw	65535	; assembler added errata NOP
  5160  002CBA  C1AC  F1B8         	movff	powf@j,powf@__xc8_float_word
  5161  002CBE  C1AD  F1B9         	movff	powf@j+1,powf@__xc8_float_word+1
  5162  002CC2  C1AE  F1BA         	movff	powf@j+2,powf@__xc8_float_word+2
  5163  002CC6  C1AF  F1BB         	movff	powf@j+3,powf@__xc8_float_word+3
  5164  002CCA  C1B8  F1B4         	movff	powf@__xc8_float_word,powf@z
  5165  002CCE  C1B9  F1B5         	movff	powf@__xc8_float_word+1,powf@z+1
  5166  002CD2  C1BA  F1B6         	movff	powf@__xc8_float_word+2,powf@z+2
  5167  002CD6  C1BB  F1B7         	movff	powf@__xc8_float_word+3,powf@z+3
  5168  002CDA                     l3514:
  5169  002CDA  FFFF               	dw	65535	; assembler added errata NOP
  5170  002CDC  C188  F012         	movff	powf@sn,___flmul@b
  5171  002CE0  C189  F013         	movff	powf@sn+1,___flmul@b+1
  5172  002CE4  C18A  F014         	movff	powf@sn+2,___flmul@b+2
  5173  002CE8  C18B  F015         	movff	powf@sn+3,___flmul@b+3
  5174  002CEC  C1B4  F016         	movff	powf@z,___flmul@a
  5175  002CF0  C1B5  F017         	movff	powf@z+1,___flmul@a+1
  5176  002CF4  C1B6  F018         	movff	powf@z+2,___flmul@a+2
  5177  002CF8  C1B7  F019         	movff	powf@z+3,___flmul@a+3
  5178  002CFC  ECB9  F018         	call	___flmul	;wreg free
  5179  002D00                     L4:
  5180  002D00  FFFF               	dw	65535	; assembler added errata NOP
  5181  002D02  C012  F061         	movff	?___flmul,?_powf
  5182  002D06  C013  F062         	movff	?___flmul+1,?_powf+1
  5183  002D0A  C014  F063         	movff	?___flmul+2,?_powf+2
  5184  002D0E  C015  F064         	movff	?___flmul+3,?_powf+3
  5185  002D12                     l831:
  5186  002D12  FFFF               	dw	65535	; assembler added errata NOP
  5187  002D14  0012               	return		;funcret
  5188  002D16  FFFF               	dw	65535	; errata NOP
  5189  002D18                     __end_of_powf:
  5190                           	opt callstack 0
  5191                           
  5192 ;; *************** function _sqrtf *****************
  5193 ;; Defined at:
  5194 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sqrtf.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;  x               4   87[COMRAM] float 
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;  ix              4   36[BANK0 ] long 
  5199 ;;  r               4   32[BANK0 ] unsigned long 
  5200 ;;  m               4   28[BANK0 ] long 
  5201 ;;  z               4   24[BANK0 ] float 
  5202 ;;  t               4   20[BANK0 ] long 
  5203 ;;  q               4   16[BANK0 ] long 
  5204 ;;  __xc8_float_    4   12[BANK0 ] struct .
  5205 ;;  i               4    8[BANK0 ] long 
  5206 ;;  s               4    4[BANK0 ] long 
  5207 ;;  sign            4    0        long 
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  4   87[COMRAM] float 
  5210 ;; Registers used:
  5211 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5217 ;;      Params:         4       0       0       0       0       0       0
  5218 ;;      Locals:         0      40       0       0       0       0       0
  5219 ;;      Temps:          5       0       0       0       0       0       0
  5220 ;;      Totals:         9      40       0       0       0       0       0
  5221 ;;Total ram usage:       49 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; Hardware stack levels required when called:    3
  5224 ;; This function calls:
  5225 ;;		___fladd
  5226 ;;		___flge
  5227 ;;		___flmul
  5228 ;;		_nanf
  5229 ;; This function is called by:
  5230 ;;		_powf
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           	psect	text4
  5235  002D18                     __ptext4:
  5236                           	opt callstack 0
  5237  002D18                     _sqrtf:
  5238                           	opt callstack 0
  5239  002D18  FFFF               	dw	65535	; assembler added errata NOP
  5240                           
  5241                           ;incstack = 0
  5242  002D1A  C058  F08C         	movff	sqrtf@x,sqrtf@__xc8_float_word
  5243  002D1E  C059  F08D         	movff	sqrtf@x+1,sqrtf@__xc8_float_word+1
  5244  002D22  C05A  F08E         	movff	sqrtf@x+2,sqrtf@__xc8_float_word+2
  5245  002D26  C05B  F08F         	movff	sqrtf@x+3,sqrtf@__xc8_float_word+3
  5246  002D2A  C08C  F0A4         	movff	sqrtf@__xc8_float_word,sqrtf@ix
  5247  002D2E  C08D  F0A5         	movff	sqrtf@__xc8_float_word+1,sqrtf@ix+1
  5248  002D32  C08E  F0A6         	movff	sqrtf@__xc8_float_word+2,sqrtf@ix+2
  5249  002D36  C08F  F0A7         	movff	sqrtf@__xc8_float_word+3,sqrtf@ix+3
  5250  002D3A  0E00               	movlw	0
  5251  002D3C  0100               	movlb	0	; () banked
  5252  002D3E  15A4               	andwf	sqrtf@ix& (0+255),w,b
  5253  002D40  6E5C               	movwf	??_sqrtf& (0+255),c
  5254  002D42  0E00               	movlw	0
  5255  002D44  15A5               	andwf	(sqrtf@ix+1)& (0+255),w,b
  5256  002D46  6E5D               	movwf	(??_sqrtf+1)& (0+255),c
  5257  002D48  0E80               	movlw	128
  5258  002D4A  15A6               	andwf	(sqrtf@ix+2)& (0+255),w,b
  5259  002D4C  6E5E               	movwf	(??_sqrtf+2)& (0+255),c
  5260  002D4E  0E7F               	movlw	127
  5261  002D50  15A7               	andwf	(sqrtf@ix+3)& (0+255),w,b
  5262  002D52  6E5F               	movwf	(??_sqrtf+3)& (0+255),c
  5263  002D54  0E80               	movlw	128
  5264  002D56  185E               	xorwf	??_sqrtf+2,w,c
  5265  002D58  E133               	bnz	l2952
  5266  002D5A  0E7F               	movlw	127
  5267  002D5C  185F               	xorwf	??_sqrtf+3,w,c
  5268  002D5E  105C               	iorwf	??_sqrtf,w,c
  5269  002D60  105D               	iorwf	??_sqrtf+1,w,c
  5270  002D62  A4D8               	btfss	status,2,c
  5271  002D64  D02D               	goto	l2952
  5272                           
  5273                           ; BSR set to: 0
  5274  002D66  C058  F016         	movff	sqrtf@x,___flmul@a
  5275  002D6A  C059  F017         	movff	sqrtf@x+1,___flmul@a+1
  5276  002D6E  C05A  F018         	movff	sqrtf@x+2,___flmul@a+2
  5277  002D72  C05B  F019         	movff	sqrtf@x+3,___flmul@a+3
  5278  002D76  C058  F012         	movff	sqrtf@x,___flmul@b
  5279  002D7A  C059  F013         	movff	sqrtf@x+1,___flmul@b+1
  5280  002D7E  C05A  F014         	movff	sqrtf@x+2,___flmul@b+2
  5281  002D82  C05B  F015         	movff	sqrtf@x+3,___flmul@b+3
  5282  002D86  ECB9  F018         	call	___flmul	;wreg free
  5283  002D8A  C012  F002         	movff	?___flmul,___fladd@b
  5284  002D8E  C013  F003         	movff	?___flmul+1,___fladd@b+1
  5285  002D92  C014  F004         	movff	?___flmul+2,___fladd@b+2
  5286  002D96  C015  F005         	movff	?___flmul+3,___fladd@b+3
  5287  002D9A  C058  F006         	movff	sqrtf@x,___fladd@a
  5288  002D9E  C059  F007         	movff	sqrtf@x+1,___fladd@a+1
  5289  002DA2  C05A  F008         	movff	sqrtf@x+2,___fladd@a+2
  5290  002DA6  C05B  F009         	movff	sqrtf@x+3,___fladd@a+3
  5291  002DAA  EC7A  F01A         	call	___fladd	;wreg free
  5292  002DAE  C002  F058         	movff	?___fladd,?_sqrtf
  5293  002DB2  C003  F059         	movff	?___fladd+1,?_sqrtf+1
  5294  002DB6  C004  F05A         	movff	?___fladd+2,?_sqrtf+2
  5295  002DBA  C005  F05B         	movff	?___fladd+3,?_sqrtf+3
  5296  002DBE  D1D6               	goto	l966
  5297  002DC0                     l2952:
  5298  002DC0  FFFF               	dw	65535	; assembler added errata NOP
  5299                           
  5300                           ; BSR set to: 0
  5301  002DC2  BFA7               	btfsc	(sqrtf@ix+3)& (0+255),7,b
  5302  002DC4  D007               	goto	u2970
  5303  002DC6  51A7               	movf	(sqrtf@ix+3)& (0+255),w,b
  5304  002DC8  11A6               	iorwf	(sqrtf@ix+2)& (0+255),w,b
  5305  002DCA  11A5               	iorwf	(sqrtf@ix+1)& (0+255),w,b
  5306  002DCC  E135               	bnz	l2966
  5307  002DCE  05A4               	decf	sqrtf@ix& (0+255),w,b
  5308  002DD0  B0D8               	btfsc	status,0,c
  5309  002DD2  D032               	goto	l2966
  5310  002DD4                     u2970:
  5311  002DD4  FFFF               	dw	65535	; assembler added errata NOP
  5312                           
  5313                           ; BSR set to: 0
  5314  002DD6  0EFF               	movlw	255
  5315  002DD8  15A4               	andwf	sqrtf@ix& (0+255),w,b
  5316  002DDA  6E5C               	movwf	??_sqrtf& (0+255),c
  5317  002DDC  0EFF               	movlw	255
  5318  002DDE  15A5               	andwf	(sqrtf@ix+1)& (0+255),w,b
  5319  002DE0  6E5D               	movwf	(??_sqrtf+1)& (0+255),c
  5320  002DE2  0EFF               	movlw	255
  5321  002DE4  15A6               	andwf	(sqrtf@ix+2)& (0+255),w,b
  5322  002DE6  6E5E               	movwf	(??_sqrtf+2)& (0+255),c
  5323  002DE8  0E7F               	movlw	127
  5324  002DEA  15A7               	andwf	(sqrtf@ix+3)& (0+255),w,b
  5325  002DEC  6E5F               	movwf	(??_sqrtf+3)& (0+255),c
  5326  002DEE  505C               	movf	??_sqrtf,w,c
  5327  002DF0  105D               	iorwf	??_sqrtf+1,w,c
  5328  002DF2  105E               	iorwf	??_sqrtf+2,w,c
  5329  002DF4  105F               	iorwf	??_sqrtf+3,w,c
  5330  002DF6  A4D8               	btfss	status,2,c
  5331  002DF8  D009               	goto	l2958
  5332                           
  5333                           ; BSR set to: 0
  5334  002DFA  C058  F058         	movff	sqrtf@x,?_sqrtf
  5335  002DFE  C059  F059         	movff	sqrtf@x+1,?_sqrtf+1
  5336  002E02  C05A  F05A         	movff	sqrtf@x+2,?_sqrtf+2
  5337  002E06  C05B  F05B         	movff	sqrtf@x+3,?_sqrtf+3
  5338  002E0A  D1B0               	goto	l966
  5339  002E0C                     l2958:
  5340  002E0C  FFFF               	dw	65535	; assembler added errata NOP
  5341                           
  5342                           ; BSR set to: 0
  5343  002E0E  AFA7               	btfss	(sqrtf@ix+3)& (0+255),7,b
  5344  002E10  D013               	goto	l2966
  5345                           
  5346                           ; BSR set to: 0
  5347  002E12  0E00               	movlw	0
  5348  002E14  6FC7               	movwf	(_errno+1)& (0+255),b
  5349  002E16  0E21               	movlw	33
  5350  002E18  6FC6               	movwf	_errno& (0+255),b
  5351                           
  5352                           ; BSR set to: 0
  5353  002E1A  0E85               	movlw	low (STR_1+8)
  5354  002E1C  6E02               	movwf	nanf@s,c
  5355  002E1E  0E06               	movlw	high (STR_1+8)
  5356  002E20  6E03               	movwf	nanf@s+1,c
  5357  002E22  ECD3  F03F         	call	_nanf	;wreg free
  5358  002E26  C002  F058         	movff	?_nanf,?_sqrtf
  5359  002E2A  C003  F059         	movff	?_nanf+1,?_sqrtf+1
  5360  002E2E  C004  F05A         	movff	?_nanf+2,?_sqrtf+2
  5361  002E32  C005  F05B         	movff	?_nanf+3,?_sqrtf+3
  5362  002E36  D19A               	goto	l966
  5363  002E38                     l2966:
  5364  002E38  FFFF               	dw	65535	; assembler added errata NOP
  5365                           
  5366                           ; BSR set to: 0
  5367  002E3A  0E17               	movlw	23
  5368  002E3C  6E5C               	movwf	??_sqrtf& (0+255),c
  5369  002E3E  C0A4  F05D         	movff	sqrtf@ix,??_sqrtf+1
  5370  002E42  C0A5  F05E         	movff	sqrtf@ix+1,??_sqrtf+2
  5371  002E46  C0A6  F05F         	movff	sqrtf@ix+2,??_sqrtf+3
  5372  002E4A  C0A7  F060         	movff	sqrtf@ix+3,??_sqrtf+4
  5373  002E4E                     u3005:
  5374  002E4E  FFFF               	dw	65535	; assembler added errata NOP
  5375  002E50  665C               	tstfsz	??_sqrtf,c
  5376  002E52  D001               	goto	u3006
  5377  002E54  D008               	goto	u3007
  5378  002E56                     u3006:
  5379  002E56  FFFF               	dw	65535	; assembler added errata NOP
  5380  002E58  3460               	rlcf	??_sqrtf+4,w,c
  5381  002E5A  3260               	rrcf	??_sqrtf+4,f,c
  5382  002E5C  325F               	rrcf	??_sqrtf+3,f,c
  5383  002E5E  325E               	rrcf	??_sqrtf+2,f,c
  5384  002E60  325D               	rrcf	??_sqrtf+1,f,c
  5385  002E62  2E5C               	decfsz	??_sqrtf,f,c
  5386  002E64  D7F4               	goto	u3005
  5387  002E66                     u3007:
  5388  002E66  FFFF               	dw	65535	; assembler added errata NOP
  5389  002E68  C05D  F09C         	movff	??_sqrtf+1,sqrtf@m
  5390  002E6C  C05E  F09D         	movff	??_sqrtf+2,sqrtf@m+1
  5391  002E70  C05F  F09E         	movff	??_sqrtf+3,sqrtf@m+2
  5392  002E74  C060  F09F         	movff	??_sqrtf+4,sqrtf@m+3
  5393  002E78  0100               	movlb	0	; () banked
  5394  002E7A  519C               	movf	sqrtf@m& (0+255),w,b
  5395  002E7C  119D               	iorwf	(sqrtf@m+1)& (0+255),w,b
  5396  002E7E  119E               	iorwf	(sqrtf@m+2)& (0+255),w,b
  5397  002E80  119F               	iorwf	(sqrtf@m+3)& (0+255),w,b
  5398  002E82  A4D8               	btfss	status,2,c
  5399  002E84  D02C               	goto	l970
  5400                           
  5401                           ; BSR set to: 0
  5402  002E86  0E00               	movlw	0
  5403  002E88  6F88               	movwf	sqrtf@i& (0+255),b
  5404  002E8A  0E00               	movlw	0
  5405  002E8C  6F89               	movwf	(sqrtf@i+1)& (0+255),b
  5406  002E8E  0E00               	movlw	0
  5407  002E90  6F8A               	movwf	(sqrtf@i+2)& (0+255),b
  5408  002E92  0E00               	movlw	0
  5409  002E94  6F8B               	movwf	(sqrtf@i+3)& (0+255),b
  5410  002E96  D00C               	goto	l2974
  5411  002E98                     l2970:
  5412  002E98  FFFF               	dw	65535	; assembler added errata NOP
  5413                           
  5414                           ; BSR set to: 0
  5415  002E9A  90D8               	bcf	status,0,c
  5416  002E9C  37A4               	rlcf	sqrtf@ix& (0+255),f,b
  5417  002E9E  37A5               	rlcf	(sqrtf@ix+1)& (0+255),f,b
  5418  002EA0  37A6               	rlcf	(sqrtf@ix+2)& (0+255),f,b
  5419  002EA2  37A7               	rlcf	(sqrtf@ix+3)& (0+255),f,b
  5420                           
  5421                           ; BSR set to: 0
  5422  002EA4  0E01               	movlw	1
  5423  002EA6  2788               	addwf	sqrtf@i& (0+255),f,b
  5424  002EA8  0E00               	movlw	0
  5425  002EAA  2389               	addwfc	(sqrtf@i+1)& (0+255),f,b
  5426  002EAC  238A               	addwfc	(sqrtf@i+2)& (0+255),f,b
  5427  002EAE  238B               	addwfc	(sqrtf@i+3)& (0+255),f,b
  5428  002EB0                     l2974:
  5429  002EB0  FFFF               	dw	65535	; assembler added errata NOP
  5430                           
  5431                           ; BSR set to: 0
  5432  002EB2  AFA6               	btfss	(sqrtf@ix+2)& (0+255),7,b
  5433  002EB4  D7F1               	goto	l2970
  5434                           
  5435                           ; BSR set to: 0
  5436  002EB6  0EFF               	movlw	255
  5437  002EB8  2588               	addwf	sqrtf@i& (0+255),w,b
  5438  002EBA  6E5C               	movwf	??_sqrtf& (0+255),c
  5439  002EBC  0EFF               	movlw	255
  5440  002EBE  2189               	addwfc	(sqrtf@i+1)& (0+255),w,b
  5441  002EC0  6E5D               	movwf	(??_sqrtf+1)& (0+255),c
  5442  002EC2  0EFF               	movlw	255
  5443  002EC4  218A               	addwfc	(sqrtf@i+2)& (0+255),w,b
  5444  002EC6  6E5E               	movwf	(??_sqrtf+2)& (0+255),c
  5445  002EC8  0EFF               	movlw	255
  5446  002ECA  218B               	addwfc	(sqrtf@i+3)& (0+255),w,b
  5447  002ECC  6E5F               	movwf	(??_sqrtf+3)& (0+255),c
  5448  002ECE  505C               	movf	??_sqrtf,w,c
  5449  002ED0  5F9C               	subwf	sqrtf@m& (0+255),f,b
  5450  002ED2  505D               	movf	??_sqrtf+1,w,c
  5451  002ED4  5B9D               	subwfb	(sqrtf@m+1)& (0+255),f,b
  5452  002ED6  505E               	movf	??_sqrtf+2,w,c
  5453  002ED8  5B9E               	subwfb	(sqrtf@m+2)& (0+255),f,b
  5454  002EDA  505F               	movf	??_sqrtf+3,w,c
  5455  002EDC  5B9F               	subwfb	(sqrtf@m+3)& (0+255),f,b
  5456  002EDE                     l970:
  5457  002EDE  FFFF               	dw	65535	; assembler added errata NOP
  5458                           
  5459                           ; BSR set to: 0
  5460  002EE0  0E81               	movlw	129
  5461  002EE2  279C               	addwf	sqrtf@m& (0+255),f,b
  5462  002EE4  0EFF               	movlw	255
  5463  002EE6  239D               	addwfc	(sqrtf@m+1)& (0+255),f,b
  5464  002EE8  0EFF               	movlw	255
  5465  002EEA  239E               	addwfc	(sqrtf@m+2)& (0+255),f,b
  5466  002EEC  0EFF               	movlw	255
  5467  002EEE  239F               	addwfc	(sqrtf@m+3)& (0+255),f,b
  5468  002EF0  0EFF               	movlw	255
  5469  002EF2  15A4               	andwf	sqrtf@ix& (0+255),w,b
  5470  002EF4  6E5C               	movwf	??_sqrtf& (0+255),c
  5471  002EF6  0EFF               	movlw	255
  5472  002EF8  15A5               	andwf	(sqrtf@ix+1)& (0+255),w,b
  5473  002EFA  6E5D               	movwf	(??_sqrtf+1)& (0+255),c
  5474  002EFC  0E7F               	movlw	127
  5475  002EFE  15A6               	andwf	(sqrtf@ix+2)& (0+255),w,b
  5476  002F00  6E5E               	movwf	(??_sqrtf+2)& (0+255),c
  5477  002F02  0E00               	movlw	0
  5478  002F04  15A7               	andwf	(sqrtf@ix+3)& (0+255),w,b
  5479  002F06  6E5F               	movwf	(??_sqrtf+3)& (0+255),c
  5480  002F08  0E00               	movlw	0
  5481  002F0A  105C               	iorwf	??_sqrtf,w,c
  5482  002F0C  6FA4               	movwf	sqrtf@ix& (0+255),b
  5483  002F0E  0E00               	movlw	0
  5484  002F10  105D               	iorwf	??_sqrtf+1,w,c
  5485  002F12  6FA5               	movwf	(sqrtf@ix+1)& (0+255),b
  5486  002F14  0E80               	movlw	128
  5487  002F16  105E               	iorwf	??_sqrtf+2,w,c
  5488  002F18  6FA6               	movwf	(sqrtf@ix+2)& (0+255),b
  5489  002F1A  0E00               	movlw	0
  5490  002F1C  105F               	iorwf	??_sqrtf+3,w,c
  5491  002F1E  6FA7               	movwf	(sqrtf@ix+3)& (0+255),b
  5492                           
  5493                           ; BSR set to: 0
  5494  002F20  A19C               	btfss	sqrtf@m& (0+255),0,b
  5495  002F22  D008               	goto	l974
  5496                           
  5497                           ; BSR set to: 0
  5498  002F24  51A4               	movf	sqrtf@ix& (0+255),w,b
  5499  002F26  27A4               	addwf	sqrtf@ix& (0+255),f,b
  5500  002F28  51A5               	movf	(sqrtf@ix+1)& (0+255),w,b
  5501  002F2A  23A5               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  5502  002F2C  51A6               	movf	(sqrtf@ix+2)& (0+255),w,b
  5503  002F2E  23A6               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  5504  002F30  51A7               	movf	(sqrtf@ix+3)& (0+255),w,b
  5505  002F32  23A7               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  5506  002F34                     l974:
  5507  002F34  FFFF               	dw	65535	; assembler added errata NOP
  5508                           
  5509                           ; BSR set to: 0
  5510  002F36  359F               	rlcf	(sqrtf@m+3)& (0+255),w,b
  5511  002F38  339F               	rrcf	(sqrtf@m+3)& (0+255),f,b
  5512  002F3A  339E               	rrcf	(sqrtf@m+2)& (0+255),f,b
  5513  002F3C  339D               	rrcf	(sqrtf@m+1)& (0+255),f,b
  5514  002F3E  339C               	rrcf	sqrtf@m& (0+255),f,b
  5515  002F40  51A4               	movf	sqrtf@ix& (0+255),w,b
  5516  002F42  27A4               	addwf	sqrtf@ix& (0+255),f,b
  5517  002F44  51A5               	movf	(sqrtf@ix+1)& (0+255),w,b
  5518  002F46  23A5               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  5519  002F48  51A6               	movf	(sqrtf@ix+2)& (0+255),w,b
  5520  002F4A  23A6               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  5521  002F4C  51A7               	movf	(sqrtf@ix+3)& (0+255),w,b
  5522  002F4E  23A7               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  5523                           
  5524                           ; BSR set to: 0
  5525  002F50  0E00               	movlw	0
  5526  002F52  6F84               	movwf	sqrtf@s& (0+255),b
  5527  002F54  0E00               	movlw	0
  5528  002F56  6F85               	movwf	(sqrtf@s+1)& (0+255),b
  5529  002F58  0E00               	movlw	0
  5530  002F5A  6F86               	movwf	(sqrtf@s+2)& (0+255),b
  5531  002F5C  0E00               	movlw	0
  5532  002F5E  6F87               	movwf	(sqrtf@s+3)& (0+255),b
  5533  002F60  C084  F090         	movff	sqrtf@s,sqrtf@q
  5534  002F64  C085  F091         	movff	sqrtf@s+1,sqrtf@q+1
  5535  002F68  C086  F092         	movff	sqrtf@s+2,sqrtf@q+2
  5536  002F6C  C087  F093         	movff	sqrtf@s+3,sqrtf@q+3
  5537                           
  5538                           ; BSR set to: 0
  5539  002F70  0E00               	movlw	0
  5540  002F72  6FA0               	movwf	sqrtf@r& (0+255),b
  5541  002F74  0E00               	movlw	0
  5542  002F76  6FA1               	movwf	(sqrtf@r+1)& (0+255),b
  5543  002F78  0E00               	movlw	0
  5544  002F7A  6FA2               	movwf	(sqrtf@r+2)& (0+255),b
  5545  002F7C  0E01               	movlw	1
  5546  002F7E  6FA3               	movwf	(sqrtf@r+3)& (0+255),b
  5547  002F80  D045               	goto	l2992
  5548  002F82                     l2986:
  5549  002F82  FFFF               	dw	65535	; assembler added errata NOP
  5550                           
  5551                           ; BSR set to: 0
  5552  002F84  51A0               	movf	sqrtf@r& (0+255),w,b
  5553  002F86  2584               	addwf	sqrtf@s& (0+255),w,b
  5554  002F88  6F94               	movwf	sqrtf@t& (0+255),b
  5555  002F8A  51A1               	movf	(sqrtf@r+1)& (0+255),w,b
  5556  002F8C  2185               	addwfc	(sqrtf@s+1)& (0+255),w,b
  5557  002F8E  6F95               	movwf	(sqrtf@t+1)& (0+255),b
  5558  002F90  51A2               	movf	(sqrtf@r+2)& (0+255),w,b
  5559  002F92  2186               	addwfc	(sqrtf@s+2)& (0+255),w,b
  5560  002F94  6F96               	movwf	(sqrtf@t+2)& (0+255),b
  5561  002F96  51A3               	movf	(sqrtf@r+3)& (0+255),w,b
  5562  002F98  2187               	addwfc	(sqrtf@s+3)& (0+255),w,b
  5563  002F9A  6F97               	movwf	(sqrtf@t+3)& (0+255),b
  5564  002F9C  5194               	movf	sqrtf@t& (0+255),w,b
  5565  002F9E  5DA4               	subwf	sqrtf@ix& (0+255),w,b
  5566  002FA0  5195               	movf	(sqrtf@t+1)& (0+255),w,b
  5567  002FA2  59A5               	subwfb	(sqrtf@ix+1)& (0+255),w,b
  5568  002FA4  5196               	movf	(sqrtf@t+2)& (0+255),w,b
  5569  002FA6  59A6               	subwfb	(sqrtf@ix+2)& (0+255),w,b
  5570  002FA8  51A7               	movf	(sqrtf@ix+3)& (0+255),w,b
  5571  002FAA  0A80               	xorlw	128
  5572  002FAC  6E5C               	movwf	??_sqrtf& (0+255),c
  5573  002FAE  5197               	movf	(sqrtf@t+3)& (0+255),w,b
  5574  002FB0  0A80               	xorlw	128
  5575  002FB2  585C               	subwfb	??_sqrtf& (0+255),w,c
  5576  002FB4  A0D8               	btfss	status,0,c
  5577  002FB6  D01C               	goto	l977
  5578                           
  5579                           ; BSR set to: 0
  5580  002FB8  51A0               	movf	sqrtf@r& (0+255),w,b
  5581  002FBA  2594               	addwf	sqrtf@t& (0+255),w,b
  5582  002FBC  6F84               	movwf	sqrtf@s& (0+255),b
  5583  002FBE  51A1               	movf	(sqrtf@r+1)& (0+255),w,b
  5584  002FC0  2195               	addwfc	(sqrtf@t+1)& (0+255),w,b
  5585  002FC2  6F85               	movwf	(sqrtf@s+1)& (0+255),b
  5586  002FC4  51A2               	movf	(sqrtf@r+2)& (0+255),w,b
  5587  002FC6  2196               	addwfc	(sqrtf@t+2)& (0+255),w,b
  5588  002FC8  6F86               	movwf	(sqrtf@s+2)& (0+255),b
  5589  002FCA  51A3               	movf	(sqrtf@r+3)& (0+255),w,b
  5590  002FCC  2197               	addwfc	(sqrtf@t+3)& (0+255),w,b
  5591  002FCE  6F87               	movwf	(sqrtf@s+3)& (0+255),b
  5592  002FD0  5194               	movf	sqrtf@t& (0+255),w,b
  5593  002FD2  5FA4               	subwf	sqrtf@ix& (0+255),f,b
  5594  002FD4  5195               	movf	(sqrtf@t+1)& (0+255),w,b
  5595  002FD6  5BA5               	subwfb	(sqrtf@ix+1)& (0+255),f,b
  5596  002FD8  5196               	movf	(sqrtf@t+2)& (0+255),w,b
  5597  002FDA  5BA6               	subwfb	(sqrtf@ix+2)& (0+255),f,b
  5598  002FDC  5197               	movf	(sqrtf@t+3)& (0+255),w,b
  5599  002FDE  5BA7               	subwfb	(sqrtf@ix+3)& (0+255),f,b
  5600  002FE0  51A0               	movf	sqrtf@r& (0+255),w,b
  5601  002FE2  2790               	addwf	sqrtf@q& (0+255),f,b
  5602  002FE4  51A1               	movf	(sqrtf@r+1)& (0+255),w,b
  5603  002FE6  2391               	addwfc	(sqrtf@q+1)& (0+255),f,b
  5604  002FE8  51A2               	movf	(sqrtf@r+2)& (0+255),w,b
  5605  002FEA  2392               	addwfc	(sqrtf@q+2)& (0+255),f,b
  5606  002FEC  51A3               	movf	(sqrtf@r+3)& (0+255),w,b
  5607  002FEE  2393               	addwfc	(sqrtf@q+3)& (0+255),f,b
  5608  002FF0                     l977:
  5609  002FF0  FFFF               	dw	65535	; assembler added errata NOP
  5610                           
  5611                           ; BSR set to: 0
  5612  002FF2  51A4               	movf	sqrtf@ix& (0+255),w,b
  5613  002FF4  27A4               	addwf	sqrtf@ix& (0+255),f,b
  5614  002FF6  51A5               	movf	(sqrtf@ix+1)& (0+255),w,b
  5615  002FF8  23A5               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  5616  002FFA  51A6               	movf	(sqrtf@ix+2)& (0+255),w,b
  5617  002FFC  23A6               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  5618  002FFE  51A7               	movf	(sqrtf@ix+3)& (0+255),w,b
  5619  003000  23A7               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  5620                           
  5621                           ; BSR set to: 0
  5622  003002  90D8               	bcf	status,0,c
  5623  003004  33A3               	rrcf	(sqrtf@r+3)& (0+255),f,b
  5624  003006  33A2               	rrcf	(sqrtf@r+2)& (0+255),f,b
  5625  003008  33A1               	rrcf	(sqrtf@r+1)& (0+255),f,b
  5626  00300A  33A0               	rrcf	sqrtf@r& (0+255),f,b
  5627  00300C                     l2992:
  5628  00300C  FFFF               	dw	65535	; assembler added errata NOP
  5629                           
  5630                           ; BSR set to: 0
  5631  00300E  51A0               	movf	sqrtf@r& (0+255),w,b
  5632  003010  11A1               	iorwf	(sqrtf@r+1)& (0+255),w,b
  5633  003012  11A2               	iorwf	(sqrtf@r+2)& (0+255),w,b
  5634  003014  11A3               	iorwf	(sqrtf@r+3)& (0+255),w,b
  5635  003016  A4D8               	btfss	status,2,c
  5636  003018  D7B4               	goto	l2986
  5637                           
  5638                           ; BSR set to: 0
  5639  00301A  51A4               	movf	sqrtf@ix& (0+255),w,b
  5640  00301C  11A5               	iorwf	(sqrtf@ix+1)& (0+255),w,b
  5641  00301E  11A6               	iorwf	(sqrtf@ix+2)& (0+255),w,b
  5642  003020  11A7               	iorwf	(sqrtf@ix+3)& (0+255),w,b
  5643  003022  B4D8               	btfsc	status,2,c
  5644  003024  D057               	goto	l979
  5645                           
  5646                           ; BSR set to: 0
  5647  003026  0E00               	movlw	0
  5648  003028  6F98               	movwf	sqrtf@z& (0+255),b
  5649  00302A  0E00               	movlw	0
  5650  00302C  6F99               	movwf	(sqrtf@z+1)& (0+255),b
  5651  00302E  0E80               	movlw	128
  5652  003030  6F9A               	movwf	(sqrtf@z+2)& (0+255),b
  5653  003032  0E3F               	movlw	63
  5654  003034  6F9B               	movwf	(sqrtf@z+3)& (0+255),b
  5655                           
  5656                           ; BSR set to: 0
  5657  003036  C098  F04C         	movff	sqrtf@z,___flge@ff1
  5658  00303A  C099  F04D         	movff	sqrtf@z+1,___flge@ff1+1
  5659  00303E  C09A  F04E         	movff	sqrtf@z+2,___flge@ff1+2
  5660  003042  C09B  F04F         	movff	sqrtf@z+3,___flge@ff1+3
  5661  003046  0E00               	movlw	0
  5662  003048  6E50               	movwf	___flge@ff2,c
  5663  00304A  0E00               	movlw	0
  5664  00304C  6E51               	movwf	___flge@ff2+1,c
  5665  00304E  0E80               	movlw	128
  5666  003050  6E52               	movwf	___flge@ff2+2,c
  5667  003052  0E3F               	movlw	63
  5668  003054  6E53               	movwf	___flge@ff2+3,c
  5669  003056  EC3D  F001         	call	___flge	;wreg free
  5670  00305A  A0D8               	btfss	status,0,c
  5671  00305C  D03B               	goto	l979
  5672  00305E  0E00               	movlw	0
  5673  003060  0100               	movlb	0	; () banked
  5674  003062  6F98               	movwf	sqrtf@z& (0+255),b
  5675  003064  0E00               	movlw	0
  5676  003066  6F99               	movwf	(sqrtf@z+1)& (0+255),b
  5677  003068  0E80               	movlw	128
  5678  00306A  6F9A               	movwf	(sqrtf@z+2)& (0+255),b
  5679  00306C  0E3F               	movlw	63
  5680  00306E  6F9B               	movwf	(sqrtf@z+3)& (0+255),b
  5681                           
  5682                           ; BSR set to: 0
  5683  003070  0E00               	movlw	0
  5684  003072  6E4C               	movwf	___flge@ff1,c
  5685  003074  0E00               	movlw	0
  5686  003076  6E4D               	movwf	___flge@ff1+1,c
  5687  003078  0E80               	movlw	128
  5688  00307A  6E4E               	movwf	___flge@ff1+2,c
  5689  00307C  0E3F               	movlw	63
  5690  00307E  6E4F               	movwf	___flge@ff1+3,c
  5691  003080  C098  F050         	movff	sqrtf@z,___flge@ff2
  5692  003084  C099  F051         	movff	sqrtf@z+1,___flge@ff2+1
  5693  003088  C09A  F052         	movff	sqrtf@z+2,___flge@ff2+2
  5694  00308C  C09B  F053         	movff	sqrtf@z+3,___flge@ff2+3
  5695  003090  EC3D  F001         	call	___flge	;wreg free
  5696  003094  B0D8               	btfsc	status,0,c
  5697  003096  D007               	goto	l3006
  5698  003098  0E02               	movlw	2
  5699  00309A  0100               	movlb	0	; () banked
  5700  00309C  2790               	addwf	sqrtf@q& (0+255),f,b
  5701  00309E  0E00               	movlw	0
  5702  0030A0  2391               	addwfc	(sqrtf@q+1)& (0+255),f,b
  5703  0030A2  2392               	addwfc	(sqrtf@q+2)& (0+255),f,b
  5704  0030A4  D015               	goto	L7
  5705  0030A6                     l3006:
  5706  0030A6  FFFF               	dw	65535	; assembler added errata NOP
  5707  0030A8  0E01               	movlw	1
  5708  0030AA  0100               	movlb	0	; () banked
  5709  0030AC  1590               	andwf	sqrtf@q& (0+255),w,b
  5710  0030AE  6E5C               	movwf	??_sqrtf& (0+255),c
  5711  0030B0  0E00               	movlw	0
  5712  0030B2  1591               	andwf	(sqrtf@q+1)& (0+255),w,b
  5713  0030B4  6E5D               	movwf	(??_sqrtf+1)& (0+255),c
  5714  0030B6  0E00               	movlw	0
  5715  0030B8  1592               	andwf	(sqrtf@q+2)& (0+255),w,b
  5716  0030BA  6E5E               	movwf	(??_sqrtf+2)& (0+255),c
  5717  0030BC  0E00               	movlw	0
  5718  0030BE  1593               	andwf	(sqrtf@q+3)& (0+255),w,b
  5719  0030C0  6E5F               	movwf	(??_sqrtf+3)& (0+255),c
  5720  0030C2  505C               	movf	??_sqrtf,w,c
  5721  0030C4  2790               	addwf	sqrtf@q& (0+255),f,b
  5722  0030C6  505D               	movf	??_sqrtf+1,w,c
  5723  0030C8  2391               	addwfc	(sqrtf@q+1)& (0+255),f,b
  5724  0030CA  505E               	movf	??_sqrtf+2,w,c
  5725  0030CC  2392               	addwfc	(sqrtf@q+2)& (0+255),f,b
  5726  0030CE  505F               	movf	??_sqrtf+3,w,c
  5727  0030D0                     L7:
  5728  0030D0  FFFF               	dw	65535	; assembler added errata NOP
  5729  0030D2  2393               	addwfc	(sqrtf@q+3)& (0+255),f,b
  5730  0030D4                     l979:
  5731  0030D4  FFFF               	dw	65535	; assembler added errata NOP
  5732  0030D6  C090  F05C         	movff	sqrtf@q,??_sqrtf
  5733  0030DA  C091  F05D         	movff	sqrtf@q+1,??_sqrtf+1
  5734  0030DE  C092  F05E         	movff	sqrtf@q+2,??_sqrtf+2
  5735  0030E2  C093  F05F         	movff	sqrtf@q+3,??_sqrtf+3
  5736  0030E6  345F               	rlcf	??_sqrtf+3,w,c
  5737  0030E8  325F               	rrcf	??_sqrtf+3,f,c
  5738  0030EA  325E               	rrcf	??_sqrtf+2,f,c
  5739  0030EC  325D               	rrcf	??_sqrtf+1,f,c
  5740  0030EE  325C               	rrcf	??_sqrtf,f,c
  5741  0030F0  0E00               	movlw	0
  5742  0030F2  245C               	addwf	??_sqrtf,w,c
  5743  0030F4  0100               	movlb	0	; () banked
  5744  0030F6  6FA4               	movwf	sqrtf@ix& (0+255),b
  5745  0030F8  0E00               	movlw	0
  5746  0030FA  205D               	addwfc	??_sqrtf+1,w,c
  5747  0030FC  6FA5               	movwf	(sqrtf@ix+1)& (0+255),b
  5748  0030FE  0E00               	movlw	0
  5749  003100  205E               	addwfc	??_sqrtf+2,w,c
  5750  003102  6FA6               	movwf	(sqrtf@ix+2)& (0+255),b
  5751  003104  0E3F               	movlw	63
  5752  003106  205F               	addwfc	??_sqrtf+3,w,c
  5753  003108  6FA7               	movwf	(sqrtf@ix+3)& (0+255),b
  5754  00310A  C09C  F05C         	movff	sqrtf@m,??_sqrtf
  5755  00310E  C09D  F05D         	movff	sqrtf@m+1,??_sqrtf+1
  5756  003112  C09E  F05E         	movff	sqrtf@m+2,??_sqrtf+2
  5757  003116  C09F  F05F         	movff	sqrtf@m+3,??_sqrtf+3
  5758  00311A  0E17               	movlw	23
  5759  00311C                     u3095:
  5760  00311C  FFFF               	dw	65535	; assembler added errata NOP
  5761  00311E  90D8               	bcf	status,0,c
  5762  003120  365C               	rlcf	??_sqrtf,f,c
  5763  003122  365D               	rlcf	??_sqrtf+1,f,c
  5764  003124  365E               	rlcf	??_sqrtf+2,f,c
  5765  003126  365F               	rlcf	??_sqrtf+3,f,c
  5766  003128  2EE8               	decfsz	wreg,f,c
  5767  00312A  D7F8               	goto	u3095
  5768  00312C  505C               	movf	??_sqrtf,w,c
  5769  00312E  27A4               	addwf	sqrtf@ix& (0+255),f,b
  5770  003130  505D               	movf	??_sqrtf+1,w,c
  5771  003132  23A5               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  5772  003134  505E               	movf	??_sqrtf+2,w,c
  5773  003136  23A6               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  5774  003138  505F               	movf	??_sqrtf+3,w,c
  5775  00313A  23A7               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  5776                           
  5777                           ; BSR set to: 0
  5778  00313C  C0A4  F08C         	movff	sqrtf@ix,sqrtf@__xc8_float_word
  5779  003140  C0A5  F08D         	movff	sqrtf@ix+1,sqrtf@__xc8_float_word+1
  5780  003144  C0A6  F08E         	movff	sqrtf@ix+2,sqrtf@__xc8_float_word+2
  5781  003148  C0A7  F08F         	movff	sqrtf@ix+3,sqrtf@__xc8_float_word+3
  5782                           
  5783                           ; BSR set to: 0
  5784  00314C  C08C  F098         	movff	sqrtf@__xc8_float_word,sqrtf@z
  5785  003150  C08D  F099         	movff	sqrtf@__xc8_float_word+1,sqrtf@z+1
  5786  003154  C08E  F09A         	movff	sqrtf@__xc8_float_word+2,sqrtf@z+2
  5787  003158  C08F  F09B         	movff	sqrtf@__xc8_float_word+3,sqrtf@z+3
  5788                           
  5789                           ; BSR set to: 0
  5790  00315C  C098  F058         	movff	sqrtf@z,?_sqrtf
  5791  003160  C099  F059         	movff	sqrtf@z+1,?_sqrtf+1
  5792  003164  C09A  F05A         	movff	sqrtf@z+2,?_sqrtf+2
  5793  003168  C09B  F05B         	movff	sqrtf@z+3,?_sqrtf+3
  5794  00316C                     l966:
  5795  00316C  FFFF               	dw	65535	; assembler added errata NOP
  5796  00316E  0012               	return		;funcret
  5797  003170  FFFF               	dw	65535	; errata NOP
  5798  003172                     __end_of_sqrtf:
  5799                           	opt callstack 0
  5800                           
  5801 ;; *************** function _nanf *****************
  5802 ;; Defined at:
  5803 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nanf.c"
  5804 ;; Parameters:    Size  Location     Type
  5805 ;;  s               2    1[COMRAM] PTR const unsigned char 
  5806 ;;		 -> STR_3(1), 
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;  u               4    5[COMRAM] struct .
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  4    1[COMRAM] float 
  5811 ;; Registers used:
  5812 ;;		wreg, status,2
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5818 ;;      Params:         4       0       0       0       0       0       0
  5819 ;;      Locals:         4       0       0       0       0       0       0
  5820 ;;      Temps:          0       0       0       0       0       0       0
  5821 ;;      Totals:         8       0       0       0       0       0       0
  5822 ;;Total ram usage:        8 bytes
  5823 ;; Hardware stack levels used:    1
  5824 ;; Hardware stack levels required when called:    2
  5825 ;; This function calls:
  5826 ;;		Nothing
  5827 ;; This function is called by:
  5828 ;;		_sqrtf
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832                           	psect	text5
  5833  007FA6                     __ptext5:
  5834                           	opt callstack 0
  5835  007FA6                     _nanf:
  5836                           	opt callstack 0
  5837  007FA6  FFFF               	dw	65535	; assembler added errata NOP
  5838                           
  5839                           ;incstack = 0
  5840  007FA8  0EFF               	movlw	255
  5841  007FAA  6E06               	movwf	nanf@u,c
  5842  007FAC  0EFF               	movlw	255
  5843  007FAE  6E07               	movwf	nanf@u+1,c
  5844  007FB0  0EFF               	movlw	255
  5845  007FB2  6E08               	movwf	nanf@u+2,c
  5846  007FB4  0E7F               	movlw	127
  5847  007FB6  6E09               	movwf	nanf@u+3,c
  5848  007FB8  C006  F002         	movff	nanf@u,?_nanf
  5849  007FBC  C007  F003         	movff	nanf@u+1,?_nanf+1
  5850  007FC0  C008  F004         	movff	nanf@u+2,?_nanf+2
  5851  007FC4  C009  F005         	movff	nanf@u+3,?_nanf+3
  5852  007FC8  0012               	return		;funcret
  5853  007FCA  FFFF               	dw	65535	; errata NOP
  5854  007FCC                     __end_of_nanf:
  5855                           	opt callstack 0
  5856                           
  5857 ;; *************** function ___flge *****************
  5858 ;; Defined at:
  5859 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  5860 ;; Parameters:    Size  Location     Type
  5861 ;;  ff1             4   75[COMRAM] float 
  5862 ;;  ff2             4   79[COMRAM] float 
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;		None
  5865 ;; Return value:  Size  Location     Type
  5866 ;;		None               void
  5867 ;; Registers used:
  5868 ;;		wreg, status,2, status,0
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/0
  5871 ;;		On exit  : 0/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5874 ;;      Params:         8       0       0       0       0       0       0
  5875 ;;      Locals:         0       0       0       0       0       0       0
  5876 ;;      Temps:          4       0       0       0       0       0       0
  5877 ;;      Totals:        12       0       0       0       0       0       0
  5878 ;;Total ram usage:       12 bytes
  5879 ;; Hardware stack levels used:    1
  5880 ;; Hardware stack levels required when called:    2
  5881 ;; This function calls:
  5882 ;;		Nothing
  5883 ;; This function is called by:
  5884 ;;		_UART_SendIntToString
  5885 ;;		_powf
  5886 ;;		_sqrtf
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           	psect	text6
  5891  00027A                     __ptext6:
  5892                           	opt callstack 0
  5893  00027A                     ___flge:
  5894                           	opt callstack 0
  5895  00027A  FFFF               	dw	65535	; assembler added errata NOP
  5896                           
  5897                           ;incstack = 0
  5898  00027C  0E00               	movlw	0
  5899  00027E  144C               	andwf	___flge@ff1,w,c
  5900  000280  6E54               	movwf	??___flge& (0+255),c
  5901  000282  0E00               	movlw	0
  5902  000284  144D               	andwf	___flge@ff1+1,w,c
  5903  000286  6E55               	movwf	(??___flge+1)& (0+255),c
  5904  000288  0E80               	movlw	128
  5905  00028A  144E               	andwf	___flge@ff1+2,w,c
  5906  00028C  6E56               	movwf	(??___flge+2)& (0+255),c
  5907  00028E  0E7F               	movlw	127
  5908  000290  144F               	andwf	___flge@ff1+3,w,c
  5909  000292  6E57               	movwf	(??___flge+3)& (0+255),c
  5910  000294  5054               	movf	??___flge,w,c
  5911  000296  1055               	iorwf	??___flge+1,w,c
  5912  000298  1056               	iorwf	??___flge+2,w,c
  5913  00029A  1057               	iorwf	??___flge+3,w,c
  5914  00029C  A4D8               	btfss	status,2,c
  5915  00029E  D008               	goto	l2718
  5916  0002A0  0E00               	movlw	0
  5917  0002A2  6E4C               	movwf	___flge@ff1,c
  5918  0002A4  0E00               	movlw	0
  5919  0002A6  6E4D               	movwf	___flge@ff1+1,c
  5920  0002A8  0E00               	movlw	0
  5921  0002AA  6E4E               	movwf	___flge@ff1+2,c
  5922  0002AC  0E00               	movlw	0
  5923  0002AE  6E4F               	movwf	___flge@ff1+3,c
  5924  0002B0                     l2718:
  5925  0002B0  FFFF               	dw	65535	; assembler added errata NOP
  5926  0002B2  0E00               	movlw	0
  5927  0002B4  1450               	andwf	___flge@ff2,w,c
  5928  0002B6  6E54               	movwf	??___flge& (0+255),c
  5929  0002B8  0E00               	movlw	0
  5930  0002BA  1451               	andwf	___flge@ff2+1,w,c
  5931  0002BC  6E55               	movwf	(??___flge+1)& (0+255),c
  5932  0002BE  0E80               	movlw	128
  5933  0002C0  1452               	andwf	___flge@ff2+2,w,c
  5934  0002C2  6E56               	movwf	(??___flge+2)& (0+255),c
  5935  0002C4  0E7F               	movlw	127
  5936  0002C6  1453               	andwf	___flge@ff2+3,w,c
  5937  0002C8  6E57               	movwf	(??___flge+3)& (0+255),c
  5938  0002CA  5054               	movf	??___flge,w,c
  5939  0002CC  1055               	iorwf	??___flge+1,w,c
  5940  0002CE  1056               	iorwf	??___flge+2,w,c
  5941  0002D0  1057               	iorwf	??___flge+3,w,c
  5942  0002D2  A4D8               	btfss	status,2,c
  5943  0002D4  D008               	goto	l2722
  5944  0002D6  0E00               	movlw	0
  5945  0002D8  6E50               	movwf	___flge@ff2,c
  5946  0002DA  0E00               	movlw	0
  5947  0002DC  6E51               	movwf	___flge@ff2+1,c
  5948  0002DE  0E00               	movlw	0
  5949  0002E0  6E52               	movwf	___flge@ff2+2,c
  5950  0002E2  0E00               	movlw	0
  5951  0002E4  6E53               	movwf	___flge@ff2+3,c
  5952  0002E6                     l2722:
  5953  0002E6  FFFF               	dw	65535	; assembler added errata NOP
  5954  0002E8  AE4F               	btfss	___flge@ff1+3,7,c
  5955  0002EA  D009               	goto	l2726
  5956  0002EC  6C4C               	negf	___flge@ff1,c
  5957  0002EE  1E4D               	comf	___flge@ff1+1,f,c
  5958  0002F0  B0D8               	btfsc	status,0,c
  5959  0002F2  2A4D               	incf	___flge@ff1+1,f,c
  5960  0002F4  1E4E               	comf	___flge@ff1+2,f,c
  5961  0002F6  B0D8               	btfsc	status,0,c
  5962  0002F8  2A4E               	incf	___flge@ff1+2,f,c
  5963  0002FA  0E80               	movlw	128
  5964  0002FC  564F               	subfwb	___flge@ff1+3,f,c
  5965  0002FE                     l2726:
  5966  0002FE  FFFF               	dw	65535	; assembler added errata NOP
  5967  000300  AE53               	btfss	___flge@ff2+3,7,c
  5968  000302  D009               	goto	l357
  5969  000304  6C50               	negf	___flge@ff2,c
  5970  000306  1E51               	comf	___flge@ff2+1,f,c
  5971  000308  B0D8               	btfsc	status,0,c
  5972  00030A  2A51               	incf	___flge@ff2+1,f,c
  5973  00030C  1E52               	comf	___flge@ff2+2,f,c
  5974  00030E  B0D8               	btfsc	status,0,c
  5975  000310  2A52               	incf	___flge@ff2+2,f,c
  5976  000312  0E80               	movlw	128
  5977  000314  5653               	subfwb	___flge@ff2+3,f,c
  5978  000316                     l357:
  5979  000316  FFFF               	dw	65535	; assembler added errata NOP
  5980  000318  0E00               	movlw	0
  5981  00031A  1A4C               	xorwf	___flge@ff1,f,c
  5982  00031C  0E00               	movlw	0
  5983  00031E  1A4D               	xorwf	___flge@ff1+1,f,c
  5984  000320  0E00               	movlw	0
  5985  000322  1A4E               	xorwf	___flge@ff1+2,f,c
  5986  000324  0E80               	movlw	128
  5987  000326  1A4F               	xorwf	___flge@ff1+3,f,c
  5988  000328  0E00               	movlw	0
  5989  00032A  1A50               	xorwf	___flge@ff2,f,c
  5990  00032C  0E00               	movlw	0
  5991  00032E  1A51               	xorwf	___flge@ff2+1,f,c
  5992  000330  0E00               	movlw	0
  5993  000332  1A52               	xorwf	___flge@ff2+2,f,c
  5994  000334  0E80               	movlw	128
  5995  000336  1A53               	xorwf	___flge@ff2+3,f,c
  5996  000338  5050               	movf	___flge@ff2,w,c
  5997  00033A  5C4C               	subwf	___flge@ff1,w,c
  5998  00033C  5051               	movf	___flge@ff2+1,w,c
  5999  00033E  584D               	subwfb	___flge@ff1+1,w,c
  6000  000340  5052               	movf	___flge@ff2+2,w,c
  6001  000342  584E               	subwfb	___flge@ff1+2,w,c
  6002  000344  5053               	movf	___flge@ff2+3,w,c
  6003  000346  584F               	subwfb	___flge@ff1+3,w,c
  6004  000348  B0D8               	btfsc	status,0,c
  6005  00034A  D002               	goto	l2732
  6006  00034C  90D8               	bcf	status,0,c
  6007  00034E  D002               	goto	l362
  6008  000350                     l2732:
  6009  000350  FFFF               	dw	65535	; assembler added errata NOP
  6010  000352  80D8               	bsf	status,0,c
  6011  000354                     l362:
  6012  000354  FFFF               	dw	65535	; assembler added errata NOP
  6013  000356  0012               	return		;funcret
  6014  000358  FFFF               	dw	65535	; errata NOP
  6015  00035A                     __end_of___flge:
  6016                           	opt callstack 0
  6017                           
  6018 ;; *************** function _scalbnf *****************
  6019 ;; Defined at:
  6020 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\scalbnf.c"
  6021 ;; Parameters:    Size  Location     Type
  6022 ;;  x               4   42[COMRAM] float 
  6023 ;;  n               2   46[COMRAM] int 
  6024 ;; Auto vars:     Size  Location     Type
  6025 ;;  y               4   56[COMRAM] float 
  6026 ;;  u               4   52[COMRAM] struct .
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  4   42[COMRAM] float 
  6029 ;; Registers used:
  6030 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6036 ;;      Params:         6       0       0       0       0       0       0
  6037 ;;      Locals:         8       0       0       0       0       0       0
  6038 ;;      Temps:          4       0       0       0       0       0       0
  6039 ;;      Totals:        18       0       0       0       0       0       0
  6040 ;;Total ram usage:       18 bytes
  6041 ;; Hardware stack levels used:    1
  6042 ;; Hardware stack levels required when called:    3
  6043 ;; This function calls:
  6044 ;;		___flmul
  6045 ;; This function is called by:
  6046 ;;		_powf
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050                           	psect	text7
  6051  003DBC                     __ptext7:
  6052                           	opt callstack 0
  6053  003DBC                     _scalbnf:
  6054                           	opt callstack 0
  6055  003DBC  FFFF               	dw	65535	; assembler added errata NOP
  6056                           
  6057                           ;incstack = 0
  6058  003DBE  C02B  F039         	movff	scalbnf@x,scalbnf@y
  6059  003DC2  C02C  F03A         	movff	scalbnf@x+1,scalbnf@y+1
  6060  003DC6  C02D  F03B         	movff	scalbnf@x+2,scalbnf@y+2
  6061  003DCA  C02E  F03C         	movff	scalbnf@x+3,scalbnf@y+3
  6062  003DCE  BE30               	btfsc	scalbnf@n+1,7,c
  6063  003DD0  D056               	goto	l3042
  6064  003DD2  5030               	movf	scalbnf@n+1,w,c
  6065  003DD4  E104               	bnz	u3100
  6066  003DD6  0E80               	movlw	128
  6067  003DD8  5C2F               	subwf	scalbnf@n,w,c
  6068  003DDA  A0D8               	btfss	status,0,c
  6069  003DDC  D050               	goto	l3042
  6070  003DDE                     u3100:
  6071  003DDE  C039  F012         	movff	scalbnf@y,___flmul@b
  6072  003DE2  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
  6073  003DE6  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
  6074  003DEA  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
  6075  003DEE  0E00               	movlw	0
  6076  003DF0  6E16               	movwf	___flmul@a,c
  6077  003DF2  0E00               	movlw	0
  6078  003DF4  6E17               	movwf	___flmul@a+1,c
  6079  003DF6  0E00               	movlw	0
  6080  003DF8  6E18               	movwf	___flmul@a+2,c
  6081  003DFA  0E7F               	movlw	127
  6082  003DFC  6E19               	movwf	___flmul@a+3,c
  6083  003DFE  ECB9  F018         	call	___flmul	;wreg free
  6084  003E02  C012  F039         	movff	?___flmul,scalbnf@y
  6085  003E06  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
  6086  003E0A  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
  6087  003E0E  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
  6088  003E12  0E81               	movlw	129
  6089  003E14  262F               	addwf	scalbnf@n,f,c
  6090  003E16  0EFF               	movlw	255
  6091  003E18  2230               	addwfc	scalbnf@n+1,f,c
  6092  003E1A  BE30               	btfsc	scalbnf@n+1,7,c
  6093  003E1C  D08A               	goto	l3058
  6094  003E1E  5030               	movf	scalbnf@n+1,w,c
  6095  003E20  E104               	bnz	u3110
  6096  003E22  0E80               	movlw	128
  6097  003E24  5C2F               	subwf	scalbnf@n,w,c
  6098  003E26  A0D8               	btfss	status,0,c
  6099  003E28  D084               	goto	l3058
  6100  003E2A                     u3110:
  6101  003E2A  C039  F012         	movff	scalbnf@y,___flmul@b
  6102  003E2E  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
  6103  003E32  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
  6104  003E36  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
  6105  003E3A  0E00               	movlw	0
  6106  003E3C  6E16               	movwf	___flmul@a,c
  6107  003E3E  0E00               	movlw	0
  6108  003E40  6E17               	movwf	___flmul@a+1,c
  6109  003E42  0E00               	movlw	0
  6110  003E44  6E18               	movwf	___flmul@a+2,c
  6111  003E46  0E7F               	movlw	127
  6112  003E48  6E19               	movwf	___flmul@a+3,c
  6113  003E4A  ECB9  F018         	call	___flmul	;wreg free
  6114  003E4E  C012  F039         	movff	?___flmul,scalbnf@y
  6115  003E52  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
  6116  003E56  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
  6117  003E5A  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
  6118  003E5E  0E81               	movlw	129
  6119  003E60  262F               	addwf	scalbnf@n,f,c
  6120  003E62  0EFF               	movlw	255
  6121  003E64  2230               	addwfc	scalbnf@n+1,f,c
  6122  003E66  BE30               	btfsc	scalbnf@n+1,7,c
  6123  003E68  D064               	goto	l3058
  6124  003E6A  5030               	movf	scalbnf@n+1,w,c
  6125  003E6C  E104               	bnz	u3120
  6126  003E6E  0E80               	movlw	128
  6127  003E70  5C2F               	subwf	scalbnf@n,w,c
  6128  003E72  A0D8               	btfss	status,0,c
  6129  003E74  D05E               	goto	l3058
  6130  003E76                     u3120:
  6131  003E76  0E00               	movlw	0
  6132  003E78  6E30               	movwf	scalbnf@n+1,c
  6133  003E7A  0E7F               	movlw	127
  6134  003E7C  D058               	goto	L8
  6135  003E7E                     l3042:
  6136  003E7E  FFFF               	dw	65535	; assembler added errata NOP
  6137  003E80  AE30               	btfss	scalbnf@n+1,7,c
  6138  003E82  D057               	goto	l3058
  6139  003E84  0E82               	movlw	130
  6140  003E86  5C2F               	subwf	scalbnf@n,w,c
  6141  003E88  0EFF               	movlw	255
  6142  003E8A  5830               	subwfb	scalbnf@n+1,w,c
  6143  003E8C  B0D8               	btfsc	status,0,c
  6144  003E8E  D051               	goto	l3058
  6145  003E90  C039  F012         	movff	scalbnf@y,___flmul@b
  6146  003E94  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
  6147  003E98  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
  6148  003E9C  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
  6149  003EA0  0E00               	movlw	0
  6150  003EA2  6E16               	movwf	___flmul@a,c
  6151  003EA4  0E00               	movlw	0
  6152  003EA6  6E17               	movwf	___flmul@a+1,c
  6153  003EA8  0E80               	movlw	128
  6154  003EAA  6E18               	movwf	___flmul@a+2,c
  6155  003EAC  0E0C               	movlw	12
  6156  003EAE  6E19               	movwf	___flmul@a+3,c
  6157  003EB0  ECB9  F018         	call	___flmul	;wreg free
  6158  003EB4  C012  F039         	movff	?___flmul,scalbnf@y
  6159  003EB8  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
  6160  003EBC  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
  6161  003EC0  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
  6162  003EC4  0E66               	movlw	102
  6163  003EC6  262F               	addwf	scalbnf@n,f,c
  6164  003EC8  0E00               	movlw	0
  6165  003ECA  2230               	addwfc	scalbnf@n+1,f,c
  6166  003ECC  AE30               	btfss	scalbnf@n+1,7,c
  6167  003ECE  D031               	goto	l3058
  6168  003ED0  0E82               	movlw	130
  6169  003ED2  5C2F               	subwf	scalbnf@n,w,c
  6170  003ED4  0EFF               	movlw	255
  6171  003ED6  5830               	subwfb	scalbnf@n+1,w,c
  6172  003ED8  B0D8               	btfsc	status,0,c
  6173  003EDA  D02B               	goto	l3058
  6174  003EDC  C039  F012         	movff	scalbnf@y,___flmul@b
  6175  003EE0  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
  6176  003EE4  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
  6177  003EE8  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
  6178  003EEC  0E00               	movlw	0
  6179  003EEE  6E16               	movwf	___flmul@a,c
  6180  003EF0  0E00               	movlw	0
  6181  003EF2  6E17               	movwf	___flmul@a+1,c
  6182  003EF4  0E80               	movlw	128
  6183  003EF6  6E18               	movwf	___flmul@a+2,c
  6184  003EF8  0E0C               	movlw	12
  6185  003EFA  6E19               	movwf	___flmul@a+3,c
  6186  003EFC  ECB9  F018         	call	___flmul	;wreg free
  6187  003F00  C012  F039         	movff	?___flmul,scalbnf@y
  6188  003F04  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
  6189  003F08  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
  6190  003F0C  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
  6191  003F10  0E66               	movlw	102
  6192  003F12  262F               	addwf	scalbnf@n,f,c
  6193  003F14  0E00               	movlw	0
  6194  003F16  2230               	addwfc	scalbnf@n+1,f,c
  6195  003F18  AE30               	btfss	scalbnf@n+1,7,c
  6196  003F1A  D00B               	goto	l3058
  6197  003F1C  0E82               	movlw	130
  6198  003F1E  5C2F               	subwf	scalbnf@n,w,c
  6199  003F20  0EFF               	movlw	255
  6200  003F22  5830               	subwfb	scalbnf@n+1,w,c
  6201  003F24  B0D8               	btfsc	status,0,c
  6202  003F26  D005               	goto	l3058
  6203  003F28  0EFF               	movlw	255
  6204  003F2A  6E30               	movwf	scalbnf@n+1,c
  6205  003F2C  0E82               	movlw	130
  6206  003F2E                     L8:
  6207  003F2E  FFFF               	dw	65535	; assembler added errata NOP
  6208  003F30  6E2F               	movwf	scalbnf@n,c
  6209  003F32                     l3058:
  6210  003F32  FFFF               	dw	65535	; assembler added errata NOP
  6211  003F34  0E7F               	movlw	127
  6212  003F36  242F               	addwf	scalbnf@n,w,c
  6213  003F38  6E31               	movwf	??_scalbnf& (0+255),c
  6214  003F3A  0E00               	movlw	0
  6215  003F3C  2030               	addwfc	scalbnf@n+1,w,c
  6216  003F3E  6E32               	movwf	(??_scalbnf+1)& (0+255),c
  6217  003F40  6A33               	clrf	(??_scalbnf+2)& (0+255),c
  6218  003F42  6A34               	clrf	(??_scalbnf+3)& (0+255),c
  6219  003F44  0E17               	movlw	23
  6220  003F46                     u3165:
  6221  003F46  FFFF               	dw	65535	; assembler added errata NOP
  6222  003F48  90D8               	bcf	status,0,c
  6223  003F4A  3631               	rlcf	??_scalbnf,f,c
  6224  003F4C  3632               	rlcf	??_scalbnf+1,f,c
  6225  003F4E  3633               	rlcf	??_scalbnf+2,f,c
  6226  003F50  3634               	rlcf	??_scalbnf+3,f,c
  6227  003F52  2EE8               	decfsz	wreg,f,c
  6228  003F54  D7F8               	goto	u3165
  6229  003F56  C031  F035         	movff	??_scalbnf,scalbnf@u
  6230  003F5A  C032  F036         	movff	??_scalbnf+1,scalbnf@u+1
  6231  003F5E  C033  F037         	movff	??_scalbnf+2,scalbnf@u+2
  6232  003F62  C034  F038         	movff	??_scalbnf+3,scalbnf@u+3
  6233  003F66  C035  F012         	movff	scalbnf@u,___flmul@b
  6234  003F6A  C036  F013         	movff	scalbnf@u+1,___flmul@b+1
  6235  003F6E  C037  F014         	movff	scalbnf@u+2,___flmul@b+2
  6236  003F72  C038  F015         	movff	scalbnf@u+3,___flmul@b+3
  6237  003F76  C039  F016         	movff	scalbnf@y,___flmul@a
  6238  003F7A  C03A  F017         	movff	scalbnf@y+1,___flmul@a+1
  6239  003F7E  C03B  F018         	movff	scalbnf@y+2,___flmul@a+2
  6240  003F82  C03C  F019         	movff	scalbnf@y+3,___flmul@a+3
  6241  003F86  ECB9  F018         	call	___flmul	;wreg free
  6242  003F8A  C012  F02B         	movff	?___flmul,scalbnf@x
  6243  003F8E  C013  F02C         	movff	?___flmul+1,scalbnf@x+1
  6244  003F92  C014  F02D         	movff	?___flmul+2,scalbnf@x+2
  6245  003F96  C015  F02E         	movff	?___flmul+3,scalbnf@x+3
  6246  003F9A  C02B  F02B         	movff	scalbnf@x,?_scalbnf
  6247  003F9E  C02C  F02C         	movff	scalbnf@x+1,?_scalbnf+1
  6248  003FA2  C02D  F02D         	movff	scalbnf@x+2,?_scalbnf+2
  6249  003FA6  C02E  F02E         	movff	scalbnf@x+3,?_scalbnf+3
  6250  003FAA  0012               	return		;funcret
  6251  003FAC  FFFF               	dw	65535	; errata NOP
  6252  003FAE                     __end_of_scalbnf:
  6253                           	opt callstack 0
  6254                           
  6255 ;; *************** function ___flmul *****************
  6256 ;; Defined at:
  6257 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;  b               4   17[COMRAM] float 
  6260 ;;  a               4   21[COMRAM] float 
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;  prod            4   36[COMRAM] struct .
  6263 ;;  grs             4   30[COMRAM] unsigned long 
  6264 ;;  temp            2   40[COMRAM] struct .
  6265 ;;  bexp            1   35[COMRAM] unsigned char 
  6266 ;;  aexp            1   34[COMRAM] unsigned char 
  6267 ;;  sign            1   29[COMRAM] unsigned char 
  6268 ;; Return value:  Size  Location     Type
  6269 ;;                  4   17[COMRAM] unsigned char 
  6270 ;; Registers used:
  6271 ;;		wreg, status,2, status,0, prodl, prodh
  6272 ;; Tracked objects:
  6273 ;;		On entry : 0/0
  6274 ;;		On exit  : 0/0
  6275 ;;		Unchanged: 0/0
  6276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6277 ;;      Params:         8       0       0       0       0       0       0
  6278 ;;      Locals:        13       0       0       0       0       0       0
  6279 ;;      Temps:          4       0       0       0       0       0       0
  6280 ;;      Totals:        25       0       0       0       0       0       0
  6281 ;;Total ram usage:       25 bytes
  6282 ;; Hardware stack levels used:    1
  6283 ;; Hardware stack levels required when called:    2
  6284 ;; This function calls:
  6285 ;;		Nothing
  6286 ;; This function is called by:
  6287 ;;		_UART_SendIntToString
  6288 ;;		_main
  6289 ;;		_powf
  6290 ;;		_scalbnf
  6291 ;;		_sqrtf
  6292 ;;		_UART_SendFloatToString
  6293 ;; This function uses a non-reentrant model
  6294 ;;
  6295                           
  6296                           	psect	text8
  6297  003172                     __ptext8:
  6298                           	opt callstack 0
  6299  003172                     ___flmul:
  6300                           	opt callstack 0
  6301  003172  FFFF               	dw	65535	; assembler added errata NOP
  6302                           
  6303                           ;incstack = 0
  6304  003174  5015               	movf	___flmul@b+3,w,c
  6305  003176  0B80               	andlw	128
  6306  003178  6E1E               	movwf	___flmul@sign,c
  6307  00317A  5015               	movf	___flmul@b+3,w,c
  6308  00317C  2415               	addwf	___flmul@b+3,w,c
  6309  00317E  6E24               	movwf	___flmul@bexp,c
  6310  003180  BE14               	btfsc	___flmul@b+2,7,c
  6311  003182  8024               	bsf	___flmul@bexp,0,c
  6312  003184  5024               	movf	___flmul@bexp,w,c
  6313  003186  B4D8               	btfsc	status,2,c
  6314  003188  D00E               	goto	l2598
  6315  00318A  2824               	incf	___flmul@bexp,w,c
  6316  00318C  A4D8               	btfss	status,2,c
  6317  00318E  D008               	goto	l2596
  6318  003190  0E00               	movlw	0
  6319  003192  6E12               	movwf	___flmul@b,c
  6320  003194  0E00               	movlw	0
  6321  003196  6E13               	movwf	___flmul@b+1,c
  6322  003198  0E00               	movlw	0
  6323  00319A  6E14               	movwf	___flmul@b+2,c
  6324  00319C  0E00               	movlw	0
  6325  00319E  6E15               	movwf	___flmul@b+3,c
  6326  0031A0                     l2596:
  6327  0031A0  FFFF               	dw	65535	; assembler added errata NOP
  6328  0031A2  8E14               	bsf	___flmul@b+2,7,c
  6329  0031A4  D009               	goto	l2600
  6330  0031A6                     l2598:
  6331  0031A6  FFFF               	dw	65535	; assembler added errata NOP
  6332  0031A8  0E00               	movlw	0
  6333  0031AA  6E12               	movwf	___flmul@b,c
  6334  0031AC  0E00               	movlw	0
  6335  0031AE  6E13               	movwf	___flmul@b+1,c
  6336  0031B0  0E00               	movlw	0
  6337  0031B2  6E14               	movwf	___flmul@b+2,c
  6338  0031B4  0E00               	movlw	0
  6339  0031B6  6E15               	movwf	___flmul@b+3,c
  6340  0031B8                     l2600:
  6341  0031B8  FFFF               	dw	65535	; assembler added errata NOP
  6342  0031BA  5019               	movf	___flmul@a+3,w,c
  6343  0031BC  0B80               	andlw	128
  6344  0031BE  1A1E               	xorwf	___flmul@sign,f,c
  6345  0031C0  5019               	movf	___flmul@a+3,w,c
  6346  0031C2  2419               	addwf	___flmul@a+3,w,c
  6347  0031C4  6E23               	movwf	___flmul@aexp,c
  6348  0031C6  BE18               	btfsc	___flmul@a+2,7,c
  6349  0031C8  8023               	bsf	___flmul@aexp,0,c
  6350  0031CA  5023               	movf	___flmul@aexp,w,c
  6351  0031CC  B4D8               	btfsc	status,2,c
  6352  0031CE  D00E               	goto	l2616
  6353  0031D0  2823               	incf	___flmul@aexp,w,c
  6354  0031D2  A4D8               	btfss	status,2,c
  6355  0031D4  D008               	goto	l2614
  6356  0031D6  0E00               	movlw	0
  6357  0031D8  6E16               	movwf	___flmul@a,c
  6358  0031DA  0E00               	movlw	0
  6359  0031DC  6E17               	movwf	___flmul@a+1,c
  6360  0031DE  0E00               	movlw	0
  6361  0031E0  6E18               	movwf	___flmul@a+2,c
  6362  0031E2  0E00               	movlw	0
  6363  0031E4  6E19               	movwf	___flmul@a+3,c
  6364  0031E6                     l2614:
  6365  0031E6  FFFF               	dw	65535	; assembler added errata NOP
  6366  0031E8  8E18               	bsf	___flmul@a+2,7,c
  6367  0031EA  D009               	goto	l706
  6368  0031EC                     l2616:
  6369  0031EC  FFFF               	dw	65535	; assembler added errata NOP
  6370  0031EE  0E00               	movlw	0
  6371  0031F0  6E16               	movwf	___flmul@a,c
  6372  0031F2  0E00               	movlw	0
  6373  0031F4  6E17               	movwf	___flmul@a+1,c
  6374  0031F6  0E00               	movlw	0
  6375  0031F8  6E18               	movwf	___flmul@a+2,c
  6376  0031FA  0E00               	movlw	0
  6377  0031FC  6E19               	movwf	___flmul@a+3,c
  6378  0031FE                     l706:
  6379  0031FE  FFFF               	dw	65535	; assembler added errata NOP
  6380  003200  5023               	movf	___flmul@aexp,w,c
  6381  003202  B4D8               	btfsc	status,2,c
  6382  003204  D003               	goto	u2450
  6383  003206  5024               	movf	___flmul@bexp,w,c
  6384  003208  A4D8               	btfss	status,2,c
  6385  00320A  D00A               	goto	l2624
  6386  00320C                     u2450:
  6387  00320C  FFFF               	dw	65535	; assembler added errata NOP
  6388  00320E  0E00               	movlw	0
  6389  003210  6E12               	movwf	?___flmul,c
  6390  003212  0E00               	movlw	0
  6391  003214  6E13               	movwf	?___flmul+1,c
  6392  003216  0E00               	movlw	0
  6393  003218  6E14               	movwf	?___flmul+2,c
  6394  00321A  0E00               	movlw	0
  6395  00321C  6E15               	movwf	?___flmul+3,c
  6396  00321E  D167               	goto	l710
  6397  003220                     l2624:
  6398  003220  FFFF               	dw	65535	; assembler added errata NOP
  6399  003222  5018               	movf	___flmul@a+2,w,c
  6400  003224  0212               	mulwf	___flmul@b,c
  6401  003226  CFF3 F029          	movff	prodl,___flmul@temp
  6402  00322A  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6403  00322E  5029               	movf	___flmul@temp,w,c
  6404  003230  6E1F               	movwf	___flmul@grs,c
  6405  003232  6A20               	clrf	___flmul@grs+1,c
  6406  003234  6A21               	clrf	___flmul@grs+2,c
  6407  003236  6A22               	clrf	___flmul@grs+3,c
  6408  003238  502A               	movf	___flmul@temp+1,w,c
  6409  00323A  6E25               	movwf	___flmul@prod,c
  6410  00323C  6A26               	clrf	___flmul@prod+1,c
  6411  00323E  6A27               	clrf	___flmul@prod+2,c
  6412  003240  6A28               	clrf	___flmul@prod+3,c
  6413  003242  5017               	movf	___flmul@a+1,w,c
  6414  003244  0213               	mulwf	___flmul@b+1,c
  6415  003246  CFF3 F029          	movff	prodl,___flmul@temp
  6416  00324A  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6417  00324E  5029               	movf	___flmul@temp,w,c
  6418  003250  261F               	addwf	___flmul@grs,f,c
  6419  003252  0E00               	movlw	0
  6420  003254  2220               	addwfc	___flmul@grs+1,f,c
  6421  003256  2221               	addwfc	___flmul@grs+2,f,c
  6422  003258  2222               	addwfc	___flmul@grs+3,f,c
  6423  00325A  502A               	movf	___flmul@temp+1,w,c
  6424  00325C  2625               	addwf	___flmul@prod,f,c
  6425  00325E  0E00               	movlw	0
  6426  003260  2226               	addwfc	___flmul@prod+1,f,c
  6427  003262  2227               	addwfc	___flmul@prod+2,f,c
  6428  003264  2228               	addwfc	___flmul@prod+3,f,c
  6429  003266  5016               	movf	___flmul@a,w,c
  6430  003268  0214               	mulwf	___flmul@b+2,c
  6431  00326A  CFF3 F029          	movff	prodl,___flmul@temp
  6432  00326E  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6433  003272  5029               	movf	___flmul@temp,w,c
  6434  003274  261F               	addwf	___flmul@grs,f,c
  6435  003276  0E00               	movlw	0
  6436  003278  2220               	addwfc	___flmul@grs+1,f,c
  6437  00327A  2221               	addwfc	___flmul@grs+2,f,c
  6438  00327C  2222               	addwfc	___flmul@grs+3,f,c
  6439  00327E  502A               	movf	___flmul@temp+1,w,c
  6440  003280  2625               	addwf	___flmul@prod,f,c
  6441  003282  0E00               	movlw	0
  6442  003284  2226               	addwfc	___flmul@prod+1,f,c
  6443  003286  2227               	addwfc	___flmul@prod+2,f,c
  6444  003288  2228               	addwfc	___flmul@prod+3,f,c
  6445  00328A  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  6446  00328E  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  6447  003292  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  6448  003296  6A1F               	clrf	___flmul@grs,c
  6449  003298  5016               	movf	___flmul@a,w,c
  6450  00329A  0213               	mulwf	___flmul@b+1,c
  6451  00329C  CFF3 F029          	movff	prodl,___flmul@temp
  6452  0032A0  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6453  0032A4  5029               	movf	___flmul@temp,w,c
  6454  0032A6  261F               	addwf	___flmul@grs,f,c
  6455  0032A8  502A               	movf	___flmul@temp+1,w,c
  6456  0032AA  2220               	addwfc	___flmul@grs+1,f,c
  6457  0032AC  0E00               	movlw	0
  6458  0032AE  2221               	addwfc	___flmul@grs+2,f,c
  6459  0032B0  0E00               	movlw	0
  6460  0032B2  2222               	addwfc	___flmul@grs+3,f,c
  6461  0032B4  5017               	movf	___flmul@a+1,w,c
  6462  0032B6  0212               	mulwf	___flmul@b,c
  6463  0032B8  CFF3 F029          	movff	prodl,___flmul@temp
  6464  0032BC  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6465  0032C0  5029               	movf	___flmul@temp,w,c
  6466  0032C2  261F               	addwf	___flmul@grs,f,c
  6467  0032C4  502A               	movf	___flmul@temp+1,w,c
  6468  0032C6  2220               	addwfc	___flmul@grs+1,f,c
  6469  0032C8  0E00               	movlw	0
  6470  0032CA  2221               	addwfc	___flmul@grs+2,f,c
  6471  0032CC  0E00               	movlw	0
  6472  0032CE  2222               	addwfc	___flmul@grs+3,f,c
  6473  0032D0  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  6474  0032D4  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  6475  0032D8  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  6476  0032DC  6A1F               	clrf	___flmul@grs,c
  6477  0032DE  5016               	movf	___flmul@a,w,c
  6478  0032E0  0212               	mulwf	___flmul@b,c
  6479  0032E2  CFF3 F029          	movff	prodl,___flmul@temp
  6480  0032E6  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6481  0032EA  5029               	movf	___flmul@temp,w,c
  6482  0032EC  261F               	addwf	___flmul@grs,f,c
  6483  0032EE  502A               	movf	___flmul@temp+1,w,c
  6484  0032F0  2220               	addwfc	___flmul@grs+1,f,c
  6485  0032F2  0E00               	movlw	0
  6486  0032F4  2221               	addwfc	___flmul@grs+2,f,c
  6487  0032F6  0E00               	movlw	0
  6488  0032F8  2222               	addwfc	___flmul@grs+3,f,c
  6489  0032FA  5018               	movf	___flmul@a+2,w,c
  6490  0032FC  0213               	mulwf	___flmul@b+1,c
  6491  0032FE  CFF3 F029          	movff	prodl,___flmul@temp
  6492  003302  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6493  003306  5029               	movf	___flmul@temp,w,c
  6494  003308  2625               	addwf	___flmul@prod,f,c
  6495  00330A  502A               	movf	___flmul@temp+1,w,c
  6496  00330C  2226               	addwfc	___flmul@prod+1,f,c
  6497  00330E  0E00               	movlw	0
  6498  003310  2227               	addwfc	___flmul@prod+2,f,c
  6499  003312  0E00               	movlw	0
  6500  003314  2228               	addwfc	___flmul@prod+3,f,c
  6501  003316  5017               	movf	___flmul@a+1,w,c
  6502  003318  0214               	mulwf	___flmul@b+2,c
  6503  00331A  CFF3 F029          	movff	prodl,___flmul@temp
  6504  00331E  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6505  003322  5029               	movf	___flmul@temp,w,c
  6506  003324  2625               	addwf	___flmul@prod,f,c
  6507  003326  502A               	movf	___flmul@temp+1,w,c
  6508  003328  2226               	addwfc	___flmul@prod+1,f,c
  6509  00332A  0E00               	movlw	0
  6510  00332C  2227               	addwfc	___flmul@prod+2,f,c
  6511  00332E  0E00               	movlw	0
  6512  003330  2228               	addwfc	___flmul@prod+3,f,c
  6513  003332  5018               	movf	___flmul@a+2,w,c
  6514  003334  0214               	mulwf	___flmul@b+2,c
  6515  003336  CFF3 F029          	movff	prodl,___flmul@temp
  6516  00333A  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6517  00333E  5029               	movf	___flmul@temp,w,c
  6518  003340  6E1A               	movwf	??___flmul& (0+255),c
  6519  003342  502A               	movf	___flmul@temp+1,w,c
  6520  003344  6E1B               	movwf	(??___flmul+1)& (0+255),c
  6521  003346  6A1C               	clrf	(??___flmul+2)& (0+255),c
  6522  003348  6A1D               	clrf	(??___flmul+3)& (0+255),c
  6523  00334A  C01C  F01D         	movff	??___flmul+2,??___flmul+3
  6524  00334E  C01B  F01C         	movff	??___flmul+1,??___flmul+2
  6525  003352  C01A  F01B         	movff	??___flmul,??___flmul+1
  6526  003356  6A1A               	clrf	??___flmul,c
  6527  003358  501A               	movf	??___flmul,w,c
  6528  00335A  2625               	addwf	___flmul@prod,f,c
  6529  00335C  501B               	movf	??___flmul+1,w,c
  6530  00335E  2226               	addwfc	___flmul@prod+1,f,c
  6531  003360  501C               	movf	??___flmul+2,w,c
  6532  003362  2227               	addwfc	___flmul@prod+2,f,c
  6533  003364  501D               	movf	??___flmul+3,w,c
  6534  003366  2228               	addwfc	___flmul@prod+3,f,c
  6535  003368  C01F  F01A         	movff	___flmul@grs,??___flmul
  6536  00336C  C020  F01B         	movff	___flmul@grs+1,??___flmul+1
  6537  003370  C021  F01C         	movff	___flmul@grs+2,??___flmul+2
  6538  003374  C022  F01D         	movff	___flmul@grs+3,??___flmul+3
  6539  003378  0E19               	movlw	25
  6540  00337A  D006               	goto	u2460
  6541  00337C                     u2465:
  6542  00337C  FFFF               	dw	65535	; assembler added errata NOP
  6543  00337E  90D8               	bcf	status,0,c
  6544  003380  321D               	rrcf	??___flmul+3,f,c
  6545  003382  321C               	rrcf	??___flmul+2,f,c
  6546  003384  321B               	rrcf	??___flmul+1,f,c
  6547  003386  321A               	rrcf	??___flmul,f,c
  6548  003388                     u2460:
  6549  003388  FFFF               	dw	65535	; assembler added errata NOP
  6550  00338A  2EE8               	decfsz	wreg,f,c
  6551  00338C  D7F7               	goto	u2465
  6552  00338E  501A               	movf	??___flmul,w,c
  6553  003390  2625               	addwf	___flmul@prod,f,c
  6554  003392  501B               	movf	??___flmul+1,w,c
  6555  003394  2226               	addwfc	___flmul@prod+1,f,c
  6556  003396  501C               	movf	??___flmul+2,w,c
  6557  003398  2227               	addwfc	___flmul@prod+2,f,c
  6558  00339A  501D               	movf	??___flmul+3,w,c
  6559  00339C  2228               	addwfc	___flmul@prod+3,f,c
  6560  00339E  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  6561  0033A2  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  6562  0033A6  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  6563  0033AA  6A1F               	clrf	___flmul@grs,c
  6564  0033AC  5023               	movf	___flmul@aexp,w,c
  6565  0033AE  C024  F01A         	movff	___flmul@bexp,??___flmul
  6566  0033B2  6A1B               	clrf	(??___flmul+1)& (0+255),c
  6567  0033B4  261A               	addwf	??___flmul,f,c
  6568  0033B6  0E00               	movlw	0
  6569  0033B8  221B               	addwfc	??___flmul+1,f,c
  6570  0033BA  0E82               	movlw	130
  6571  0033BC  241A               	addwf	??___flmul,w,c
  6572  0033BE  6E29               	movwf	___flmul@temp,c
  6573  0033C0  0EFF               	movlw	255
  6574  0033C2  201B               	addwfc	??___flmul+1,w,c
  6575  0033C4  6E2A               	movwf	___flmul@temp+1,c
  6576  0033C6  D010               	goto	l2672
  6577  0033C8                     l2666:
  6578  0033C8  FFFF               	dw	65535	; assembler added errata NOP
  6579  0033CA  90D8               	bcf	status,0,c
  6580  0033CC  3625               	rlcf	___flmul@prod,f,c
  6581  0033CE  3626               	rlcf	___flmul@prod+1,f,c
  6582  0033D0  3627               	rlcf	___flmul@prod+2,f,c
  6583  0033D2  3628               	rlcf	___flmul@prod+3,f,c
  6584  0033D4  BE22               	btfsc	___flmul@grs+3,7,c
  6585  0033D6  8025               	bsf	___flmul@prod,0,c
  6586  0033D8  90D8               	bcf	status,0,c
  6587  0033DA  361F               	rlcf	___flmul@grs,f,c
  6588  0033DC  3620               	rlcf	___flmul@grs+1,f,c
  6589  0033DE  3621               	rlcf	___flmul@grs+2,f,c
  6590  0033E0  3622               	rlcf	___flmul@grs+3,f,c
  6591  0033E2  0629               	decf	___flmul@temp,f,c
  6592  0033E4  A0D8               	btfss	status,0,c
  6593  0033E6  062A               	decf	___flmul@temp+1,f,c
  6594  0033E8                     l2672:
  6595  0033E8  FFFF               	dw	65535	; assembler added errata NOP
  6596  0033EA  AE27               	btfss	___flmul@prod+2,7,c
  6597  0033EC  D7ED               	goto	l2666
  6598  0033EE  0E00               	movlw	0
  6599  0033F0  6E23               	movwf	___flmul@aexp,c
  6600  0033F2  AE22               	btfss	___flmul@grs+3,7,c
  6601  0033F4  D019               	goto	l715
  6602  0033F6  0EFF               	movlw	255
  6603  0033F8  141F               	andwf	___flmul@grs,w,c
  6604  0033FA  6E1A               	movwf	??___flmul& (0+255),c
  6605  0033FC  0EFF               	movlw	255
  6606  0033FE  1420               	andwf	___flmul@grs+1,w,c
  6607  003400  6E1B               	movwf	(??___flmul+1)& (0+255),c
  6608  003402  0EFF               	movlw	255
  6609  003404  1421               	andwf	___flmul@grs+2,w,c
  6610  003406  6E1C               	movwf	(??___flmul+2)& (0+255),c
  6611  003408  0E7F               	movlw	127
  6612  00340A  1422               	andwf	___flmul@grs+3,w,c
  6613  00340C  6E1D               	movwf	(??___flmul+3)& (0+255),c
  6614  00340E  501A               	movf	??___flmul,w,c
  6615  003410  101B               	iorwf	??___flmul+1,w,c
  6616  003412  101C               	iorwf	??___flmul+2,w,c
  6617  003414  101D               	iorwf	??___flmul+3,w,c
  6618  003416  B4D8               	btfsc	status,2,c
  6619  003418  D004               	goto	l716
  6620  00341A                     u2500:
  6621  00341A  FFFF               	dw	65535	; assembler added errata NOP
  6622  00341C  0E01               	movlw	1
  6623  00341E  6E23               	movwf	___flmul@aexp,c
  6624  003420  D003               	goto	l715
  6625  003422                     l716:
  6626  003422  FFFF               	dw	65535	; assembler added errata NOP
  6627  003424  B025               	btfsc	___flmul@prod,0,c
  6628  003426  D7F9               	goto	u2500
  6629  003428                     l715:
  6630  003428  FFFF               	dw	65535	; assembler added errata NOP
  6631  00342A  5023               	movf	___flmul@aexp,w,c
  6632  00342C  B4D8               	btfsc	status,2,c
  6633  00342E  D01F               	goto	l2692
  6634  003430  0E01               	movlw	1
  6635  003432  2625               	addwf	___flmul@prod,f,c
  6636  003434  0E00               	movlw	0
  6637  003436  2226               	addwfc	___flmul@prod+1,f,c
  6638  003438  2227               	addwfc	___flmul@prod+2,f,c
  6639  00343A  2228               	addwfc	___flmul@prod+3,f,c
  6640  00343C  A028               	btfss	___flmul@prod+3,0,c
  6641  00343E  D017               	goto	l2692
  6642  003440  C025  F01A         	movff	___flmul@prod,??___flmul
  6643  003444  C026  F01B         	movff	___flmul@prod+1,??___flmul+1
  6644  003448  C027  F01C         	movff	___flmul@prod+2,??___flmul+2
  6645  00344C  C028  F01D         	movff	___flmul@prod+3,??___flmul+3
  6646  003450  341D               	rlcf	??___flmul+3,w,c
  6647  003452  321D               	rrcf	??___flmul+3,f,c
  6648  003454  321C               	rrcf	??___flmul+2,f,c
  6649  003456  321B               	rrcf	??___flmul+1,f,c
  6650  003458  321A               	rrcf	??___flmul,f,c
  6651  00345A  C01A  F025         	movff	??___flmul,___flmul@prod
  6652  00345E  C01B  F026         	movff	??___flmul+1,___flmul@prod+1
  6653  003462  C01C  F027         	movff	??___flmul+2,___flmul@prod+2
  6654  003466  C01D  F028         	movff	??___flmul+3,___flmul@prod+3
  6655  00346A  4A29               	infsnz	___flmul@temp,f,c
  6656  00346C  2A2A               	incf	___flmul@temp+1,f,c
  6657  00346E                     l2692:
  6658  00346E  FFFF               	dw	65535	; assembler added errata NOP
  6659  003470  BE2A               	btfsc	___flmul@temp+1,7,c
  6660  003472  D00D               	goto	l2696
  6661  003474  502A               	movf	___flmul@temp+1,w,c
  6662  003476  E103               	bnz	u2540
  6663  003478  2829               	incf	___flmul@temp,w,c
  6664  00347A  A0D8               	btfss	status,0,c
  6665  00347C  D008               	goto	l2696
  6666  00347E                     u2540:
  6667  00347E  0E00               	movlw	0
  6668  003480  6E25               	movwf	___flmul@prod,c
  6669  003482  0E00               	movlw	0
  6670  003484  6E26               	movwf	___flmul@prod+1,c
  6671  003486  0E80               	movlw	128
  6672  003488  6E27               	movwf	___flmul@prod+2,c
  6673  00348A  0E7F               	movlw	127
  6674  00348C  D023               	goto	L9
  6675  00348E                     l2696:
  6676  00348E  FFFF               	dw	65535	; assembler added errata NOP
  6677  003490  BE2A               	btfsc	___flmul@temp+1,7,c
  6678  003492  D005               	goto	u2550
  6679  003494  502A               	movf	___flmul@temp+1,w,c
  6680  003496  E10F               	bnz	l723
  6681  003498  0429               	decf	___flmul@temp,w,c
  6682  00349A  B0D8               	btfsc	status,0,c
  6683  00349C  D00C               	goto	l723
  6684  00349E                     u2550:
  6685  00349E  FFFF               	dw	65535	; assembler added errata NOP
  6686  0034A0  0E00               	movlw	0
  6687  0034A2  6E25               	movwf	___flmul@prod,c
  6688  0034A4  0E00               	movlw	0
  6689  0034A6  6E26               	movwf	___flmul@prod+1,c
  6690  0034A8  0E00               	movlw	0
  6691  0034AA  6E27               	movwf	___flmul@prod+2,c
  6692  0034AC  0E00               	movlw	0
  6693  0034AE  6E28               	movwf	___flmul@prod+3,c
  6694  0034B0  0E00               	movlw	0
  6695  0034B2  6E1E               	movwf	___flmul@sign,c
  6696  0034B4  D011               	goto	l2708
  6697  0034B6                     l723:
  6698  0034B6  FFFF               	dw	65535	; assembler added errata NOP
  6699  0034B8  C029  F024         	movff	___flmul@temp,___flmul@bexp
  6700  0034BC  0EFF               	movlw	255
  6701  0034BE  1625               	andwf	___flmul@prod,f,c
  6702  0034C0  0EFF               	movlw	255
  6703  0034C2  1626               	andwf	___flmul@prod+1,f,c
  6704  0034C4  0E7F               	movlw	127
  6705  0034C6  1627               	andwf	___flmul@prod+2,f,c
  6706  0034C8  0E00               	movlw	0
  6707  0034CA  1628               	andwf	___flmul@prod+3,f,c
  6708  0034CC  B024               	btfsc	___flmul@bexp,0,c
  6709  0034CE  8E27               	bsf	___flmul@prod+2,7,c
  6710  0034D0  90D8               	bcf	status,0,c
  6711  0034D2  3024               	rrcf	___flmul@bexp,w,c
  6712  0034D4                     L9:
  6713  0034D4  FFFF               	dw	65535	; assembler added errata NOP
  6714  0034D6  6E28               	movwf	___flmul@prod+3,c
  6715  0034D8                     l2708:
  6716  0034D8  FFFF               	dw	65535	; assembler added errata NOP
  6717  0034DA  501E               	movf	___flmul@sign,w,c
  6718  0034DC  1228               	iorwf	___flmul@prod+3,f,c
  6719  0034DE  C025  F012         	movff	___flmul@prod,?___flmul
  6720  0034E2  C026  F013         	movff	___flmul@prod+1,?___flmul+1
  6721  0034E6  C027  F014         	movff	___flmul@prod+2,?___flmul+2
  6722  0034EA  C028  F015         	movff	___flmul@prod+3,?___flmul+3
  6723  0034EE                     l710:
  6724  0034EE  FFFF               	dw	65535	; assembler added errata NOP
  6725  0034F0  0012               	return		;funcret
  6726  0034F2  FFFF               	dw	65535	; errata NOP
  6727  0034F4                     __end_of___flmul:
  6728                           	opt callstack 0
  6729                           
  6730 ;; *************** function _fabsf *****************
  6731 ;; Defined at:
  6732 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fabsf.c"
  6733 ;; Parameters:    Size  Location     Type
  6734 ;;  x               4    1[COMRAM] float 
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;  u               4    5[COMRAM] struct .
  6737 ;; Return value:  Size  Location     Type
  6738 ;;                  4    1[COMRAM] float 
  6739 ;; Registers used:
  6740 ;;		status,2, status,0
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/0
  6743 ;;		On exit  : 0/0
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6746 ;;      Params:         4       0       0       0       0       0       0
  6747 ;;      Locals:         4       0       0       0       0       0       0
  6748 ;;      Temps:          0       0       0       0       0       0       0
  6749 ;;      Totals:         8       0       0       0       0       0       0
  6750 ;;Total ram usage:        8 bytes
  6751 ;; Hardware stack levels used:    1
  6752 ;; Hardware stack levels required when called:    2
  6753 ;; This function calls:
  6754 ;;		Nothing
  6755 ;; This function is called by:
  6756 ;;		_powf
  6757 ;; This function uses a non-reentrant model
  6758 ;;
  6759                           
  6760                           	psect	text9
  6761  00059C                     __ptext9:
  6762                           	opt callstack 0
  6763  00059C                     _fabsf:
  6764                           	opt callstack 0
  6765  00059C  FFFF               	dw	65535	; assembler added errata NOP
  6766                           
  6767                           ;incstack = 0
  6768  00059E  C0C2  F006         	movff	fabsf@F463,fabsf@u
  6769  0005A2  C0C3  F007         	movff	fabsf@F463+1,fabsf@u+1
  6770  0005A6  C0C4  F008         	movff	fabsf@F463+2,fabsf@u+2
  6771  0005AA  C0C5  F009         	movff	fabsf@F463+3,fabsf@u+3
  6772  0005AE  C002  F006         	movff	fabsf@x,fabsf@u
  6773  0005B2  C003  F007         	movff	fabsf@x+1,fabsf@u+1
  6774  0005B6  C004  F008         	movff	fabsf@x+2,fabsf@u+2
  6775  0005BA  C005  F009         	movff	fabsf@x+3,fabsf@u+3
  6776  0005BE  9E09               	bcf	fabsf@u+3,7,c
  6777  0005C0  C006  F002         	movff	fabsf@u,?_fabsf
  6778  0005C4  C007  F003         	movff	fabsf@u+1,?_fabsf+1
  6779  0005C8  C008  F004         	movff	fabsf@u+2,?_fabsf+2
  6780  0005CC  C009  F005         	movff	fabsf@u+3,?_fabsf+3
  6781  0005D0  0012               	return		;funcret
  6782  0005D2  FFFF               	dw	65535	; errata NOP
  6783  0005D4                     __end_of_fabsf:
  6784                           	opt callstack 0
  6785                           
  6786 ;; *************** function ___xxtofl *****************
  6787 ;; Defined at:
  6788 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  6789 ;; Parameters:    Size  Location     Type
  6790 ;;  sign            1    wreg     unsigned char 
  6791 ;;  val             4    1[COMRAM] long 
  6792 ;; Auto vars:     Size  Location     Type
  6793 ;;  sign            1    9[COMRAM] unsigned char 
  6794 ;;  arg             4   11[COMRAM] unsigned long 
  6795 ;;  exp             1   10[COMRAM] unsigned char 
  6796 ;; Return value:  Size  Location     Type
  6797 ;;                  4    1[COMRAM] unsigned char 
  6798 ;; Registers used:
  6799 ;;		wreg, status,2, status,0
  6800 ;; Tracked objects:
  6801 ;;		On entry : 0/0
  6802 ;;		On exit  : 0/0
  6803 ;;		Unchanged: 0/0
  6804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6805 ;;      Params:         4       0       0       0       0       0       0
  6806 ;;      Locals:         6       0       0       0       0       0       0
  6807 ;;      Temps:          4       0       0       0       0       0       0
  6808 ;;      Totals:        14       0       0       0       0       0       0
  6809 ;;Total ram usage:       14 bytes
  6810 ;; Hardware stack levels used:    1
  6811 ;; Hardware stack levels required when called:    2
  6812 ;; This function calls:
  6813 ;;		Nothing
  6814 ;; This function is called by:
  6815 ;;		_UART_SendIntToString
  6816 ;;		_main
  6817 ;;		_powf
  6818 ;;		_UART_SendFloatToString
  6819 ;; This function uses a non-reentrant model
  6820 ;;
  6821                           
  6822                           	psect	text10
  6823  00002E                     __ptext10:
  6824                           	opt callstack 0
  6825  00002E                     ___xxtofl:
  6826                           	opt callstack 0
  6827  00002E  FFFF               	dw	65535	; assembler added errata NOP
  6828                           
  6829                           ;incstack = 0
  6830                           ;___xxtofl@sign stored from wreg
  6831  000030  6E0A               	movwf	___xxtofl@sign,c
  6832  000032  500A               	movf	___xxtofl@sign,w,c
  6833  000034  A4D8               	btfss	status,2,c
  6834  000036  AE05               	btfss	___xxtofl@val+3,7,c
  6835  000038  D01A               	goto	l747
  6836  00003A  C002  F006         	movff	___xxtofl@val,??___xxtofl
  6837  00003E  C003  F007         	movff	___xxtofl@val+1,??___xxtofl+1
  6838  000042  C004  F008         	movff	___xxtofl@val+2,??___xxtofl+2
  6839  000046  C005  F009         	movff	___xxtofl@val+3,??___xxtofl+3
  6840  00004A  1E06               	comf	??___xxtofl,f,c
  6841  00004C  1E07               	comf	??___xxtofl+1,f,c
  6842  00004E  1E08               	comf	??___xxtofl+2,f,c
  6843  000050  1E09               	comf	??___xxtofl+3,f,c
  6844  000052  2A06               	incf	??___xxtofl,f,c
  6845  000054  0E00               	movlw	0
  6846  000056  2207               	addwfc	??___xxtofl+1,f,c
  6847  000058  2208               	addwfc	??___xxtofl+2,f,c
  6848  00005A  2209               	addwfc	??___xxtofl+3,f,c
  6849  00005C  C006  F00C         	movff	??___xxtofl,___xxtofl@arg
  6850  000060  C007  F00D         	movff	??___xxtofl+1,___xxtofl@arg+1
  6851  000064  C008  F00E         	movff	??___xxtofl+2,___xxtofl@arg+2
  6852  000068  C009  F00F         	movff	??___xxtofl+3,___xxtofl@arg+3
  6853  00006C  D009               	goto	l2900
  6854  00006E                     l747:
  6855  00006E  FFFF               	dw	65535	; assembler added errata NOP
  6856  000070  C002  F00C         	movff	___xxtofl@val,___xxtofl@arg
  6857  000074  C003  F00D         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6858  000078  C004  F00E         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6859  00007C  C005  F00F         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6860  000080                     l2900:
  6861  000080  FFFF               	dw	65535	; assembler added errata NOP
  6862  000082  5002               	movf	___xxtofl@val,w,c
  6863  000084  1003               	iorwf	___xxtofl@val+1,w,c
  6864  000086  1004               	iorwf	___xxtofl@val+2,w,c
  6865  000088  1005               	iorwf	___xxtofl@val+3,w,c
  6866  00008A  A4D8               	btfss	status,2,c
  6867  00008C  D009               	goto	l2906
  6868  00008E  0E00               	movlw	0
  6869  000090  6E02               	movwf	?___xxtofl,c
  6870  000092  0E00               	movlw	0
  6871  000094  6E03               	movwf	?___xxtofl+1,c
  6872  000096  0E00               	movlw	0
  6873  000098  6E04               	movwf	?___xxtofl+2,c
  6874  00009A  0E00               	movlw	0
  6875  00009C  6E05               	movwf	?___xxtofl+3,c
  6876  00009E  D072               	goto	l750
  6877  0000A0                     l2906:
  6878  0000A0  FFFF               	dw	65535	; assembler added errata NOP
  6879  0000A2  0E96               	movlw	150
  6880  0000A4  6E0B               	movwf	___xxtofl@exp,c
  6881  0000A6  D007               	goto	l2910
  6882  0000A8                     l2908:
  6883  0000A8  FFFF               	dw	65535	; assembler added errata NOP
  6884  0000AA  2A0B               	incf	___xxtofl@exp,f,c
  6885  0000AC  90D8               	bcf	status,0,c
  6886  0000AE  320F               	rrcf	___xxtofl@arg+3,f,c
  6887  0000B0  320E               	rrcf	___xxtofl@arg+2,f,c
  6888  0000B2  320D               	rrcf	___xxtofl@arg+1,f,c
  6889  0000B4  320C               	rrcf	___xxtofl@arg,f,c
  6890  0000B6                     l2910:
  6891  0000B6  FFFF               	dw	65535	; assembler added errata NOP
  6892  0000B8  0E00               	movlw	0
  6893  0000BA  140C               	andwf	___xxtofl@arg,w,c
  6894  0000BC  6E06               	movwf	??___xxtofl& (0+255),c
  6895  0000BE  0E00               	movlw	0
  6896  0000C0  140D               	andwf	___xxtofl@arg+1,w,c
  6897  0000C2  6E07               	movwf	(??___xxtofl+1)& (0+255),c
  6898  0000C4  0E00               	movlw	0
  6899  0000C6  140E               	andwf	___xxtofl@arg+2,w,c
  6900  0000C8  6E08               	movwf	(??___xxtofl+2)& (0+255),c
  6901  0000CA  0EFE               	movlw	254
  6902  0000CC  140F               	andwf	___xxtofl@arg+3,w,c
  6903  0000CE  6E09               	movwf	(??___xxtofl+3)& (0+255),c
  6904  0000D0  5006               	movf	??___xxtofl,w,c
  6905  0000D2  1007               	iorwf	??___xxtofl+1,w,c
  6906  0000D4  1008               	iorwf	??___xxtofl+2,w,c
  6907  0000D6  1009               	iorwf	??___xxtofl+3,w,c
  6908  0000D8  B4D8               	btfsc	status,2,c
  6909  0000DA  D00E               	goto	l754
  6910  0000DC  D7E5               	goto	l2908
  6911  0000DE                     l2912:
  6912  0000DE  FFFF               	dw	65535	; assembler added errata NOP
  6913  0000E0  2A0B               	incf	___xxtofl@exp,f,c
  6914  0000E2  0E01               	movlw	1
  6915  0000E4  260C               	addwf	___xxtofl@arg,f,c
  6916  0000E6  0E00               	movlw	0
  6917  0000E8  220D               	addwfc	___xxtofl@arg+1,f,c
  6918  0000EA  220E               	addwfc	___xxtofl@arg+2,f,c
  6919  0000EC  220F               	addwfc	___xxtofl@arg+3,f,c
  6920  0000EE  90D8               	bcf	status,0,c
  6921  0000F0  320F               	rrcf	___xxtofl@arg+3,f,c
  6922  0000F2  320E               	rrcf	___xxtofl@arg+2,f,c
  6923  0000F4  320D               	rrcf	___xxtofl@arg+1,f,c
  6924  0000F6  320C               	rrcf	___xxtofl@arg,f,c
  6925  0000F8                     l754:
  6926  0000F8  FFFF               	dw	65535	; assembler added errata NOP
  6927  0000FA  0E00               	movlw	0
  6928  0000FC  140C               	andwf	___xxtofl@arg,w,c
  6929  0000FE  6E06               	movwf	??___xxtofl& (0+255),c
  6930  000100  0E00               	movlw	0
  6931  000102  140D               	andwf	___xxtofl@arg+1,w,c
  6932  000104  6E07               	movwf	(??___xxtofl+1)& (0+255),c
  6933  000106  0E00               	movlw	0
  6934  000108  140E               	andwf	___xxtofl@arg+2,w,c
  6935  00010A  6E08               	movwf	(??___xxtofl+2)& (0+255),c
  6936  00010C  0EFF               	movlw	255
  6937  00010E  140F               	andwf	___xxtofl@arg+3,w,c
  6938  000110  6E09               	movwf	(??___xxtofl+3)& (0+255),c
  6939  000112  5006               	movf	??___xxtofl,w,c
  6940  000114  1007               	iorwf	??___xxtofl+1,w,c
  6941  000116  1008               	iorwf	??___xxtofl+2,w,c
  6942  000118  1009               	iorwf	??___xxtofl+3,w,c
  6943  00011A  B4D8               	btfsc	status,2,c
  6944  00011C  D008               	goto	l2920
  6945  00011E  D7DF               	goto	l2912
  6946  000120                     l2918:
  6947  000120  FFFF               	dw	65535	; assembler added errata NOP
  6948  000122  060B               	decf	___xxtofl@exp,f,c
  6949  000124  90D8               	bcf	status,0,c
  6950  000126  360C               	rlcf	___xxtofl@arg,f,c
  6951  000128  360D               	rlcf	___xxtofl@arg+1,f,c
  6952  00012A  360E               	rlcf	___xxtofl@arg+2,f,c
  6953  00012C  360F               	rlcf	___xxtofl@arg+3,f,c
  6954  00012E                     l2920:
  6955  00012E  FFFF               	dw	65535	; assembler added errata NOP
  6956  000130  BE0E               	btfsc	___xxtofl@arg+2,7,c
  6957  000132  D003               	goto	u2920
  6958  000134  0E02               	movlw	2
  6959  000136  600B               	cpfslt	___xxtofl@exp,c
  6960  000138  D7F3               	goto	l2918
  6961  00013A                     u2920:
  6962  00013A  FFFF               	dw	65535	; assembler added errata NOP
  6963  00013C  A00B               	btfss	___xxtofl@exp,0,c
  6964  00013E  9E0E               	bcf	___xxtofl@arg+2,7,c
  6965  000140  90D8               	bcf	status,0,c
  6966  000142  320B               	rrcf	___xxtofl@exp,f,c
  6967  000144  C00B  F006         	movff	___xxtofl@exp,??___xxtofl
  6968  000148  6A07               	clrf	(??___xxtofl+1)& (0+255),c
  6969  00014A  6A08               	clrf	(??___xxtofl+2)& (0+255),c
  6970  00014C  6A09               	clrf	(??___xxtofl+3)& (0+255),c
  6971  00014E  C006  F009         	movff	??___xxtofl,??___xxtofl+3
  6972  000152  6A08               	clrf	??___xxtofl+2,c
  6973  000154  6A07               	clrf	??___xxtofl+1,c
  6974  000156  6A06               	clrf	??___xxtofl,c
  6975  000158  5006               	movf	??___xxtofl,w,c
  6976  00015A  120C               	iorwf	___xxtofl@arg,f,c
  6977  00015C  5007               	movf	??___xxtofl+1,w,c
  6978  00015E  120D               	iorwf	___xxtofl@arg+1,f,c
  6979  000160  5008               	movf	??___xxtofl+2,w,c
  6980  000162  120E               	iorwf	___xxtofl@arg+2,f,c
  6981  000164  5009               	movf	??___xxtofl+3,w,c
  6982  000166  120F               	iorwf	___xxtofl@arg+3,f,c
  6983  000168  500A               	movf	___xxtofl@sign,w,c
  6984  00016A  A4D8               	btfss	status,2,c
  6985  00016C  AE05               	btfss	___xxtofl@val+3,7,c
  6986  00016E  D001               	goto	l2936
  6987  000170  8E0F               	bsf	___xxtofl@arg+3,7,c
  6988  000172                     l2936:
  6989  000172  FFFF               	dw	65535	; assembler added errata NOP
  6990  000174  C00C  F002         	movff	___xxtofl@arg,?___xxtofl
  6991  000178  C00D  F003         	movff	___xxtofl@arg+1,?___xxtofl+1
  6992  00017C  C00E  F004         	movff	___xxtofl@arg+2,?___xxtofl+2
  6993  000180  C00F  F005         	movff	___xxtofl@arg+3,?___xxtofl+3
  6994  000184                     l750:
  6995  000184  FFFF               	dw	65535	; assembler added errata NOP
  6996  000186  0012               	return		;funcret
  6997  000188  FFFF               	dw	65535	; errata NOP
  6998  00018A                     __end_of___xxtofl:
  6999                           	opt callstack 0
  7000                           
  7001 ;; *************** function ___flsub *****************
  7002 ;; Defined at:
  7003 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;  b               4   42[COMRAM] unsigned char 
  7006 ;;  a               4   46[COMRAM] unsigned char 
  7007 ;; Auto vars:     Size  Location     Type
  7008 ;;		None
  7009 ;; Return value:  Size  Location     Type
  7010 ;;                  4   42[COMRAM] unsigned char 
  7011 ;; Registers used:
  7012 ;;		wreg, status,2, status,0, cstack
  7013 ;; Tracked objects:
  7014 ;;		On entry : 0/0
  7015 ;;		On exit  : 0/0
  7016 ;;		Unchanged: 0/0
  7017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7018 ;;      Params:         8       0       0       0       0       0       0
  7019 ;;      Locals:         0       0       0       0       0       0       0
  7020 ;;      Temps:          0       0       0       0       0       0       0
  7021 ;;      Totals:         8       0       0       0       0       0       0
  7022 ;;Total ram usage:        8 bytes
  7023 ;; Hardware stack levels used:    1
  7024 ;; Hardware stack levels required when called:    3
  7025 ;; This function calls:
  7026 ;;		___fladd
  7027 ;; This function is called by:
  7028 ;;		_UART_SendIntToString
  7029 ;;		_powf
  7030 ;;		_UART_SendFloatToString
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           	psect	text11
  7035  003FAE                     __ptext11:
  7036                           	opt callstack 0
  7037  003FAE                     ___flsub:
  7038                           	opt callstack 0
  7039  003FAE  FFFF               	dw	65535	; assembler added errata NOP
  7040                           
  7041                           ;incstack = 0
  7042  003FB0  0E00               	movlw	0
  7043  003FB2  1A2F               	xorwf	___flsub@a,f,c
  7044  003FB4  0E00               	movlw	0
  7045  003FB6  1A30               	xorwf	___flsub@a+1,f,c
  7046  003FB8  0E00               	movlw	0
  7047  003FBA  1A31               	xorwf	___flsub@a+2,f,c
  7048  003FBC  0E80               	movlw	128
  7049  003FBE  1A32               	xorwf	___flsub@a+3,f,c
  7050  003FC0  C02B  F002         	movff	___flsub@b,___fladd@b
  7051  003FC4  C02C  F003         	movff	___flsub@b+1,___fladd@b+1
  7052  003FC8  C02D  F004         	movff	___flsub@b+2,___fladd@b+2
  7053  003FCC  C02E  F005         	movff	___flsub@b+3,___fladd@b+3
  7054  003FD0  C02F  F006         	movff	___flsub@a,___fladd@a
  7055  003FD4  C030  F007         	movff	___flsub@a+1,___fladd@a+1
  7056  003FD8  C031  F008         	movff	___flsub@a+2,___fladd@a+2
  7057  003FDC  C032  F009         	movff	___flsub@a+3,___fladd@a+3
  7058  003FE0  EC7A  F01A         	call	___fladd	;wreg free
  7059  003FE4  C002  F02B         	movff	?___fladd,?___flsub
  7060  003FE8  C003  F02C         	movff	?___fladd+1,?___flsub+1
  7061  003FEC  C004  F02D         	movff	?___fladd+2,?___flsub+2
  7062  003FF0  C005  F02E         	movff	?___fladd+3,?___flsub+3
  7063  003FF4  0012               	return		;funcret
  7064  003FF6  FFFF               	dw	65535	; errata NOP
  7065  003FF8                     __end_of___flsub:
  7066                           	opt callstack 0
  7067                           
  7068 ;; *************** function ___fladd *****************
  7069 ;; Defined at:
  7070 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;  b               4    1[COMRAM] unsigned char 
  7073 ;;  a               4    5[COMRAM] unsigned char 
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;  grs             1   16[COMRAM] unsigned char 
  7076 ;;  bexp            1   15[COMRAM] unsigned char 
  7077 ;;  aexp            1   14[COMRAM] unsigned char 
  7078 ;;  signs           1   13[COMRAM] unsigned char 
  7079 ;; Return value:  Size  Location     Type
  7080 ;;                  4    1[COMRAM] unsigned char 
  7081 ;; Registers used:
  7082 ;;		wreg, status,2, status,0
  7083 ;; Tracked objects:
  7084 ;;		On entry : 0/0
  7085 ;;		On exit  : 0/0
  7086 ;;		Unchanged: 0/0
  7087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7088 ;;      Params:         8       0       0       0       0       0       0
  7089 ;;      Locals:         4       0       0       0       0       0       0
  7090 ;;      Temps:          4       0       0       0       0       0       0
  7091 ;;      Totals:        16       0       0       0       0       0       0
  7092 ;;Total ram usage:       16 bytes
  7093 ;; Hardware stack levels used:    1
  7094 ;; Hardware stack levels required when called:    2
  7095 ;; This function calls:
  7096 ;;		Nothing
  7097 ;; This function is called by:
  7098 ;;		___flsub
  7099 ;;		_powf
  7100 ;;		_sqrtf
  7101 ;; This function uses a non-reentrant model
  7102 ;;
  7103                           
  7104                           	psect	text12
  7105  0034F4                     __ptext12:
  7106                           	opt callstack 0
  7107  0034F4                     ___fladd:
  7108                           	opt callstack 0
  7109  0034F4  FFFF               	dw	65535	; assembler added errata NOP
  7110                           
  7111                           ;incstack = 0
  7112  0034F6  5005               	movf	___fladd@b+3,w,c
  7113  0034F8  0B80               	andlw	128
  7114  0034FA  6E0E               	movwf	___fladd@signs,c
  7115  0034FC  5005               	movf	___fladd@b+3,w,c
  7116  0034FE  2405               	addwf	___fladd@b+3,w,c
  7117  003500  6E10               	movwf	___fladd@bexp,c
  7118  003502  BE04               	btfsc	___fladd@b+2,7,c
  7119  003504  8010               	bsf	___fladd@bexp,0,c
  7120  003506  5010               	movf	___fladd@bexp,w,c
  7121  003508  B4D8               	btfsc	status,2,c
  7122  00350A  D00E               	goto	l2398
  7123  00350C  2810               	incf	___fladd@bexp,w,c
  7124  00350E  A4D8               	btfss	status,2,c
  7125  003510  D008               	goto	l2394
  7126  003512  0E00               	movlw	0
  7127  003514  6E02               	movwf	___fladd@b,c
  7128  003516  0E00               	movlw	0
  7129  003518  6E03               	movwf	___fladd@b+1,c
  7130  00351A  0E00               	movlw	0
  7131  00351C  6E04               	movwf	___fladd@b+2,c
  7132  00351E  0E00               	movlw	0
  7133  003520  6E05               	movwf	___fladd@b+3,c
  7134  003522                     l2394:
  7135  003522  FFFF               	dw	65535	; assembler added errata NOP
  7136  003524  8E04               	bsf	___fladd@b+2,7,c
  7137  003526  D007               	goto	L10
  7138  003528                     l2398:
  7139  003528  FFFF               	dw	65535	; assembler added errata NOP
  7140  00352A  0E00               	movlw	0
  7141  00352C  6E02               	movwf	___fladd@b,c
  7142  00352E  0E00               	movlw	0
  7143  003530  6E03               	movwf	___fladd@b+1,c
  7144  003532  0E00               	movlw	0
  7145  003534  6E04               	movwf	___fladd@b+2,c
  7146  003536                     L10:
  7147  003536  FFFF               	dw	65535	; assembler added errata NOP
  7148  003538  0E00               	movlw	0
  7149  00353A  6E05               	movwf	___fladd@b+3,c
  7150  00353C  5009               	movf	___fladd@a+3,w,c
  7151  00353E  0B80               	andlw	128
  7152  003540  6E0F               	movwf	___fladd@aexp,c
  7153  003542  500E               	movf	___fladd@signs,w,c
  7154  003544  180F               	xorwf	___fladd@aexp,w,c
  7155  003546  A4D8               	btfss	status,2,c
  7156  003548  8C0E               	bsf	___fladd@signs,6,c
  7157  00354A  5009               	movf	___fladd@a+3,w,c
  7158  00354C  2409               	addwf	___fladd@a+3,w,c
  7159  00354E  6E0F               	movwf	___fladd@aexp,c
  7160  003550  BE08               	btfsc	___fladd@a+2,7,c
  7161  003552  800F               	bsf	___fladd@aexp,0,c
  7162  003554  500F               	movf	___fladd@aexp,w,c
  7163  003556  B4D8               	btfsc	status,2,c
  7164  003558  D00E               	goto	l2422
  7165  00355A  280F               	incf	___fladd@aexp,w,c
  7166  00355C  A4D8               	btfss	status,2,c
  7167  00355E  D008               	goto	l2418
  7168  003560  0E00               	movlw	0
  7169  003562  6E06               	movwf	___fladd@a,c
  7170  003564  0E00               	movlw	0
  7171  003566  6E07               	movwf	___fladd@a+1,c
  7172  003568  0E00               	movlw	0
  7173  00356A  6E08               	movwf	___fladd@a+2,c
  7174  00356C  0E00               	movlw	0
  7175  00356E  6E09               	movwf	___fladd@a+3,c
  7176  003570                     l2418:
  7177  003570  FFFF               	dw	65535	; assembler added errata NOP
  7178  003572  8E08               	bsf	___fladd@a+2,7,c
  7179  003574  D007               	goto	L11
  7180  003576                     l2422:
  7181  003576  FFFF               	dw	65535	; assembler added errata NOP
  7182  003578  0E00               	movlw	0
  7183  00357A  6E06               	movwf	___fladd@a,c
  7184  00357C  0E00               	movlw	0
  7185  00357E  6E07               	movwf	___fladd@a+1,c
  7186  003580  0E00               	movlw	0
  7187  003582  6E08               	movwf	___fladd@a+2,c
  7188  003584                     L11:
  7189  003584  FFFF               	dw	65535	; assembler added errata NOP
  7190  003586  0E00               	movlw	0
  7191  003588  6E09               	movwf	___fladd@a+3,c
  7192  00358A  5010               	movf	___fladd@bexp,w,c
  7193  00358C  5C0F               	subwf	___fladd@aexp,w,c
  7194  00358E  B0D8               	btfsc	status,0,c
  7195  003590  D023               	goto	l2460
  7196  003592  AC0E               	btfss	___fladd@signs,6,c
  7197  003594  D002               	goto	l2430
  7198  003596  0E80               	movlw	128
  7199  003598  1A0E               	xorwf	___fladd@signs,f,c
  7200  00359A                     l2430:
  7201  00359A  FFFF               	dw	65535	; assembler added errata NOP
  7202  00359C  C010  F011         	movff	___fladd@bexp,___fladd@grs
  7203  0035A0  C00F  F010         	movff	___fladd@aexp,___fladd@bexp
  7204  0035A4  C011  F00F         	movff	___fladd@grs,___fladd@aexp
  7205  0035A8  C002  F011         	movff	___fladd@b,___fladd@grs
  7206  0035AC  C006  F002         	movff	___fladd@a,___fladd@b
  7207  0035B0  C011  F006         	movff	___fladd@grs,___fladd@a
  7208  0035B4  C003  F011         	movff	___fladd@b+1,___fladd@grs
  7209  0035B8  C007  F003         	movff	___fladd@a+1,___fladd@b+1
  7210  0035BC  C011  F007         	movff	___fladd@grs,___fladd@a+1
  7211  0035C0  C004  F011         	movff	___fladd@b+2,___fladd@grs
  7212  0035C4  C008  F004         	movff	___fladd@a+2,___fladd@b+2
  7213  0035C8  C011  F008         	movff	___fladd@grs,___fladd@a+2
  7214  0035CC  C005  F011         	movff	___fladd@b+3,___fladd@grs
  7215  0035D0  C009  F005         	movff	___fladd@a+3,___fladd@b+3
  7216  0035D4  C011  F009         	movff	___fladd@grs,___fladd@a+3
  7217  0035D8                     l2460:
  7218  0035D8  FFFF               	dw	65535	; assembler added errata NOP
  7219  0035DA  0E00               	movlw	0
  7220  0035DC  6E11               	movwf	___fladd@grs,c
  7221  0035DE  5010               	movf	___fladd@bexp,w,c
  7222  0035E0  C00F  F00A         	movff	___fladd@aexp,??___fladd
  7223  0035E4  6A0B               	clrf	(??___fladd+1)& (0+255),c
  7224  0035E6  5E0A               	subwf	??___fladd,f,c
  7225  0035E8  0E00               	movlw	0
  7226  0035EA  5A0B               	subwfb	??___fladd+1,f,c
  7227  0035EC  BE0B               	btfsc	??___fladd+1,7,c
  7228  0035EE  D031               	goto	l621
  7229  0035F0  500B               	movf	??___fladd+1,w,c
  7230  0035F2  E104               	bnz	u2080
  7231  0035F4  0E1A               	movlw	26
  7232  0035F6  5C0A               	subwf	??___fladd,w,c
  7233  0035F8  A0D8               	btfss	status,0,c
  7234  0035FA  D02B               	goto	l621
  7235  0035FC                     u2080:
  7236  0035FC  5002               	movf	___fladd@b,w,c
  7237  0035FE  1003               	iorwf	___fladd@b+1,w,c
  7238  003600  1004               	iorwf	___fladd@b+2,w,c
  7239  003602  1005               	iorwf	___fladd@b+3,w,c
  7240  003604  B4D8               	btfsc	status,2,c
  7241  003606  D002               	goto	u2090
  7242  003608  0E01               	movlw	1
  7243  00360A  D002               	goto	u2100
  7244  00360C                     u2090:
  7245  00360C  FFFF               	dw	65535	; assembler added errata NOP
  7246  00360E  0E00               	movlw	0
  7247  003610                     u2100:
  7248  003610  FFFF               	dw	65535	; assembler added errata NOP
  7249  003612  6E11               	movwf	___fladd@grs,c
  7250  003614  0E00               	movlw	0
  7251  003616  6E02               	movwf	___fladd@b,c
  7252  003618  0E00               	movlw	0
  7253  00361A  6E03               	movwf	___fladd@b+1,c
  7254  00361C  0E00               	movlw	0
  7255  00361E  6E04               	movwf	___fladd@b+2,c
  7256  003620  0E00               	movlw	0
  7257  003622  6E05               	movwf	___fladd@b+3,c
  7258  003624  C00F  F010         	movff	___fladd@aexp,___fladd@bexp
  7259  003628  D019               	goto	u2130
  7260  00362A                     l622:
  7261  00362A  FFFF               	dw	65535	; assembler added errata NOP
  7262  00362C  A011               	btfss	___fladd@grs,0,c
  7263  00362E  D005               	goto	l2472
  7264  003630  90D8               	bcf	status,0,c
  7265  003632  3011               	rrcf	___fladd@grs,w,c
  7266  003634  0901               	iorlw	1
  7267  003636  6E11               	movwf	___fladd@grs,c
  7268  003638  D003               	goto	l2474
  7269  00363A                     l2472:
  7270  00363A  FFFF               	dw	65535	; assembler added errata NOP
  7271  00363C  90D8               	bcf	status,0,c
  7272  00363E  3211               	rrcf	___fladd@grs,f,c
  7273  003640                     l2474:
  7274  003640  FFFF               	dw	65535	; assembler added errata NOP
  7275  003642  B002               	btfsc	___fladd@b,0,c
  7276  003644  8E11               	bsf	___fladd@grs,7,c
  7277  003646  3405               	rlcf	___fladd@b+3,w,c
  7278  003648  3205               	rrcf	___fladd@b+3,f,c
  7279  00364A  3204               	rrcf	___fladd@b+2,f,c
  7280  00364C  3203               	rrcf	___fladd@b+1,f,c
  7281  00364E  3202               	rrcf	___fladd@b,f,c
  7282  003650  2A10               	incf	___fladd@bexp,f,c
  7283  003652                     l621:
  7284  003652  FFFF               	dw	65535	; assembler added errata NOP
  7285  003654  500F               	movf	___fladd@aexp,w,c
  7286  003656  5C10               	subwf	___fladd@bexp,w,c
  7287  003658  A0D8               	btfss	status,0,c
  7288  00365A  D7E7               	goto	l622
  7289  00365C                     u2130:
  7290  00365C  FFFF               	dw	65535	; assembler added errata NOP
  7291  00365E  BC0E               	btfsc	___fladd@signs,6,c
  7292  003660  D021               	goto	l2506
  7293  003662  5010               	movf	___fladd@bexp,w,c
  7294  003664  B4D8               	btfsc	status,2,c
  7295  003666  D065               	goto	u2220
  7296  003668  5006               	movf	___fladd@a,w,c
  7297  00366A  2602               	addwf	___fladd@b,f,c
  7298  00366C  5007               	movf	___fladd@a+1,w,c
  7299  00366E  2203               	addwfc	___fladd@b+1,f,c
  7300  003670  5008               	movf	___fladd@a+2,w,c
  7301  003672  2204               	addwfc	___fladd@b+2,f,c
  7302  003674  5009               	movf	___fladd@a+3,w,c
  7303  003676  2205               	addwfc	___fladd@b+3,f,c
  7304  003678  A005               	btfss	___fladd@b+3,0,c
  7305  00367A  D07B               	goto	u2260
  7306  00367C  A011               	btfss	___fladd@grs,0,c
  7307  00367E  D005               	goto	l2496
  7308  003680  90D8               	bcf	status,0,c
  7309  003682  3011               	rrcf	___fladd@grs,w,c
  7310  003684  0901               	iorlw	1
  7311  003686  6E11               	movwf	___fladd@grs,c
  7312  003688  D003               	goto	l2498
  7313  00368A                     l2496:
  7314  00368A  FFFF               	dw	65535	; assembler added errata NOP
  7315  00368C  90D8               	bcf	status,0,c
  7316  00368E  3211               	rrcf	___fladd@grs,f,c
  7317  003690                     l2498:
  7318  003690  FFFF               	dw	65535	; assembler added errata NOP
  7319  003692  B002               	btfsc	___fladd@b,0,c
  7320  003694  8E11               	bsf	___fladd@grs,7,c
  7321  003696  3405               	rlcf	___fladd@b+3,w,c
  7322  003698  3205               	rrcf	___fladd@b+3,f,c
  7323  00369A  3204               	rrcf	___fladd@b+2,f,c
  7324  00369C  3203               	rrcf	___fladd@b+1,f,c
  7325  00369E  3202               	rrcf	___fladd@b,f,c
  7326  0036A0  2A10               	incf	___fladd@bexp,f,c
  7327  0036A2  D067               	goto	u2260
  7328  0036A4                     l2506:
  7329  0036A4  FFFF               	dw	65535	; assembler added errata NOP
  7330  0036A6  5006               	movf	___fladd@a,w,c
  7331  0036A8  5C02               	subwf	___fladd@b,w,c
  7332  0036AA  5007               	movf	___fladd@a+1,w,c
  7333  0036AC  5803               	subwfb	___fladd@b+1,w,c
  7334  0036AE  5008               	movf	___fladd@a+2,w,c
  7335  0036B0  5804               	subwfb	___fladd@b+2,w,c
  7336  0036B2  5005               	movf	___fladd@b+3,w,c
  7337  0036B4  0A80               	xorlw	128
  7338  0036B6  6E0A               	movwf	??___fladd& (0+255),c
  7339  0036B8  5009               	movf	___fladd@a+3,w,c
  7340  0036BA  0A80               	xorlw	128
  7341  0036BC  580A               	subwfb	??___fladd& (0+255),w,c
  7342  0036BE  B0D8               	btfsc	status,0,c
  7343  0036C0  D025               	goto	l2516
  7344  0036C2  5002               	movf	___fladd@b,w,c
  7345  0036C4  5C06               	subwf	___fladd@a,w,c
  7346  0036C6  6E0A               	movwf	??___fladd& (0+255),c
  7347  0036C8  5003               	movf	___fladd@b+1,w,c
  7348  0036CA  5807               	subwfb	___fladd@a+1,w,c
  7349  0036CC  6E0B               	movwf	(??___fladd+1)& (0+255),c
  7350  0036CE  5004               	movf	___fladd@b+2,w,c
  7351  0036D0  5808               	subwfb	___fladd@a+2,w,c
  7352  0036D2  6E0C               	movwf	(??___fladd+2)& (0+255),c
  7353  0036D4  5005               	movf	___fladd@b+3,w,c
  7354  0036D6  5809               	subwfb	___fladd@a+3,w,c
  7355  0036D8  6E0D               	movwf	(??___fladd+3)& (0+255),c
  7356  0036DA  0EFF               	movlw	255
  7357  0036DC  240A               	addwf	??___fladd,w,c
  7358  0036DE  6E02               	movwf	___fladd@b,c
  7359  0036E0  0EFF               	movlw	255
  7360  0036E2  200B               	addwfc	??___fladd+1,w,c
  7361  0036E4  6E03               	movwf	___fladd@b+1,c
  7362  0036E6  0EFF               	movlw	255
  7363  0036E8  200C               	addwfc	??___fladd+2,w,c
  7364  0036EA  6E04               	movwf	___fladd@b+2,c
  7365  0036EC  0EFF               	movlw	255
  7366  0036EE  200D               	addwfc	??___fladd+3,w,c
  7367  0036F0  6E05               	movwf	___fladd@b+3,c
  7368  0036F2  0E80               	movlw	128
  7369  0036F4  1A0E               	xorwf	___fladd@signs,f,c
  7370  0036F6  6C11               	negf	___fladd@grs,c
  7371  0036F8  5011               	movf	___fladd@grs,w,c
  7372  0036FA  A4D8               	btfss	status,2,c
  7373  0036FC  D010               	goto	l637
  7374  0036FE  0E01               	movlw	1
  7375  003700  2602               	addwf	___fladd@b,f,c
  7376  003702  0E00               	movlw	0
  7377  003704  2203               	addwfc	___fladd@b+1,f,c
  7378  003706  2204               	addwfc	___fladd@b+2,f,c
  7379  003708  2205               	addwfc	___fladd@b+3,f,c
  7380  00370A  D009               	goto	l637
  7381  00370C                     l2516:
  7382  00370C  FFFF               	dw	65535	; assembler added errata NOP
  7383  00370E  5006               	movf	___fladd@a,w,c
  7384  003710  5E02               	subwf	___fladd@b,f,c
  7385  003712  5007               	movf	___fladd@a+1,w,c
  7386  003714  5A03               	subwfb	___fladd@b+1,f,c
  7387  003716  5008               	movf	___fladd@a+2,w,c
  7388  003718  5A04               	subwfb	___fladd@b+2,f,c
  7389  00371A  5009               	movf	___fladd@a+3,w,c
  7390  00371C  5A05               	subwfb	___fladd@b+3,f,c
  7391  00371E                     l637:
  7392  00371E  FFFF               	dw	65535	; assembler added errata NOP
  7393  003720  5002               	movf	___fladd@b,w,c
  7394  003722  1003               	iorwf	___fladd@b+1,w,c
  7395  003724  1004               	iorwf	___fladd@b+2,w,c
  7396  003726  1005               	iorwf	___fladd@b+3,w,c
  7397  003728  A4D8               	btfss	status,2,c
  7398  00372A  D020               	goto	l2540
  7399  00372C  5011               	movf	___fladd@grs,w,c
  7400  00372E  A4D8               	btfss	status,2,c
  7401  003730  D01D               	goto	l2540
  7402  003732                     u2220:
  7403  003732  FFFF               	dw	65535	; assembler added errata NOP
  7404  003734  0E00               	movlw	0
  7405  003736  6E02               	movwf	?___fladd,c
  7406  003738  0E00               	movlw	0
  7407  00373A  6E03               	movwf	?___fladd+1,c
  7408  00373C  0E00               	movlw	0
  7409  00373E  6E04               	movwf	?___fladd+2,c
  7410  003740  0E00               	movlw	0
  7411  003742  6E05               	movwf	?___fladd+3,c
  7412  003744  D076               	goto	l629
  7413  003746                     l2524:
  7414  003746  FFFF               	dw	65535	; assembler added errata NOP
  7415  003748  90D8               	bcf	status,0,c
  7416  00374A  3602               	rlcf	___fladd@b,f,c
  7417  00374C  3603               	rlcf	___fladd@b+1,f,c
  7418  00374E  3604               	rlcf	___fladd@b+2,f,c
  7419  003750  3605               	rlcf	___fladd@b+3,f,c
  7420  003752  BE11               	btfsc	___fladd@grs,7,c
  7421  003754  8002               	bsf	___fladd@b,0,c
  7422  003756  A011               	btfss	___fladd@grs,0,c
  7423  003758  D002               	goto	l2534
  7424  00375A  80D8               	bsf	status,0,c
  7425  00375C  D002               	goto	L12
  7426  00375E                     l2534:
  7427  00375E  FFFF               	dw	65535	; assembler added errata NOP
  7428  003760  90D8               	bcf	status,0,c
  7429  003762                     L12:
  7430  003762  FFFF               	dw	65535	; assembler added errata NOP
  7431  003764  3611               	rlcf	___fladd@grs,f,c
  7432  003766  5010               	movf	___fladd@bexp,w,c
  7433  003768  A4D8               	btfss	status,2,c
  7434  00376A  0610               	decf	___fladd@bexp,f,c
  7435  00376C                     l2540:
  7436  00376C  FFFF               	dw	65535	; assembler added errata NOP
  7437  00376E  AE04               	btfss	___fladd@b+2,7,c
  7438  003770  D7EA               	goto	l2524
  7439  003772                     u2260:
  7440  003772  FFFF               	dw	65535	; assembler added errata NOP
  7441  003774  0E00               	movlw	0
  7442  003776  6E0F               	movwf	___fladd@aexp,c
  7443  003778  AE11               	btfss	___fladd@grs,7,c
  7444  00377A  D00D               	goto	l646
  7445  00377C  C011  F00A         	movff	___fladd@grs,??___fladd
  7446  003780  0E7F               	movlw	127
  7447  003782  160A               	andwf	??___fladd,f,c
  7448  003784  B4D8               	btfsc	status,2,c
  7449  003786  D004               	goto	l647
  7450  003788                     u2280:
  7451  003788  FFFF               	dw	65535	; assembler added errata NOP
  7452  00378A  0E01               	movlw	1
  7453  00378C  6E0F               	movwf	___fladd@aexp,c
  7454  00378E  D003               	goto	l646
  7455  003790                     l647:
  7456  003790  FFFF               	dw	65535	; assembler added errata NOP
  7457  003792  B002               	btfsc	___fladd@b,0,c
  7458  003794  D7F9               	goto	u2280
  7459  003796                     l646:
  7460  003796  FFFF               	dw	65535	; assembler added errata NOP
  7461  003798  500F               	movf	___fladd@aexp,w,c
  7462  00379A  B4D8               	btfsc	status,2,c
  7463  00379C  D020               	goto	l2560
  7464  00379E  0E01               	movlw	1
  7465  0037A0  2602               	addwf	___fladd@b,f,c
  7466  0037A2  0E00               	movlw	0
  7467  0037A4  2203               	addwfc	___fladd@b+1,f,c
  7468  0037A6  2204               	addwfc	___fladd@b+2,f,c
  7469  0037A8  2205               	addwfc	___fladd@b+3,f,c
  7470  0037AA  A005               	btfss	___fladd@b+3,0,c
  7471  0037AC  D018               	goto	l2560
  7472  0037AE  C002  F00A         	movff	___fladd@b,??___fladd
  7473  0037B2  C003  F00B         	movff	___fladd@b+1,??___fladd+1
  7474  0037B6  C004  F00C         	movff	___fladd@b+2,??___fladd+2
  7475  0037BA  C005  F00D         	movff	___fladd@b+3,??___fladd+3
  7476  0037BE  340D               	rlcf	??___fladd+3,w,c
  7477  0037C0  320D               	rrcf	??___fladd+3,f,c
  7478  0037C2  320C               	rrcf	??___fladd+2,f,c
  7479  0037C4  320B               	rrcf	??___fladd+1,f,c
  7480  0037C6  320A               	rrcf	??___fladd,f,c
  7481  0037C8  C00A  F002         	movff	??___fladd,___fladd@b
  7482  0037CC  C00B  F003         	movff	??___fladd+1,___fladd@b+1
  7483  0037D0  C00C  F004         	movff	??___fladd+2,___fladd@b+2
  7484  0037D4  C00D  F005         	movff	??___fladd+3,___fladd@b+3
  7485  0037D8  2810               	incf	___fladd@bexp,w,c
  7486  0037DA  A4D8               	btfss	status,2,c
  7487  0037DC  2A10               	incf	___fladd@bexp,f,c
  7488  0037DE                     l2560:
  7489  0037DE  FFFF               	dw	65535	; assembler added errata NOP
  7490  0037E0  2810               	incf	___fladd@bexp,w,c
  7491  0037E2  B4D8               	btfsc	status,2,c
  7492  0037E4  D003               	goto	u2340
  7493  0037E6  5010               	movf	___fladd@bexp,w,c
  7494  0037E8  A4D8               	btfss	status,2,c
  7495  0037EA  D00E               	goto	l2568
  7496  0037EC                     u2340:
  7497  0037EC  FFFF               	dw	65535	; assembler added errata NOP
  7498  0037EE  0E00               	movlw	0
  7499  0037F0  6E02               	movwf	___fladd@b,c
  7500  0037F2  0E00               	movlw	0
  7501  0037F4  6E03               	movwf	___fladd@b+1,c
  7502  0037F6  0E00               	movlw	0
  7503  0037F8  6E04               	movwf	___fladd@b+2,c
  7504  0037FA  0E00               	movlw	0
  7505  0037FC  6E05               	movwf	___fladd@b+3,c
  7506  0037FE  5010               	movf	___fladd@bexp,w,c
  7507  003800  A4D8               	btfss	status,2,c
  7508  003802  D002               	goto	l2568
  7509  003804  0E00               	movlw	0
  7510  003806  6E0E               	movwf	___fladd@signs,c
  7511  003808                     l2568:
  7512  003808  FFFF               	dw	65535	; assembler added errata NOP
  7513  00380A  A010               	btfss	___fladd@bexp,0,c
  7514  00380C  D002               	goto	l2572
  7515  00380E  8E04               	bsf	___fladd@b+2,7,c
  7516  003810  D002               	goto	l2574
  7517  003812                     l2572:
  7518  003812  FFFF               	dw	65535	; assembler added errata NOP
  7519  003814  9E04               	bcf	___fladd@b+2,7,c
  7520  003816                     l2574:
  7521  003816  FFFF               	dw	65535	; assembler added errata NOP
  7522  003818  90D8               	bcf	status,0,c
  7523  00381A  3010               	rrcf	___fladd@bexp,w,c
  7524  00381C  6E05               	movwf	___fladd@b+3,c
  7525  00381E  BE0E               	btfsc	___fladd@signs,7,c
  7526  003820  8E05               	bsf	___fladd@b+3,7,c
  7527  003822  C002  F002         	movff	___fladd@b,?___fladd
  7528  003826  C003  F003         	movff	___fladd@b+1,?___fladd+1
  7529  00382A  C004  F004         	movff	___fladd@b+2,?___fladd+2
  7530  00382E  C005  F005         	movff	___fladd@b+3,?___fladd+3
  7531  003832                     l629:
  7532  003832  FFFF               	dw	65535	; assembler added errata NOP
  7533  003834  0012               	return		;funcret
  7534  003836  FFFF               	dw	65535	; errata NOP
  7535  003838                     __end_of___fladd:
  7536                           	opt callstack 0
  7537                           
  7538 ;; *************** function ___flneg *****************
  7539 ;; Defined at:
  7540 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  7541 ;; Parameters:    Size  Location     Type
  7542 ;;  f1              4    1[COMRAM] unsigned char 
  7543 ;; Auto vars:     Size  Location     Type
  7544 ;;		None
  7545 ;; Return value:  Size  Location     Type
  7546 ;;                  4    1[COMRAM] unsigned char 
  7547 ;; Registers used:
  7548 ;;		wreg, status,2, status,0
  7549 ;; Tracked objects:
  7550 ;;		On entry : 0/0
  7551 ;;		On exit  : 0/0
  7552 ;;		Unchanged: 0/0
  7553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7554 ;;      Params:         4       0       0       0       0       0       0
  7555 ;;      Locals:         0       0       0       0       0       0       0
  7556 ;;      Temps:          0       0       0       0       0       0       0
  7557 ;;      Totals:         4       0       0       0       0       0       0
  7558 ;;Total ram usage:        4 bytes
  7559 ;; Hardware stack levels used:    1
  7560 ;; Hardware stack levels required when called:    2
  7561 ;; This function calls:
  7562 ;;		Nothing
  7563 ;; This function is called by:
  7564 ;;		_powf
  7565 ;; This function uses a non-reentrant model
  7566 ;;
  7567                           
  7568                           	psect	text13
  7569  007FCC                     __ptext13:
  7570                           	opt callstack 0
  7571  007FCC                     ___flneg:
  7572                           	opt callstack 0
  7573  007FCC  FFFF               	dw	65535	; assembler added errata NOP
  7574                           
  7575                           ;incstack = 0
  7576  007FCE  5002               	movf	___flneg@f1,w,c
  7577  007FD0  1003               	iorwf	___flneg@f1+1,w,c
  7578  007FD2  1004               	iorwf	___flneg@f1+2,w,c
  7579  007FD4  1005               	iorwf	___flneg@f1+3,w,c
  7580  007FD6  B4D8               	btfsc	status,2,c
  7581  007FD8  D008               	goto	l2890
  7582  007FDA  0E00               	movlw	0
  7583  007FDC  1A02               	xorwf	___flneg@f1,f,c
  7584  007FDE  0E00               	movlw	0
  7585  007FE0  1A03               	xorwf	___flneg@f1+1,f,c
  7586  007FE2  0E00               	movlw	0
  7587  007FE4  1A04               	xorwf	___flneg@f1+2,f,c
  7588  007FE6  0E80               	movlw	128
  7589  007FE8  1A05               	xorwf	___flneg@f1+3,f,c
  7590  007FEA                     l2890:
  7591  007FEA  FFFF               	dw	65535	; assembler added errata NOP
  7592  007FEC  C002  F002         	movff	___flneg@f1,?___flneg
  7593  007FF0  C003  F003         	movff	___flneg@f1+1,?___flneg+1
  7594  007FF4  C004  F004         	movff	___flneg@f1+2,?___flneg+2
  7595  007FF8  C005  F005         	movff	___flneg@f1+3,?___flneg+3
  7596  007FFC  0012               	return		;funcret
  7597  007FFE  FFFF               	dw	65535	; errata NOP
  7598  008000                     __end_of___flneg:
  7599                           	opt callstack 0
  7600                           
  7601 ;; *************** function ___fldiv *****************
  7602 ;; Defined at:
  7603 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;  b               4   50[COMRAM] unsigned char 
  7606 ;;  a               4   54[COMRAM] unsigned char 
  7607 ;; Auto vars:     Size  Location     Type
  7608 ;;  grs             4   69[COMRAM] unsigned long 
  7609 ;;  rem             4   62[COMRAM] unsigned long 
  7610 ;;  new_exp         2   67[COMRAM] short 
  7611 ;;  aexp            1   74[COMRAM] unsigned char 
  7612 ;;  bexp            1   73[COMRAM] unsigned char 
  7613 ;;  sign            1   66[COMRAM] unsigned char 
  7614 ;; Return value:  Size  Location     Type
  7615 ;;                  4   50[COMRAM] unsigned char 
  7616 ;; Registers used:
  7617 ;;		wreg, status,2, status,0
  7618 ;; Tracked objects:
  7619 ;;		On entry : 0/0
  7620 ;;		On exit  : 0/0
  7621 ;;		Unchanged: 0/0
  7622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7623 ;;      Params:         8       0       0       0       0       0       0
  7624 ;;      Locals:        13       0       0       0       0       0       0
  7625 ;;      Temps:          4       0       0       0       0       0       0
  7626 ;;      Totals:        25       0       0       0       0       0       0
  7627 ;;Total ram usage:       25 bytes
  7628 ;; Hardware stack levels used:    1
  7629 ;; Hardware stack levels required when called:    2
  7630 ;; This function calls:
  7631 ;;		Nothing
  7632 ;; This function is called by:
  7633 ;;		_UART_SendIntToString
  7634 ;;		_powf
  7635 ;;		_UART_SendFloatToString
  7636 ;; This function uses a non-reentrant model
  7637 ;;
  7638                           
  7639                           	psect	text14
  7640  003AFC                     __ptext14:
  7641                           	opt callstack 0
  7642  003AFC                     ___fldiv:
  7643                           	opt callstack 0
  7644  003AFC  FFFF               	dw	65535	; assembler added errata NOP
  7645                           
  7646                           ;incstack = 0
  7647  003AFE  5036               	movf	___fldiv@b+3,w,c
  7648  003B00  0B80               	andlw	128
  7649  003B02  6E43               	movwf	___fldiv@sign,c
  7650  003B04  5036               	movf	___fldiv@b+3,w,c
  7651  003B06  2436               	addwf	___fldiv@b+3,w,c
  7652  003B08  6E4A               	movwf	___fldiv@bexp,c
  7653  003B0A  BE35               	btfsc	___fldiv@b+2,7,c
  7654  003B0C  804A               	bsf	___fldiv@bexp,0,c
  7655  003B0E  504A               	movf	___fldiv@bexp,w,c
  7656  003B10  B4D8               	btfsc	status,2,c
  7657  003B12  D00E               	goto	l2758
  7658  003B14  284A               	incf	___fldiv@bexp,w,c
  7659  003B16  A4D8               	btfss	status,2,c
  7660  003B18  D008               	goto	l2754
  7661  003B1A  0E00               	movlw	0
  7662  003B1C  6E33               	movwf	___fldiv@b,c
  7663  003B1E  0E00               	movlw	0
  7664  003B20  6E34               	movwf	___fldiv@b+1,c
  7665  003B22  0E00               	movlw	0
  7666  003B24  6E35               	movwf	___fldiv@b+2,c
  7667  003B26  0E00               	movlw	0
  7668  003B28  6E36               	movwf	___fldiv@b+3,c
  7669  003B2A                     l2754:
  7670  003B2A  FFFF               	dw	65535	; assembler added errata NOP
  7671  003B2C  8E35               	bsf	___fldiv@b+2,7,c
  7672  003B2E  D007               	goto	L13
  7673  003B30                     l2758:
  7674  003B30  FFFF               	dw	65535	; assembler added errata NOP
  7675  003B32  0E00               	movlw	0
  7676  003B34  6E33               	movwf	___fldiv@b,c
  7677  003B36  0E00               	movlw	0
  7678  003B38  6E34               	movwf	___fldiv@b+1,c
  7679  003B3A  0E00               	movlw	0
  7680  003B3C  6E35               	movwf	___fldiv@b+2,c
  7681  003B3E                     L13:
  7682  003B3E  FFFF               	dw	65535	; assembler added errata NOP
  7683  003B40  0E00               	movlw	0
  7684  003B42  6E36               	movwf	___fldiv@b+3,c
  7685  003B44  503A               	movf	___fldiv@a+3,w,c
  7686  003B46  0B80               	andlw	128
  7687  003B48  1A43               	xorwf	___fldiv@sign,f,c
  7688  003B4A  503A               	movf	___fldiv@a+3,w,c
  7689  003B4C  243A               	addwf	___fldiv@a+3,w,c
  7690  003B4E  6E4B               	movwf	___fldiv@aexp,c
  7691  003B50  BE39               	btfsc	___fldiv@a+2,7,c
  7692  003B52  804B               	bsf	___fldiv@aexp,0,c
  7693  003B54  504B               	movf	___fldiv@aexp,w,c
  7694  003B56  B4D8               	btfsc	status,2,c
  7695  003B58  D00E               	goto	l2778
  7696  003B5A  284B               	incf	___fldiv@aexp,w,c
  7697  003B5C  A4D8               	btfss	status,2,c
  7698  003B5E  D008               	goto	l2774
  7699  003B60  0E00               	movlw	0
  7700  003B62  6E37               	movwf	___fldiv@a,c
  7701  003B64  0E00               	movlw	0
  7702  003B66  6E38               	movwf	___fldiv@a+1,c
  7703  003B68  0E00               	movlw	0
  7704  003B6A  6E39               	movwf	___fldiv@a+2,c
  7705  003B6C  0E00               	movlw	0
  7706  003B6E  6E3A               	movwf	___fldiv@a+3,c
  7707  003B70                     l2774:
  7708  003B70  FFFF               	dw	65535	; assembler added errata NOP
  7709  003B72  8E39               	bsf	___fldiv@a+2,7,c
  7710  003B74  D007               	goto	L14
  7711  003B76                     l2778:
  7712  003B76  FFFF               	dw	65535	; assembler added errata NOP
  7713  003B78  0E00               	movlw	0
  7714  003B7A  6E37               	movwf	___fldiv@a,c
  7715  003B7C  0E00               	movlw	0
  7716  003B7E  6E38               	movwf	___fldiv@a+1,c
  7717  003B80  0E00               	movlw	0
  7718  003B82  6E39               	movwf	___fldiv@a+2,c
  7719  003B84                     L14:
  7720  003B84  FFFF               	dw	65535	; assembler added errata NOP
  7721  003B86  0E00               	movlw	0
  7722  003B88  6E3A               	movwf	___fldiv@a+3,c
  7723  003B8A  5037               	movf	___fldiv@a,w,c
  7724  003B8C  1038               	iorwf	___fldiv@a+1,w,c
  7725  003B8E  1039               	iorwf	___fldiv@a+2,w,c
  7726  003B90  103A               	iorwf	___fldiv@a+3,w,c
  7727  003B92  A4D8               	btfss	status,2,c
  7728  003B94  D018               	goto	l2792
  7729  003B96  0E00               	movlw	0
  7730  003B98  6E33               	movwf	___fldiv@b,c
  7731  003B9A  0E00               	movlw	0
  7732  003B9C  6E34               	movwf	___fldiv@b+1,c
  7733  003B9E  0E00               	movlw	0
  7734  003BA0  6E35               	movwf	___fldiv@b+2,c
  7735  003BA2  0E00               	movlw	0
  7736  003BA4  6E36               	movwf	___fldiv@b+3,c
  7737  003BA6  0E80               	movlw	128
  7738  003BA8  1235               	iorwf	___fldiv@b+2,f,c
  7739  003BAA  0E7F               	movlw	127
  7740  003BAC  1236               	iorwf	___fldiv@b+3,f,c
  7741  003BAE                     l2786:
  7742  003BAE  FFFF               	dw	65535	; assembler added errata NOP
  7743  003BB0  5043               	movf	___fldiv@sign,w,c
  7744  003BB2  1236               	iorwf	___fldiv@b+3,f,c
  7745  003BB4  C033  F033         	movff	___fldiv@b,?___fldiv
  7746  003BB8  C034  F034         	movff	___fldiv@b+1,?___fldiv+1
  7747  003BBC  C035  F035         	movff	___fldiv@b+2,?___fldiv+2
  7748  003BC0  C036  F036         	movff	___fldiv@b+3,?___fldiv+3
  7749  003BC4  D0F8               	goto	l674
  7750  003BC6                     l2792:
  7751  003BC6  FFFF               	dw	65535	; assembler added errata NOP
  7752  003BC8  504A               	movf	___fldiv@bexp,w,c
  7753  003BCA  A4D8               	btfss	status,2,c
  7754  003BCC  D009               	goto	l2800
  7755  003BCE  0E00               	movlw	0
  7756  003BD0  6E33               	movwf	?___fldiv,c
  7757  003BD2  0E00               	movlw	0
  7758  003BD4  6E34               	movwf	?___fldiv+1,c
  7759  003BD6  0E00               	movlw	0
  7760  003BD8  6E35               	movwf	?___fldiv+2,c
  7761  003BDA  0E00               	movlw	0
  7762  003BDC  6E36               	movwf	?___fldiv+3,c
  7763  003BDE  D0EB               	goto	l674
  7764  003BE0                     l2800:
  7765  003BE0  FFFF               	dw	65535	; assembler added errata NOP
  7766  003BE2  504B               	movf	___fldiv@aexp,w,c
  7767  003BE4  C04A  F03B         	movff	___fldiv@bexp,??___fldiv
  7768  003BE8  6A3C               	clrf	(??___fldiv+1)& (0+255),c
  7769  003BEA  5E3B               	subwf	??___fldiv,f,c
  7770  003BEC  0E00               	movlw	0
  7771  003BEE  5A3C               	subwfb	??___fldiv+1,f,c
  7772  003BF0  0E7F               	movlw	127
  7773  003BF2  243B               	addwf	??___fldiv,w,c
  7774  003BF4  6E44               	movwf	___fldiv@new_exp,c
  7775  003BF6  0E00               	movlw	0
  7776  003BF8  203C               	addwfc	??___fldiv+1,w,c
  7777  003BFA  6E45               	movwf	___fldiv@new_exp+1,c
  7778  003BFC  C033  F03F         	movff	___fldiv@b,___fldiv@rem
  7779  003C00  C034  F040         	movff	___fldiv@b+1,___fldiv@rem+1
  7780  003C04  C035  F041         	movff	___fldiv@b+2,___fldiv@rem+2
  7781  003C08  C036  F042         	movff	___fldiv@b+3,___fldiv@rem+3
  7782  003C0C  0E00               	movlw	0
  7783  003C0E  6E33               	movwf	___fldiv@b,c
  7784  003C10  0E00               	movlw	0
  7785  003C12  6E34               	movwf	___fldiv@b+1,c
  7786  003C14  0E00               	movlw	0
  7787  003C16  6E35               	movwf	___fldiv@b+2,c
  7788  003C18  0E00               	movlw	0
  7789  003C1A  6E36               	movwf	___fldiv@b+3,c
  7790  003C1C  0E00               	movlw	0
  7791  003C1E  6E46               	movwf	___fldiv@grs,c
  7792  003C20  0E00               	movlw	0
  7793  003C22  6E47               	movwf	___fldiv@grs+1,c
  7794  003C24  0E00               	movlw	0
  7795  003C26  6E48               	movwf	___fldiv@grs+2,c
  7796  003C28  0E00               	movlw	0
  7797  003C2A  6E49               	movwf	___fldiv@grs+3,c
  7798  003C2C  0E00               	movlw	0
  7799  003C2E  6E4B               	movwf	___fldiv@aexp,c
  7800  003C30  D02B               	goto	l676
  7801  003C32                     l2810:
  7802  003C32  FFFF               	dw	65535	; assembler added errata NOP
  7803  003C34  504B               	movf	___fldiv@aexp,w,c
  7804  003C36  B4D8               	btfsc	status,2,c
  7805  003C38  D011               	goto	l2818
  7806  003C3A  90D8               	bcf	status,0,c
  7807  003C3C  363F               	rlcf	___fldiv@rem,f,c
  7808  003C3E  3640               	rlcf	___fldiv@rem+1,f,c
  7809  003C40  3641               	rlcf	___fldiv@rem+2,f,c
  7810  003C42  3642               	rlcf	___fldiv@rem+3,f,c
  7811  003C44  90D8               	bcf	status,0,c
  7812  003C46  3633               	rlcf	___fldiv@b,f,c
  7813  003C48  3634               	rlcf	___fldiv@b+1,f,c
  7814  003C4A  3635               	rlcf	___fldiv@b+2,f,c
  7815  003C4C  3636               	rlcf	___fldiv@b+3,f,c
  7816  003C4E  BE49               	btfsc	___fldiv@grs+3,7,c
  7817  003C50  8033               	bsf	___fldiv@b,0,c
  7818  003C52  90D8               	bcf	status,0,c
  7819  003C54  3646               	rlcf	___fldiv@grs,f,c
  7820  003C56  3647               	rlcf	___fldiv@grs+1,f,c
  7821  003C58  3648               	rlcf	___fldiv@grs+2,f,c
  7822  003C5A  3649               	rlcf	___fldiv@grs+3,f,c
  7823  003C5C                     l2818:
  7824  003C5C  FFFF               	dw	65535	; assembler added errata NOP
  7825  003C5E  5037               	movf	___fldiv@a,w,c
  7826  003C60  5C3F               	subwf	___fldiv@rem,w,c
  7827  003C62  5038               	movf	___fldiv@a+1,w,c
  7828  003C64  5840               	subwfb	___fldiv@rem+1,w,c
  7829  003C66  5039               	movf	___fldiv@a+2,w,c
  7830  003C68  5841               	subwfb	___fldiv@rem+2,w,c
  7831  003C6A  503A               	movf	___fldiv@a+3,w,c
  7832  003C6C  5842               	subwfb	___fldiv@rem+3,w,c
  7833  003C6E  A0D8               	btfss	status,0,c
  7834  003C70  D009               	goto	l2824
  7835  003C72  8C49               	bsf	___fldiv@grs+3,6,c
  7836  003C74  5037               	movf	___fldiv@a,w,c
  7837  003C76  5E3F               	subwf	___fldiv@rem,f,c
  7838  003C78  5038               	movf	___fldiv@a+1,w,c
  7839  003C7A  5A40               	subwfb	___fldiv@rem+1,f,c
  7840  003C7C  5039               	movf	___fldiv@a+2,w,c
  7841  003C7E  5A41               	subwfb	___fldiv@rem+2,f,c
  7842  003C80  503A               	movf	___fldiv@a+3,w,c
  7843  003C82  5A42               	subwfb	___fldiv@rem+3,f,c
  7844  003C84                     l2824:
  7845  003C84  FFFF               	dw	65535	; assembler added errata NOP
  7846  003C86  2A4B               	incf	___fldiv@aexp,f,c
  7847  003C88                     l676:
  7848  003C88  FFFF               	dw	65535	; assembler added errata NOP
  7849  003C8A  0E19               	movlw	25
  7850  003C8C  644B               	cpfsgt	___fldiv@aexp,c
  7851  003C8E  D7D1               	goto	l2810
  7852  003C90  503F               	movf	___fldiv@rem,w,c
  7853  003C92  1040               	iorwf	___fldiv@rem+1,w,c
  7854  003C94  1041               	iorwf	___fldiv@rem+2,w,c
  7855  003C96  1042               	iorwf	___fldiv@rem+3,w,c
  7856  003C98  B4D8               	btfsc	status,2,c
  7857  003C9A  D012               	goto	l2836
  7858  003C9C  8046               	bsf	___fldiv@grs,0,c
  7859  003C9E  D010               	goto	l2836
  7860  003CA0                     l2830:
  7861  003CA0  FFFF               	dw	65535	; assembler added errata NOP
  7862  003CA2  90D8               	bcf	status,0,c
  7863  003CA4  3633               	rlcf	___fldiv@b,f,c
  7864  003CA6  3634               	rlcf	___fldiv@b+1,f,c
  7865  003CA8  3635               	rlcf	___fldiv@b+2,f,c
  7866  003CAA  3636               	rlcf	___fldiv@b+3,f,c
  7867  003CAC  BE49               	btfsc	___fldiv@grs+3,7,c
  7868  003CAE  8033               	bsf	___fldiv@b,0,c
  7869  003CB0  90D8               	bcf	status,0,c
  7870  003CB2  3646               	rlcf	___fldiv@grs,f,c
  7871  003CB4  3647               	rlcf	___fldiv@grs+1,f,c
  7872  003CB6  3648               	rlcf	___fldiv@grs+2,f,c
  7873  003CB8  3649               	rlcf	___fldiv@grs+3,f,c
  7874  003CBA  0644               	decf	___fldiv@new_exp,f,c
  7875  003CBC  A0D8               	btfss	status,0,c
  7876  003CBE  0645               	decf	___fldiv@new_exp+1,f,c
  7877  003CC0                     l2836:
  7878  003CC0  FFFF               	dw	65535	; assembler added errata NOP
  7879  003CC2  AE35               	btfss	___fldiv@b+2,7,c
  7880  003CC4  D7ED               	goto	l2830
  7881  003CC6  0E00               	movlw	0
  7882  003CC8  6E4B               	movwf	___fldiv@aexp,c
  7883  003CCA  AE49               	btfss	___fldiv@grs+3,7,c
  7884  003CCC  D019               	goto	l687
  7885  003CCE  0EFF               	movlw	255
  7886  003CD0  1446               	andwf	___fldiv@grs,w,c
  7887  003CD2  6E3B               	movwf	??___fldiv& (0+255),c
  7888  003CD4  0EFF               	movlw	255
  7889  003CD6  1447               	andwf	___fldiv@grs+1,w,c
  7890  003CD8  6E3C               	movwf	(??___fldiv+1)& (0+255),c
  7891  003CDA  0EFF               	movlw	255
  7892  003CDC  1448               	andwf	___fldiv@grs+2,w,c
  7893  003CDE  6E3D               	movwf	(??___fldiv+2)& (0+255),c
  7894  003CE0  0E7F               	movlw	127
  7895  003CE2  1449               	andwf	___fldiv@grs+3,w,c
  7896  003CE4  6E3E               	movwf	(??___fldiv+3)& (0+255),c
  7897  003CE6  503B               	movf	??___fldiv,w,c
  7898  003CE8  103C               	iorwf	??___fldiv+1,w,c
  7899  003CEA  103D               	iorwf	??___fldiv+2,w,c
  7900  003CEC  103E               	iorwf	??___fldiv+3,w,c
  7901  003CEE  B4D8               	btfsc	status,2,c
  7902  003CF0  D004               	goto	l688
  7903  003CF2                     u2780:
  7904  003CF2  FFFF               	dw	65535	; assembler added errata NOP
  7905  003CF4  0E01               	movlw	1
  7906  003CF6  6E4B               	movwf	___fldiv@aexp,c
  7907  003CF8  D003               	goto	l687
  7908  003CFA                     l688:
  7909  003CFA  FFFF               	dw	65535	; assembler added errata NOP
  7910  003CFC  B033               	btfsc	___fldiv@b,0,c
  7911  003CFE  D7F9               	goto	u2780
  7912  003D00                     l687:
  7913  003D00  FFFF               	dw	65535	; assembler added errata NOP
  7914  003D02  504B               	movf	___fldiv@aexp,w,c
  7915  003D04  B4D8               	btfsc	status,2,c
  7916  003D06  D01F               	goto	l2856
  7917  003D08  0E01               	movlw	1
  7918  003D0A  2633               	addwf	___fldiv@b,f,c
  7919  003D0C  0E00               	movlw	0
  7920  003D0E  2234               	addwfc	___fldiv@b+1,f,c
  7921  003D10  2235               	addwfc	___fldiv@b+2,f,c
  7922  003D12  2236               	addwfc	___fldiv@b+3,f,c
  7923  003D14  A036               	btfss	___fldiv@b+3,0,c
  7924  003D16  D017               	goto	l2856
  7925  003D18  C033  F03B         	movff	___fldiv@b,??___fldiv
  7926  003D1C  C034  F03C         	movff	___fldiv@b+1,??___fldiv+1
  7927  003D20  C035  F03D         	movff	___fldiv@b+2,??___fldiv+2
  7928  003D24  C036  F03E         	movff	___fldiv@b+3,??___fldiv+3
  7929  003D28  343E               	rlcf	??___fldiv+3,w,c
  7930  003D2A  323E               	rrcf	??___fldiv+3,f,c
  7931  003D2C  323D               	rrcf	??___fldiv+2,f,c
  7932  003D2E  323C               	rrcf	??___fldiv+1,f,c
  7933  003D30  323B               	rrcf	??___fldiv,f,c
  7934  003D32  C03B  F033         	movff	??___fldiv,___fldiv@b
  7935  003D36  C03C  F034         	movff	??___fldiv+1,___fldiv@b+1
  7936  003D3A  C03D  F035         	movff	??___fldiv+2,___fldiv@b+2
  7937  003D3E  C03E  F036         	movff	??___fldiv+3,___fldiv@b+3
  7938  003D42  4A44               	infsnz	___fldiv@new_exp,f,c
  7939  003D44  2A45               	incf	___fldiv@new_exp+1,f,c
  7940  003D46                     l2856:
  7941  003D46  FFFF               	dw	65535	; assembler added errata NOP
  7942  003D48  BE45               	btfsc	___fldiv@new_exp+1,7,c
  7943  003D4A  D010               	goto	l2860
  7944  003D4C  5045               	movf	___fldiv@new_exp+1,w,c
  7945  003D4E  E103               	bnz	u2820
  7946  003D50  2844               	incf	___fldiv@new_exp,w,c
  7947  003D52  A0D8               	btfss	status,0,c
  7948  003D54  D00B               	goto	l2860
  7949  003D56                     u2820:
  7950  003D56  0E00               	movlw	0
  7951  003D58  6E45               	movwf	___fldiv@new_exp+1,c
  7952  003D5A  6844               	setf	___fldiv@new_exp,c
  7953  003D5C  0E00               	movlw	0
  7954  003D5E  6E33               	movwf	___fldiv@b,c
  7955  003D60  0E00               	movlw	0
  7956  003D62  6E34               	movwf	___fldiv@b+1,c
  7957  003D64  0E00               	movlw	0
  7958  003D66  6E35               	movwf	___fldiv@b+2,c
  7959  003D68  0E00               	movlw	0
  7960  003D6A  6E36               	movwf	___fldiv@b+3,c
  7961  003D6C                     l2860:
  7962  003D6C  FFFF               	dw	65535	; assembler added errata NOP
  7963  003D6E  BE45               	btfsc	___fldiv@new_exp+1,7,c
  7964  003D70  D005               	goto	u2830
  7965  003D72  5045               	movf	___fldiv@new_exp+1,w,c
  7966  003D74  E112               	bnz	l2864
  7967  003D76  0444               	decf	___fldiv@new_exp,w,c
  7968  003D78  B0D8               	btfsc	status,0,c
  7969  003D7A  D00F               	goto	l2864
  7970  003D7C                     u2830:
  7971  003D7C  FFFF               	dw	65535	; assembler added errata NOP
  7972  003D7E  0E00               	movlw	0
  7973  003D80  6E45               	movwf	___fldiv@new_exp+1,c
  7974  003D82  0E00               	movlw	0
  7975  003D84  6E44               	movwf	___fldiv@new_exp,c
  7976  003D86  0E00               	movlw	0
  7977  003D88  6E33               	movwf	___fldiv@b,c
  7978  003D8A  0E00               	movlw	0
  7979  003D8C  6E34               	movwf	___fldiv@b+1,c
  7980  003D8E  0E00               	movlw	0
  7981  003D90  6E35               	movwf	___fldiv@b+2,c
  7982  003D92  0E00               	movlw	0
  7983  003D94  6E36               	movwf	___fldiv@b+3,c
  7984  003D96  0E00               	movlw	0
  7985  003D98  6E43               	movwf	___fldiv@sign,c
  7986  003D9A                     l2864:
  7987  003D9A  FFFF               	dw	65535	; assembler added errata NOP
  7988  003D9C  C044  F04A         	movff	___fldiv@new_exp,___fldiv@bexp
  7989  003DA0  A04A               	btfss	___fldiv@bexp,0,c
  7990  003DA2  D002               	goto	l2870
  7991  003DA4  8E35               	bsf	___fldiv@b+2,7,c
  7992  003DA6  D002               	goto	l2872
  7993  003DA8                     l2870:
  7994  003DA8  FFFF               	dw	65535	; assembler added errata NOP
  7995  003DAA  9E35               	bcf	___fldiv@b+2,7,c
  7996  003DAC                     l2872:
  7997  003DAC  FFFF               	dw	65535	; assembler added errata NOP
  7998  003DAE  90D8               	bcf	status,0,c
  7999  003DB0  304A               	rrcf	___fldiv@bexp,w,c
  8000  003DB2  6E36               	movwf	___fldiv@b+3,c
  8001  003DB4  D6FC               	goto	l2786
  8002  003DB6                     l674:
  8003  003DB6  FFFF               	dw	65535	; assembler added errata NOP
  8004  003DB8  0012               	return		;funcret
  8005  003DBA  FFFF               	dw	65535	; errata NOP
  8006  003DBC                     __end_of___fldiv:
  8007                           	opt callstack 0
  8008                           
  8009 ;; *************** function ___wmul *****************
  8010 ;; Defined at:
  8011 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  8012 ;; Parameters:    Size  Location     Type
  8013 ;;  multiplier      2    1[COMRAM] unsigned int 
  8014 ;;  multiplicand    2    3[COMRAM] unsigned int 
  8015 ;; Auto vars:     Size  Location     Type
  8016 ;;  product         2    5[COMRAM] unsigned int 
  8017 ;; Return value:  Size  Location     Type
  8018 ;;                  2    1[COMRAM] unsigned int 
  8019 ;; Registers used:
  8020 ;;		wreg, status,2, status,0, prodl, prodh
  8021 ;; Tracked objects:
  8022 ;;		On entry : 0/0
  8023 ;;		On exit  : 0/0
  8024 ;;		Unchanged: 0/0
  8025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8026 ;;      Params:         4       0       0       0       0       0       0
  8027 ;;      Locals:         2       0       0       0       0       0       0
  8028 ;;      Temps:          0       0       0       0       0       0       0
  8029 ;;      Totals:         6       0       0       0       0       0       0
  8030 ;;Total ram usage:        6 bytes
  8031 ;; Hardware stack levels used:    1
  8032 ;; Hardware stack levels required when called:    2
  8033 ;; This function calls:
  8034 ;;		Nothing
  8035 ;; This function is called by:
  8036 ;;		_UART_SendIntToString
  8037 ;; This function uses a non-reentrant model
  8038 ;;
  8039                           
  8040                           	psect	text15
  8041  0005D4                     __ptext15:
  8042                           	opt callstack 0
  8043  0005D4                     ___wmul:
  8044                           	opt callstack 0
  8045  0005D4  FFFF               	dw	65535	; assembler added errata NOP
  8046                           
  8047                           ;incstack = 0
  8048  0005D6  5002               	movf	___wmul@multiplier,w,c
  8049  0005D8  0204               	mulwf	___wmul@multiplicand,c
  8050  0005DA  CFF3 F006          	movff	prodl,___wmul@product
  8051  0005DE  CFF4 F007          	movff	prodh,___wmul@product+1
  8052  0005E2  5002               	movf	___wmul@multiplier,w,c
  8053  0005E4  0205               	mulwf	___wmul@multiplicand+1,c
  8054  0005E6  50F3               	movf	prodl,w,c
  8055  0005E8  2607               	addwf	___wmul@product+1,f,c
  8056  0005EA  5003               	movf	___wmul@multiplier+1,w,c
  8057  0005EC  0204               	mulwf	___wmul@multiplicand,c
  8058  0005EE  50F3               	movf	prodl,w,c
  8059  0005F0  2607               	addwf	___wmul@product+1,f,c
  8060  0005F2  C006  F002         	movff	___wmul@product,?___wmul
  8061  0005F6  C007  F003         	movff	___wmul@product+1,?___wmul+1
  8062  0005FA  0012               	return		;funcret
  8063  0005FC  FFFF               	dw	65535	; errata NOP
  8064  0005FE                     __end_of___wmul:
  8065                           	opt callstack 0
  8066                           
  8067 ;; *************** function ___fltol *****************
  8068 ;; Defined at:
  8069 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  8070 ;; Parameters:    Size  Location     Type
  8071 ;;  f1              4  113[COMRAM] unsigned int 
  8072 ;; Auto vars:     Size  Location     Type
  8073 ;;  exp1            1  122[COMRAM] unsigned char 
  8074 ;;  sign1           1  121[COMRAM] unsigned char 
  8075 ;; Return value:  Size  Location     Type
  8076 ;;                  4  113[COMRAM] long 
  8077 ;; Registers used:
  8078 ;;		wreg, status,2, status,0
  8079 ;; Tracked objects:
  8080 ;;		On entry : 0/0
  8081 ;;		On exit  : 0/0
  8082 ;;		Unchanged: 0/0
  8083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8084 ;;      Params:         4       0       0       0       0       0       0
  8085 ;;      Locals:         2       0       0       0       0       0       0
  8086 ;;      Temps:          4       0       0       0       0       0       0
  8087 ;;      Totals:        10       0       0       0       0       0       0
  8088 ;;Total ram usage:       10 bytes
  8089 ;; Hardware stack levels used:    1
  8090 ;; Hardware stack levels required when called:    2
  8091 ;; This function calls:
  8092 ;;		Nothing
  8093 ;; This function is called by:
  8094 ;;		_UART_SendIntToString
  8095 ;;		_main
  8096 ;;		_UART_SendFloatToString
  8097 ;; This function uses a non-reentrant model
  8098 ;;
  8099                           
  8100                           	psect	text16
  8101  00035A                     __ptext16:
  8102                           	opt callstack 0
  8103  00035A                     ___fltol:
  8104                           	opt callstack 0
  8105  00035A  FFFF               	dw	65535	; assembler added errata NOP
  8106                           
  8107                           ;incstack = 0
  8108  00035C  3474               	rlcf	___fltol@f1+2,w,c
  8109  00035E  3475               	rlcf	___fltol@f1+3,w,c
  8110  000360  6E7B               	movwf	___fltol@exp1,c
  8111  000362  507B               	movf	___fltol@exp1,w,c
  8112  000364  A4D8               	btfss	status,2,c
  8113  000366  D00A               	goto	l3552
  8114  000368                     u3780:
  8115  000368  FFFF               	dw	65535	; assembler added errata NOP
  8116  00036A  0E00               	movlw	0
  8117  00036C  6E72               	movwf	?___fltol,c
  8118  00036E  0E00               	movlw	0
  8119  000370  6E73               	movwf	?___fltol+1,c
  8120  000372  0E00               	movlw	0
  8121  000374  6E74               	movwf	?___fltol+2,c
  8122  000376  0E00               	movlw	0
  8123  000378  6E75               	movwf	?___fltol+3,c
  8124  00037A  D056               	goto	l389
  8125  00037C                     l3552:
  8126  00037C  FFFF               	dw	65535	; assembler added errata NOP
  8127  00037E  C072  F076         	movff	___fltol@f1,??___fltol
  8128  000382  C073  F077         	movff	___fltol@f1+1,??___fltol+1
  8129  000386  C074  F078         	movff	___fltol@f1+2,??___fltol+2
  8130  00038A  C075  F079         	movff	___fltol@f1+3,??___fltol+3
  8131  00038E  0E20               	movlw	32
  8132  000390  D006               	goto	u3790
  8133  000392                     u3795:
  8134  000392  FFFF               	dw	65535	; assembler added errata NOP
  8135  000394  90D8               	bcf	status,0,c
  8136  000396  3279               	rrcf	??___fltol+3,f,c
  8137  000398  3278               	rrcf	??___fltol+2,f,c
  8138  00039A  3277               	rrcf	??___fltol+1,f,c
  8139  00039C  3276               	rrcf	??___fltol,f,c
  8140  00039E                     u3790:
  8141  00039E  FFFF               	dw	65535	; assembler added errata NOP
  8142  0003A0  2EE8               	decfsz	wreg,f,c
  8143  0003A2  D7F7               	goto	u3795
  8144  0003A4  5076               	movf	??___fltol,w,c
  8145  0003A6  6E7A               	movwf	___fltol@sign1,c
  8146  0003A8  8E74               	bsf	___fltol@f1+2,7,c
  8147  0003AA  0EFF               	movlw	255
  8148  0003AC  1672               	andwf	___fltol@f1,f,c
  8149  0003AE  0EFF               	movlw	255
  8150  0003B0  1673               	andwf	___fltol@f1+1,f,c
  8151  0003B2  0EFF               	movlw	255
  8152  0003B4  1674               	andwf	___fltol@f1+2,f,c
  8153  0003B6  0E00               	movlw	0
  8154  0003B8  1675               	andwf	___fltol@f1+3,f,c
  8155  0003BA  0E96               	movlw	150
  8156  0003BC  5E7B               	subwf	___fltol@exp1,f,c
  8157  0003BE  AE7B               	btfss	___fltol@exp1,7,c
  8158  0003C0  D00E               	goto	l3572
  8159  0003C2  507B               	movf	___fltol@exp1,w,c
  8160  0003C4  0A80               	xorlw	128
  8161  0003C6  0F97               	addlw	151
  8162  0003C8  A0D8               	btfss	status,0,c
  8163  0003CA  D7CE               	goto	u3780
  8164  0003CC                     l3568:
  8165  0003CC  FFFF               	dw	65535	; assembler added errata NOP
  8166  0003CE  90D8               	bcf	status,0,c
  8167  0003D0  3275               	rrcf	___fltol@f1+3,f,c
  8168  0003D2  3274               	rrcf	___fltol@f1+2,f,c
  8169  0003D4  3273               	rrcf	___fltol@f1+1,f,c
  8170  0003D6  3272               	rrcf	___fltol@f1,f,c
  8171  0003D8  3E7B               	incfsz	___fltol@exp1,f,c
  8172  0003DA  D7F8               	goto	l3568
  8173  0003DC  D010               	goto	u3830
  8174  0003DE                     l3572:
  8175  0003DE  FFFF               	dw	65535	; assembler added errata NOP
  8176  0003E0  0E1F               	movlw	31
  8177  0003E2  647B               	cpfsgt	___fltol@exp1,c
  8178  0003E4  D008               	goto	l3580
  8179  0003E6  D7C0               	goto	u3780
  8180  0003E8                     l3578:
  8181  0003E8  FFFF               	dw	65535	; assembler added errata NOP
  8182  0003EA  90D8               	bcf	status,0,c
  8183  0003EC  3672               	rlcf	___fltol@f1,f,c
  8184  0003EE  3673               	rlcf	___fltol@f1+1,f,c
  8185  0003F0  3674               	rlcf	___fltol@f1+2,f,c
  8186  0003F2  3675               	rlcf	___fltol@f1+3,f,c
  8187  0003F4  067B               	decf	___fltol@exp1,f,c
  8188  0003F6                     l3580:
  8189  0003F6  FFFF               	dw	65535	; assembler added errata NOP
  8190  0003F8  507B               	movf	___fltol@exp1,w,c
  8191  0003FA  A4D8               	btfss	status,2,c
  8192  0003FC  D7F5               	goto	l3578
  8193  0003FE                     u3830:
  8194  0003FE  FFFF               	dw	65535	; assembler added errata NOP
  8195  000400  507A               	movf	___fltol@sign1,w,c
  8196  000402  B4D8               	btfsc	status,2,c
  8197  000404  D008               	goto	l3586
  8198  000406  1E75               	comf	___fltol@f1+3,f,c
  8199  000408  1E74               	comf	___fltol@f1+2,f,c
  8200  00040A  1E73               	comf	___fltol@f1+1,f,c
  8201  00040C  6C72               	negf	___fltol@f1,c
  8202  00040E  0E00               	movlw	0
  8203  000410  2273               	addwfc	___fltol@f1+1,f,c
  8204  000412  2274               	addwfc	___fltol@f1+2,f,c
  8205  000414  2275               	addwfc	___fltol@f1+3,f,c
  8206  000416                     l3586:
  8207  000416  FFFF               	dw	65535	; assembler added errata NOP
  8208  000418  C072  F072         	movff	___fltol@f1,?___fltol
  8209  00041C  C073  F073         	movff	___fltol@f1+1,?___fltol+1
  8210  000420  C074  F074         	movff	___fltol@f1+2,?___fltol+2
  8211  000424  C075  F075         	movff	___fltol@f1+3,?___fltol+3
  8212  000428                     l389:
  8213  000428  FFFF               	dw	65535	; assembler added errata NOP
  8214  00042A  0012               	return		;funcret
  8215  00042C  FFFF               	dw	65535	; errata NOP
  8216  00042E                     __end_of___fltol:
  8217                           	opt callstack 0
  8218                           
  8219 ;; *************** function _UART_SendChar *****************
  8220 ;; Defined at:
  8221 ;;		line 30 in file "./uart.h"
  8222 ;; Parameters:    Size  Location     Type
  8223 ;;  data            1    wreg     unsigned char 
  8224 ;; Auto vars:     Size  Location     Type
  8225 ;;  data            1    1[COMRAM] unsigned char 
  8226 ;; Return value:  Size  Location     Type
  8227 ;;                  1    wreg      void 
  8228 ;; Registers used:
  8229 ;;		wreg
  8230 ;; Tracked objects:
  8231 ;;		On entry : 0/0
  8232 ;;		On exit  : 0/0
  8233 ;;		Unchanged: 0/0
  8234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8235 ;;      Params:         0       0       0       0       0       0       0
  8236 ;;      Locals:         1       0       0       0       0       0       0
  8237 ;;      Temps:          0       0       0       0       0       0       0
  8238 ;;      Totals:         1       0       0       0       0       0       0
  8239 ;;Total ram usage:        1 bytes
  8240 ;; Hardware stack levels used:    1
  8241 ;; Hardware stack levels required when called:    2
  8242 ;; This function calls:
  8243 ;;		Nothing
  8244 ;; This function is called by:
  8245 ;;		_UART_SendIntToString
  8246 ;;		_main
  8247 ;;		_UART_SendFloatToString
  8248 ;; This function uses a non-reentrant model
  8249 ;;
  8250                           
  8251                           	psect	text17
  8252  007F5C                     __ptext17:
  8253                           	opt callstack 0
  8254  007F5C                     _UART_SendChar:
  8255                           	opt callstack 0
  8256  007F5C  FFFF               	dw	65535	; assembler added errata NOP
  8257                           
  8258                           ;incstack = 0
  8259                           ;UART_SendChar@data stored from wreg
  8260  007F5E  6E02               	movwf	UART_SendChar@data,c
  8261  007F60  FFFF               	dw	65535	; assembler added errata NOP
  8262                           
  8263                           ;./uart.h: 33:     while ((TXSTA & (1<<1)) ==0)
  8264                           
  8265                           ;./uart.h: 34:     {;./uart.h: 36:     }
  8266  007F62  A2AC               	btfss	4012,1,c	;volatile
  8267  007F64  D7FD               	goto	l3066
  8268                           
  8269                           ;./uart.h: 37:     TXREG=data;
  8270  007F66  C002  FFAD         	movff	UART_SendChar@data,4013	;volatile
  8271  007F6A  0012               	return		;funcret
  8272  007F6C  FFFF               	dw	65535	; errata NOP
  8273  007F6E                     __end_of_UART_SendChar:
  8274                           	opt callstack 0
  8275                           
  8276 ;; *************** function _UART_Init *****************
  8277 ;; Defined at:
  8278 ;;		line 18 in file "./uart.h"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;  baudrate        2   14[COMRAM] int 
  8281 ;; Auto vars:     Size  Location     Type
  8282 ;;		None
  8283 ;; Return value:  Size  Location     Type
  8284 ;;                  1    wreg      void 
  8285 ;; Registers used:
  8286 ;;		wreg, status,2, status,0, cstack
  8287 ;; Tracked objects:
  8288 ;;		On entry : 0/0
  8289 ;;		On exit  : 0/0
  8290 ;;		Unchanged: 0/0
  8291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8292 ;;      Params:         2       0       0       0       0       0       0
  8293 ;;      Locals:         0       0       0       0       0       0       0
  8294 ;;      Temps:          4       0       0       0       0       0       0
  8295 ;;      Totals:         6       0       0       0       0       0       0
  8296 ;;Total ram usage:        6 bytes
  8297 ;; Hardware stack levels used:    1
  8298 ;; Hardware stack levels required when called:    3
  8299 ;; This function calls:
  8300 ;;		___lldiv
  8301 ;; This function is called by:
  8302 ;;		_main
  8303 ;; This function uses a non-reentrant model
  8304 ;;
  8305                           
  8306                           	psect	text18
  8307  0004BE                     __ptext18:
  8308                           	opt callstack 0
  8309  0004BE                     _UART_Init:
  8310                           	opt callstack 0
  8311  0004BE  FFFF               	dw	65535	; assembler added errata NOP
  8312                           
  8313                           ;./uart.h: 18: void UART_Init(int baudrate);./uart.h: 19: {;./uart.h: 20:    RCSTA |=(1<
      +                          <7);
  8314                           
  8315                           ;incstack = 0
  8316  0004C0  8EAB               	bsf	4011,7,c	;volatile
  8317                           
  8318                           ;./uart.h: 21:    TRISC &=~(1<<6);
  8319  0004C2  9C94               	bcf	3988,6,c	;volatile
  8320                           
  8321                           ;./uart.h: 22:    TRISC |=(1<<7);
  8322  0004C4  8E94               	bsf	3988,7,c	;volatile
  8323                           
  8324                           ;./uart.h: 23:    TXSTA |=((1<<5)|(1<<2));
  8325  0004C6  0E24               	movlw	36
  8326  0004C8  12AC               	iorwf	4012,f,c	;volatile
  8327                           
  8328                           ;./uart.h: 24:    TXSTA &=~(1<<4);
  8329  0004CA  98AC               	bcf	4012,4,c	;volatile
  8330                           
  8331                           ;./uart.h: 25:    RCSTA |=(1<<7);
  8332  0004CC  8EAB               	bsf	4011,7,c	;volatile
  8333                           
  8334                           ;./uart.h: 26:    SPBRG=(unsigned char)((8000000UL/(16*(unsigned long)(baudrate)))-1);
  8335  0004CE  0E00               	movlw	0
  8336  0004D0  6E02               	movwf	___lldiv@dividend,c
  8337  0004D2  0E12               	movlw	18
  8338  0004D4  6E03               	movwf	___lldiv@dividend+1,c
  8339  0004D6  0E7A               	movlw	122
  8340  0004D8  6E04               	movwf	___lldiv@dividend+2,c
  8341  0004DA  0E00               	movlw	0
  8342  0004DC  6E05               	movwf	___lldiv@dividend+3,c
  8343  0004DE  C00F  F011         	movff	UART_Init@baudrate,??_UART_Init
  8344  0004E2  C010  F012         	movff	UART_Init@baudrate+1,??_UART_Init+1
  8345  0004E6  0E00               	movlw	0
  8346  0004E8  BE12               	btfsc	(??_UART_Init+1)& (0+255),7,c
  8347  0004EA  0EFF               	movlw	255
  8348  0004EC  6E13               	movwf	(??_UART_Init+2)& (0+255),c
  8349  0004EE  6E14               	movwf	(??_UART_Init+3)& (0+255),c
  8350  0004F0  0E04               	movlw	4
  8351  0004F2                     u3855:
  8352  0004F2  FFFF               	dw	65535	; assembler added errata NOP
  8353  0004F4  90D8               	bcf	status,0,c
  8354  0004F6  3611               	rlcf	??_UART_Init,f,c
  8355  0004F8  3612               	rlcf	??_UART_Init+1,f,c
  8356  0004FA  3613               	rlcf	??_UART_Init+2,f,c
  8357  0004FC  3614               	rlcf	??_UART_Init+3,f,c
  8358  0004FE  2EE8               	decfsz	wreg,f,c
  8359  000500  D7F8               	goto	u3855
  8360  000502  C011  F006         	movff	??_UART_Init,___lldiv@divisor
  8361  000506  C012  F007         	movff	??_UART_Init+1,___lldiv@divisor+1
  8362  00050A  C013  F008         	movff	??_UART_Init+2,___lldiv@divisor+2
  8363  00050E  C014  F009         	movff	??_UART_Init+3,___lldiv@divisor+3
  8364  000512  EC17  F002         	call	___lldiv	;wreg free
  8365  000516  0402               	decf	?___lldiv,w,c
  8366  000518  6EAF               	movwf	4015,c	;volatile
  8367  00051A  0012               	return		;funcret
  8368  00051C  FFFF               	dw	65535	; errata NOP
  8369  00051E                     __end_of_UART_Init:
  8370                           	opt callstack 0
  8371                           
  8372 ;; *************** function ___lldiv *****************
  8373 ;; Defined at:
  8374 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  8375 ;; Parameters:    Size  Location     Type
  8376 ;;  dividend        4    1[COMRAM] unsigned long 
  8377 ;;  divisor         4    5[COMRAM] unsigned long 
  8378 ;; Auto vars:     Size  Location     Type
  8379 ;;  quotient        4    9[COMRAM] unsigned long 
  8380 ;;  counter         1   13[COMRAM] unsigned char 
  8381 ;; Return value:  Size  Location     Type
  8382 ;;                  4    1[COMRAM] unsigned long 
  8383 ;; Registers used:
  8384 ;;		wreg, status,2, status,0
  8385 ;; Tracked objects:
  8386 ;;		On entry : 0/0
  8387 ;;		On exit  : 0/0
  8388 ;;		Unchanged: 0/0
  8389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8390 ;;      Params:         8       0       0       0       0       0       0
  8391 ;;      Locals:         5       0       0       0       0       0       0
  8392 ;;      Temps:          0       0       0       0       0       0       0
  8393 ;;      Totals:        13       0       0       0       0       0       0
  8394 ;;Total ram usage:       13 bytes
  8395 ;; Hardware stack levels used:    1
  8396 ;; Hardware stack levels required when called:    2
  8397 ;; This function calls:
  8398 ;;		Nothing
  8399 ;; This function is called by:
  8400 ;;		_UART_Init
  8401 ;; This function uses a non-reentrant model
  8402 ;;
  8403                           
  8404                           	psect	text19
  8405  00042E                     __ptext19:
  8406                           	opt callstack 0
  8407  00042E                     ___lldiv:
  8408                           	opt callstack 0
  8409  00042E  FFFF               	dw	65535	; assembler added errata NOP
  8410                           
  8411                           ;incstack = 0
  8412  000430  0E00               	movlw	0
  8413  000432  6E0A               	movwf	___lldiv@quotient,c
  8414  000434  0E00               	movlw	0
  8415  000436  6E0B               	movwf	___lldiv@quotient+1,c
  8416  000438  0E00               	movlw	0
  8417  00043A  6E0C               	movwf	___lldiv@quotient+2,c
  8418  00043C  0E00               	movlw	0
  8419  00043E  6E0D               	movwf	___lldiv@quotient+3,c
  8420  000440  5006               	movf	___lldiv@divisor,w,c
  8421  000442  1007               	iorwf	___lldiv@divisor+1,w,c
  8422  000444  1008               	iorwf	___lldiv@divisor+2,w,c
  8423  000446  1009               	iorwf	___lldiv@divisor+3,w,c
  8424  000448  B4D8               	btfsc	status,2,c
  8425  00044A  D02E               	goto	l119
  8426  00044C  0E01               	movlw	1
  8427  00044E  6E0E               	movwf	___lldiv@counter,c
  8428  000450  D007               	goto	l3532
  8429  000452                     l3530:
  8430  000452  FFFF               	dw	65535	; assembler added errata NOP
  8431  000454  90D8               	bcf	status,0,c
  8432  000456  3606               	rlcf	___lldiv@divisor,f,c
  8433  000458  3607               	rlcf	___lldiv@divisor+1,f,c
  8434  00045A  3608               	rlcf	___lldiv@divisor+2,f,c
  8435  00045C  3609               	rlcf	___lldiv@divisor+3,f,c
  8436  00045E  2A0E               	incf	___lldiv@counter,f,c
  8437  000460                     l3532:
  8438  000460  FFFF               	dw	65535	; assembler added errata NOP
  8439  000462  AE09               	btfss	___lldiv@divisor+3,7,c
  8440  000464  D7F6               	goto	l3530
  8441  000466                     u3760:
  8442  000466  FFFF               	dw	65535	; assembler added errata NOP
  8443  000468  90D8               	bcf	status,0,c
  8444  00046A  360A               	rlcf	___lldiv@quotient,f,c
  8445  00046C  360B               	rlcf	___lldiv@quotient+1,f,c
  8446  00046E  360C               	rlcf	___lldiv@quotient+2,f,c
  8447  000470  360D               	rlcf	___lldiv@quotient+3,f,c
  8448  000472  5006               	movf	___lldiv@divisor,w,c
  8449  000474  5C02               	subwf	___lldiv@dividend,w,c
  8450  000476  5007               	movf	___lldiv@divisor+1,w,c
  8451  000478  5803               	subwfb	___lldiv@dividend+1,w,c
  8452  00047A  5008               	movf	___lldiv@divisor+2,w,c
  8453  00047C  5804               	subwfb	___lldiv@dividend+2,w,c
  8454  00047E  5009               	movf	___lldiv@divisor+3,w,c
  8455  000480  5805               	subwfb	___lldiv@dividend+3,w,c
  8456  000482  A0D8               	btfss	status,0,c
  8457  000484  D009               	goto	l3542
  8458  000486  5006               	movf	___lldiv@divisor,w,c
  8459  000488  5E02               	subwf	___lldiv@dividend,f,c
  8460  00048A  5007               	movf	___lldiv@divisor+1,w,c
  8461  00048C  5A03               	subwfb	___lldiv@dividend+1,f,c
  8462  00048E  5008               	movf	___lldiv@divisor+2,w,c
  8463  000490  5A04               	subwfb	___lldiv@dividend+2,f,c
  8464  000492  5009               	movf	___lldiv@divisor+3,w,c
  8465  000494  5A05               	subwfb	___lldiv@dividend+3,f,c
  8466  000496  800A               	bsf	___lldiv@quotient,0,c
  8467  000498                     l3542:
  8468  000498  FFFF               	dw	65535	; assembler added errata NOP
  8469  00049A  90D8               	bcf	status,0,c
  8470  00049C  3209               	rrcf	___lldiv@divisor+3,f,c
  8471  00049E  3208               	rrcf	___lldiv@divisor+2,f,c
  8472  0004A0  3207               	rrcf	___lldiv@divisor+1,f,c
  8473  0004A2  3206               	rrcf	___lldiv@divisor,f,c
  8474  0004A4  2E0E               	decfsz	___lldiv@counter,f,c
  8475  0004A6  D7DF               	goto	u3760
  8476  0004A8                     l119:
  8477  0004A8  FFFF               	dw	65535	; assembler added errata NOP
  8478  0004AA  C00A  F002         	movff	___lldiv@quotient,?___lldiv
  8479  0004AE  C00B  F003         	movff	___lldiv@quotient+1,?___lldiv+1
  8480  0004B2  C00C  F004         	movff	___lldiv@quotient+2,?___lldiv+2
  8481  0004B6  C00D  F005         	movff	___lldiv@quotient+3,?___lldiv+3
  8482  0004BA  0012               	return		;funcret
  8483  0004BC  FFFF               	dw	65535	; errata NOP
  8484  0004BE                     __end_of___lldiv:
  8485                           	opt callstack 0
  8486                           
  8487 ;; *************** function _ADC_Read *****************
  8488 ;; Defined at:
  8489 ;;		line 28 in file "./adc.h"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;  channel         1    wreg     unsigned char 
  8492 ;; Auto vars:     Size  Location     Type
  8493 ;;  channel         1    8[COMRAM] unsigned char 
  8494 ;;  retval          2    6[COMRAM] unsigned int 
  8495 ;;  portval         1    9[COMRAM] unsigned char 
  8496 ;; Return value:  Size  Location     Type
  8497 ;;                  2    1[COMRAM] unsigned int 
  8498 ;; Registers used:
  8499 ;;		wreg, status,2, status,0
  8500 ;; Tracked objects:
  8501 ;;		On entry : 0/0
  8502 ;;		On exit  : 0/0
  8503 ;;		Unchanged: 0/0
  8504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8505 ;;      Params:         2       0       0       0       0       0       0
  8506 ;;      Locals:         4       0       0       0       0       0       0
  8507 ;;      Temps:          3       0       0       0       0       0       0
  8508 ;;      Totals:         9       0       0       0       0       0       0
  8509 ;;Total ram usage:        9 bytes
  8510 ;; Hardware stack levels used:    1
  8511 ;; Hardware stack levels required when called:    2
  8512 ;; This function calls:
  8513 ;;		Nothing
  8514 ;; This function is called by:
  8515 ;;		_main
  8516 ;; This function uses a non-reentrant model
  8517 ;;
  8518                           
  8519                           	psect	text20
  8520  00051E                     __ptext20:
  8521                           	opt callstack 0
  8522  00051E                     _ADC_Read:
  8523                           	opt callstack 0
  8524  00051E  FFFF               	dw	65535	; assembler added errata NOP
  8525                           
  8526                           ;incstack = 0
  8527                           ;ADC_Read@channel stored from wreg
  8528  000520  6E09               	movwf	ADC_Read@channel,c
  8529                           
  8530                           ;./adc.h: 28: unsigned int ADC_Read(char channel);./adc.h: 29: {;./adc.h: 31:     char p
      +                          ortval=ADCON0;
  8531  000522  CFC2 F00A          	movff	4034,ADC_Read@portval	;volatile
  8532                           
  8533                           ;./adc.h: 32:     portval &=0b11000111;
  8534  000526  0EC7               	movlw	199
  8535  000528  160A               	andwf	ADC_Read@portval,f,c
  8536                           
  8537                           ;./adc.h: 33:     portval |=(channel<<3);
  8538  00052A  3809               	swapf	ADC_Read@channel,w,c
  8539  00052C  42E8               	rrncf	wreg,f,c
  8540  00052E  0BF8               	andlw	248
  8541  000530  120A               	iorwf	ADC_Read@portval,f,c
  8542                           
  8543                           ;./adc.h: 34:     ADCON0 = portval;
  8544  000532  C00A  FFC2         	movff	ADC_Read@portval,4034	;volatile
  8545                           
  8546                           ;./adc.h: 36:     ADCON0 |=(1<<2);
  8547  000536  84C2               	bsf	4034,2,c	;volatile
  8548  000538                     l68:
  8549  000538  FFFF               	dw	65535	; assembler added errata NOP
  8550                           
  8551                           ;./adc.h: 37:     while((ADCON0 & (1<<2)) >= 1)
  8552  00053A  B4C2               	btfsc	4034,2,c	;volatile
  8553  00053C  D7FD               	goto	l68
  8554                           
  8555                           ;./adc.h: 41:     unsigned int retval=((ADRESH & 0b00000111)<<8)|ADRESL;
  8556  00053E  CFC4 F004          	movff	4036,??_ADC_Read	;volatile
  8557  000542  0E07               	movlw	7
  8558  000544  1604               	andwf	??_ADC_Read,f,c
  8559  000546  5004               	movf	??_ADC_Read,w,c
  8560  000548  6E06               	movwf	(??_ADC_Read+2)& (0+255),c
  8561  00054A  6A05               	clrf	(??_ADC_Read+1)& (0+255),c
  8562  00054C  50C3               	movf	4035,w,c	;volatile
  8563  00054E  1005               	iorwf	??_ADC_Read+1,w,c
  8564  000550  6E07               	movwf	ADC_Read@retval,c
  8565  000552  5006               	movf	??_ADC_Read+2,w,c
  8566  000554  6E08               	movwf	ADC_Read@retval+1,c
  8567                           
  8568                           ;./adc.h: 42:     return retval;
  8569  000556  C007  F002         	movff	ADC_Read@retval,?_ADC_Read
  8570  00055A  C008  F003         	movff	ADC_Read@retval+1,?_ADC_Read+1
  8571  00055E  0012               	return		;funcret
  8572  000560  FFFF               	dw	65535	; errata NOP
  8573  000562                     __end_of_ADC_Read:
  8574                           	opt callstack 0
  8575                           
  8576 ;; *************** function _ADC_Init *****************
  8577 ;; Defined at:
  8578 ;;		line 12 in file "./adc.h"
  8579 ;; Parameters:    Size  Location     Type
  8580 ;;		None
  8581 ;; Auto vars:     Size  Location     Type
  8582 ;;		None
  8583 ;; Return value:  Size  Location     Type
  8584 ;;                  1    wreg      void 
  8585 ;; Registers used:
  8586 ;;		wreg, status,2, status,0
  8587 ;; Tracked objects:
  8588 ;;		On entry : 0/0
  8589 ;;		On exit  : 0/0
  8590 ;;		Unchanged: 0/0
  8591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8592 ;;      Params:         0       0       0       0       0       0       0
  8593 ;;      Locals:         0       0       0       0       0       0       0
  8594 ;;      Temps:          0       0       0       0       0       0       0
  8595 ;;      Totals:         0       0       0       0       0       0       0
  8596 ;;Total ram usage:        0 bytes
  8597 ;; Hardware stack levels used:    1
  8598 ;; Hardware stack levels required when called:    2
  8599 ;; This function calls:
  8600 ;;		Nothing
  8601 ;; This function is called by:
  8602 ;;		_main
  8603 ;; This function uses a non-reentrant model
  8604 ;;
  8605                           
  8606                           	psect	text21
  8607  007F6E                     __ptext21:
  8608                           	opt callstack 0
  8609  007F6E                     _ADC_Init:
  8610                           	opt callstack 0
  8611  007F6E  FFFF               	dw	65535	; assembler added errata NOP
  8612                           
  8613                           ;./adc.h: 16:     TRISA=0xff;
  8614                           
  8615                           ;incstack = 0
  8616  007F70  6892               	setf	3986,c	;volatile
  8617                           
  8618                           ;./adc.h: 17:     TRISE=0xff;
  8619  007F72  6896               	setf	3990,c	;volatile
  8620                           
  8621                           ;./adc.h: 18:     ADCON1 &=~((1<<0)|(1<<1)|(1<<2)|(1<<3));
  8622  007F74  0EF0               	movlw	240
  8623  007F76  16C1               	andwf	4033,f,c	;volatile
  8624                           
  8625                           ;./adc.h: 19:     ADCON1 |=((1<<6)|(1<<7));
  8626  007F78  0EC0               	movlw	192
  8627  007F7A  12C1               	iorwf	4033,f,c	;volatile
  8628                           
  8629                           ;./adc.h: 20:     ADCON0 &=~(1<<7);
  8630  007F7C  9EC2               	bcf	4034,7,c	;volatile
  8631                           
  8632                           ;./adc.h: 21:     ADCON0 |=(1<<6);
  8633  007F7E  8CC2               	bsf	4034,6,c	;volatile
  8634                           
  8635                           ;./adc.h: 23:     ADCON0|=(1<<0);
  8636  007F80  80C2               	bsf	4034,0,c	;volatile
  8637  007F82  0012               	return		;funcret
  8638  007F84  FFFF               	dw	65535	; errata NOP
  8639  007F86                     __end_of_ADC_Init:
  8640                           	opt callstack 0
  8641                           
  8642 ;; *************** function _my_low_priority_isr_routine *****************
  8643 ;; Defined at:
  8644 ;;		line 18 in file "newmain.c"
  8645 ;; Parameters:    Size  Location     Type
  8646 ;;		None
  8647 ;; Auto vars:     Size  Location     Type
  8648 ;;		None
  8649 ;; Return value:  Size  Location     Type
  8650 ;;                  1    wreg      void 
  8651 ;; Registers used:
  8652 ;;		None
  8653 ;; Tracked objects:
  8654 ;;		On entry : 0/0
  8655 ;;		On exit  : 0/0
  8656 ;;		Unchanged: 0/0
  8657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8658 ;;      Params:         0       0       0       0       0       0       0
  8659 ;;      Locals:         0       0       0       0       0       0       0
  8660 ;;      Temps:          1       0       0       0       0       0       0
  8661 ;;      Totals:         1       0       0       0       0       0       0
  8662 ;;Total ram usage:        1 bytes
  8663 ;; Hardware stack levels used:    1
  8664 ;; Hardware stack levels required when called:    1
  8665 ;; This function calls:
  8666 ;;		Nothing
  8667 ;; This function is called by:
  8668 ;;		Interrupt level 1
  8669 ;; This function uses a non-reentrant model
  8670 ;;
  8671                           
  8672                           	psect	intcodelo
  8673  000018                     __pintcodelo:
  8674                           	opt callstack 0
  8675  000018                     _my_low_priority_isr_routine:
  8676                           	opt callstack 0
  8677  000018  FFFF               	dw	65535	; assembler added errata NOP
  8678                           
  8679                           ;incstack = 0
  8680  00001A  807E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  8681  00001C  CFE0 F001          	movff	bsr,??_my_low_priority_isr_routine
  8682  000020  C001  FFE0         	movff	??_my_low_priority_isr_routine,bsr
  8683  000024  907E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  8684  000026  0010               	retfie	
  8685  000028  FFFF               	dw	65535	; errata NOP
  8686  00002A                     __end_of_my_low_priority_isr_routine:
  8687                           	opt callstack 0
  8688                           
  8689 ;; *************** function _my_high_priority_isr_routine *****************
  8690 ;; Defined at:
  8691 ;;		line 21 in file "newmain.c"
  8692 ;; Parameters:    Size  Location     Type
  8693 ;;		None
  8694 ;; Auto vars:     Size  Location     Type
  8695 ;;		None
  8696 ;; Return value:  Size  Location     Type
  8697 ;;                  1    wreg      void 
  8698 ;; Registers used:
  8699 ;;		None
  8700 ;; Tracked objects:
  8701 ;;		On entry : 0/0
  8702 ;;		On exit  : 0/0
  8703 ;;		Unchanged: 0/0
  8704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8705 ;;      Params:         0       0       0       0       0       0       0
  8706 ;;      Locals:         0       0       0       0       0       0       0
  8707 ;;      Temps:          0       0       0       0       0       0       0
  8708 ;;      Totals:         0       0       0       0       0       0       0
  8709 ;;Total ram usage:        0 bytes
  8710 ;; Hardware stack levels used:    1
  8711 ;; This function calls:
  8712 ;;		Nothing
  8713 ;; This function is called by:
  8714 ;;		Interrupt level 2
  8715 ;; This function uses a non-reentrant model
  8716 ;;
  8717                           
  8718                           	psect	intcode
  8719  000008                     __pintcode:
  8720                           	opt callstack 0
  8721  000008                     _my_high_priority_isr_routine:
  8722                           	opt callstack 0
  8723  000008  FFFF               	dw	65535	; assembler added errata NOP
  8724                           
  8725                           ;incstack = 0
  8726  00000A  827E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8727  00000C  EFFC  F01F         	goto	int_func
  8728                           
  8729                           	psect	intcode_body
  8730  003FF8                     __pintcode_body:
  8731                           	opt callstack 25
  8732  003FF8                     int_func:
  8733                           	opt callstack 25
  8734  003FF8  FFFF               	dw	65535	; errata NOP
  8735  003FFA  927E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8736  003FFC  0011               	retfie		f
  8737  003FFE  FFFF               	dw	65535	; errata NOP
  8738  004000                     __end_of_my_high_priority_isr_routine:
  8739                           	opt callstack 0
  8740                           
  8741                           	psect	rparam
  8742  0000                     
  8743                           	psect	temp
  8744  00007E                     btemp:
  8745                           	opt callstack 0
  8746  00007E                     	ds	1
  8747  0000                     int$flags	set	btemp
  8748  0000                     wtemp8	set	btemp+1
  8749  0000                     ttemp5	set	btemp+1
  8750  0000                     ttemp6	set	btemp+4
  8751  0000                     ttemp7	set	btemp+8
  8752                           tosu	equ	0xFFF
  8753                           tosh	equ	0xFFE
  8754                           tosl	equ	0xFFD
  8755                           stkptr	equ	0xFFC
  8756                           pclatu	equ	0xFFB
  8757                           pclath	equ	0xFFA
  8758                           pcl	equ	0xFF9
  8759                           tblptru	equ	0xFF8
  8760                           tblptrh	equ	0xFF7
  8761                           tblptrl	equ	0xFF6
  8762                           tablat	equ	0xFF5
  8763                           prodh	equ	0xFF4
  8764                           prodl	equ	0xFF3
  8765                           indf0	equ	0xFEF
  8766                           postinc0	equ	0xFEE
  8767                           postdec0	equ	0xFED
  8768                           preinc0	equ	0xFEC
  8769                           plusw0	equ	0xFEB
  8770                           fsr0h	equ	0xFEA
  8771                           fsr0l	equ	0xFE9
  8772                           wreg	equ	0xFE8
  8773                           indf1	equ	0xFE7
  8774                           postinc1	equ	0xFE6
  8775                           postdec1	equ	0xFE5
  8776                           preinc1	equ	0xFE4
  8777                           plusw1	equ	0xFE3
  8778                           fsr1h	equ	0xFE2
  8779                           fsr1l	equ	0xFE1
  8780                           bsr	equ	0xFE0
  8781                           indf2	equ	0xFDF
  8782                           postinc2	equ	0xFDE
  8783                           postdec2	equ	0xFDD
  8784                           preinc2	equ	0xFDC
  8785                           plusw2	equ	0xFDB
  8786                           fsr2h	equ	0xFDA
  8787                           fsr2l	equ	0xFD9
  8788                           status	equ	0xFD8


Data Sizes:
    Strings     15
    Constant    124
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    125     125
    BANK0           128     66      72
    BANK1           256    188     188
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    nanf@s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_3(CODE[1]), 

    UART_SendString@str	PTR unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[6]), STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _UART_SendIntToString->___fltol
    _powf->_sqrtf
    _sqrtf->___flge
    ___flge->___fldiv
    _scalbnf->___flmul
    ___flmul->___fladd
    ___flsub->___flmul
    ___fldiv->___flsub
    ___fltol->_powf
    _UART_Init->___lldiv

Critical Paths under _my_low_priority_isr_routine in COMRAM

    None.

Critical Paths under _my_high_priority_isr_routine in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_UART_SendIntToString
    _powf->_sqrtf

Critical Paths under _my_low_priority_isr_routine in BANK0

    None.

Critical Paths under _my_high_priority_isr_routine in BANK0

    None.

Critical Paths under _main in BANK1

    _UART_SendIntToString->_powf
    ___fltol->_powf

Critical Paths under _my_low_priority_isr_routine in BANK1

    None.

Critical Paths under _my_high_priority_isr_routine in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_low_priority_isr_routine in BANK2

    None.

Critical Paths under _my_high_priority_isr_routine in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_low_priority_isr_routine in BANK3

    None.

Critical Paths under _my_high_priority_isr_routine in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _my_low_priority_isr_routine in BANK4

    None.

Critical Paths under _my_high_priority_isr_routine in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _my_low_priority_isr_routine in BANK5

    None.

Critical Paths under _my_high_priority_isr_routine in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  132262
                                            123 COMRAM     2     2      0
                                             60 BANK0      6     6      0
                           _ADC_Init
                           _ADC_Read
                          _UART_Init
                      _UART_SendChar
               _UART_SendIntToString
                    _UART_SendString
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _UART_SendString                                      2     0      2     197
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _UART_SendIntToString                                20    17      3  116125
                                             40 BANK0     20    17      3
                      _UART_SendChar
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                             ___wmul
                           ___xxtofl
                               _powf
 ---------------------------------------------------------------------------------
 (2) _powf                                               205   197      8   82470
                                             96 COMRAM    17     9      8
                                              0 BANK1    188   188      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                              _fabsf
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (3) _sqrtf                                               49    45      4   21949
                                             87 COMRAM     9     5      4
                                              0 BANK0     40    40      0
                            ___fladd
                             ___flge
                            ___flmul
                               _nanf
 ---------------------------------------------------------------------------------
 (4) _nanf                                                 8     4      4      99
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     942
                                             75 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _scalbnf                                             18    12      6   13031
                                             42 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8   12536
                                             17 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _fabsf                                                8     4      4     123
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4    1918
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8   13377
                                             42 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    7430
                                              1 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2767
                                             50 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     913
                                            113 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                               _powf (ARG)
 ---------------------------------------------------------------------------------
 (2) _UART_SendChar                                        1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            6     4      2     412
                                             14 COMRAM     6     4      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              1 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             9     7      2      70
                                              1 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _my_low_priority_isr_routine                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _my_high_priority_isr_routine                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _UART_Init
     ___lldiv
   _UART_SendChar
   _UART_SendIntToString
     _UART_SendChar
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flge
       ___fladd (ARG)
       ___fldiv (ARG)
         ___fladd (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___fladd (ARG)
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___flmul (ARG)
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___fladd (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _powf (ARG)
         ___fladd
         ___fldiv
           ___fladd (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fladd (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flneg
         ___flsub
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _fabsf
         _scalbnf
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
         _sqrtf
           ___fladd
           ___flge
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
           _nanf
     ___wmul
     ___xxtofl
     _powf
       ___fladd
       ___fldiv
         ___fladd (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
         ___fladd (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _fabsf
       _scalbnf
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
       _sqrtf
         ___fladd
         ___flge
           ___fladd (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         _nanf
   _UART_SendString
   ___flmul
     ___fladd (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul (ARG)
       ___fladd (ARG)
       ___xxtofl (ARG)
     ___flsub (ARG)
       ___fladd
       ___flmul (ARG)
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _powf (ARG)
       ___fladd
       ___fldiv
         ___fladd (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
         ___fladd (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _fabsf
       _scalbnf
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
       _sqrtf
         ___fladd
         ___flge
           ___fladd (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         _nanf
   ___xxtofl

 _my_low_priority_isr_routine (ROOT)

 _my_high_priority_isr_routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     BC      BC       7       73.4%
BITBANK0            80      0       0       4        0.0%
BANK0               80     42      48       5       56.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7D      7D       1       99.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     181      15        0.0%
DATA                 0      0     181       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Mar 14 20:49:11 2019

                                                         ___fldiv@aexp 004B  
                                                         ___fldiv@bexp 004A  
                                                         ___fldiv@sign 0043  
                                                                   _L1 0659  
                                                                   _L2 0655  
                                                                   _L3 0651  
                                                                   l40 0566  
                                                                   _L4 064D  
                                                                   _L5 0649  
                                                                   _L6 0645  
                                                                   _P1 0641  
                                                                   _P2 063D  
                                                                   _P3 0639  
                                                                   _P4 0635  
                                                                   _P5 0631  
                                                                   l68 0538  
                                                          __CFG_BOR$ON 000000  
                                                                   _bp 0669  
                                                                   _cp 061D  
                                                                   bsr 000FE0  
                                                  ___wmul@multiplicand 0004  
                                                         __CFG_CP0$OFF 000000  
                                                         __CFG_CP1$OFF 000000  
                                                         __CFG_CP2$OFF 000000  
                                                         __CFG_CP3$OFF 000000  
                                                          __CFG_OSC$HS 000000  
                                                          __CFG_LVP$ON 000000  
                                                                  l119 04A8  
                                                                  l362 0354  
                                                                  l621 3652  
                                                                  l357 0316  
                                                                  l622 362A  
                                                                  l710 34EE  
                                                                  l706 31FE  
                                                                  l723 34B6  
                                                                  l715 3428  
                                                                  l716 3422  
                                                                  l389 0428  
                                                                  l637 371E  
                                                                  l629 3832  
                                                                  l646 3796  
                                                                  l750 0184  
                                                                  l647 3790  
                                                                  l831 2D12  
                                                                  l674 3DB6  
                                                                  l754 00F8  
                                                                  l747 006E  
                                                                  l676 3C88  
                                                                  l836 08D2  
                                                                  l846 0930  
                                                                  l687 3D00  
                                                                  l943 2CB8  
                                                                  l688 3CFA  
                                                                  l856 09C4  
                                                                  l970 2EDE  
                                                                  l974 2F34  
                                                                  l966 316C  
                                                                  l977 2FF0  
                                                                  l979 30D4  
                                                         __CFG_CPB$OFF 000000  
                                                         __CFG_CPD$OFF 000000  
                                                                  _lg2 062D  
                                                                  _ovt 0621  
                                                         __CFG_BORV$20 000000  
                                                                  wreg 000FE8  
                                                         ___flmul@aexp 0023  
                                                         ___flmul@bexp 0024  
                                 __end_of_my_high_priority_isr_routine 4000  
                                __size_of_my_high_priority_isr_routine 3FF8  
                                         _my_high_priority_isr_routine 0008  
                                                         ___flmul@sign 001E  
                                                         ___flmul@temp 0029  
                                                         ___flmul@prod 0025  
                                                         ___fltol@exp1 007B  
                                                         __CFG_WDT$OFF 000000  
                                                                 l3006 30A6  
                                                                 l3200 0DAA  
                                                                 l3120 0946  
                                                                 l3112 090A  
                                                                 l3042 3E7E  
                                                                 l3210 0E92  
                                                                 l3140 0A12  
                                                                 l3124 0974  
                                                                 l2430 359A  
                                                                 l2422 3576  
                                                                 l3206 0E34  
                                                                 l3134 09DA  
                                                                 l2600 31B8  
                                                                 l3160 0AEE  
                                                                 l3128 0986  
                                                                 l3066 7F60  
                                                                 l2506 36A4  
                                                                 l2418 3570  
                                                                 l3058 3F32  
                                                                 l3170 0BE2  
                                                                 l3090 0788  
                                                                 l3082 0720  
                                                                 l2524 3746  
                                                                 l2540 376C  
                                                                 l2516 370C  
                                                                 l2460 35D8  
                                                                 l3420 21FE  
                                                                 l3236 116A  
                                                                 l3148 0A4C  
                                                                 l2534 375E  
                                                                 l2614 31E6  
                                                                 l3262 12CC  
                                                                 l3166 0BB0  
                                                                 l3174 0BF8  
                                                                 l2800 3BE0  
                                                                 l2560 37DE  
                                                                 l2472 363A  
                                                                 l2624 3220  
                                                                 l2616 31EC  
                                                                 l3248 11F4  
                                                                 l3184 0C9C  
                                                                 l3530 0452  
                                                                 l2810 3C32  
                                                                 l2474 3640  
                                                                 l2394 3522  
                                                                 l2722 02E6  
                                                                 l3514 2CDA  
                                                                 l3258 129C  
                                                                 l3098 07BE  
                                                                 l3532 0460  
                                                                 l2572 3812  
                                                                 l2900 0080  
                                                                 l2708 34D8  
                                                                 l2732 0350  
                                                                 l3436 2366  
                                                                 l3444 2422  
                                                                 l3428 22DA  
                                                                 l3268 12FA  
                                                                 l3196 0D4C  
                                                                 l3188 0CBA  
                                                                 l3620 3876  
                                                                 l3542 0498  
                                                                 l2830 3CA0  
                                                                 l2574 3816  
                                                                 l2398 3528  
                                                                 l2910 00B6  
                                                                 l2726 02FE  
                                                                 l2718 02B0  
                                                                 l3606 0580  
                                                                 l3552 037C  
                                                                 l2824 3C84  
                                                                 l2568 3808  
                                                                 l2496 368A  
                                                                 l2920 012E  
                                                                 l2912 00DE  
                                                                 l2672 33E8  
                                                                 l3456 262E  
                                                                 l3632 3944  
                                                                 l3616 3864  
                                                                 l2818 3C5C  
                                                                 l2754 3B2A  
                                                                 l2498 3690  
                                                                 l2906 00A0  
                                                                 l2666 33C8  
                                                                 l3458 2664  
                                                                 l3634 394A  
                                                                 l3618 3870  
                                                                 l3580 03F6  
                                                                 l3572 03DE  
                                                                 l2860 3D6C  
                                                                 l2836 3CC0  
                                                                 l2908 00A8  
                                                                 l2692 346E  
                                                                 l2596 31A0  
                                                                 l2870 3DA8  
                                                                 l2774 3B70  
                                                                 l2758 3B30  
                                                                 l2918 0120  
                                                                 l2598 31A6  
                                                                 l3654 3AEE  
                                                                 l3568 03CC  
                                                                 l2872 3DAC  
                                                                 l2864 3D9A  
                                                                 l2856 3D46  
                                                                 l2792 3BC6  
                                                                 l2936 0172  
                                                                 l2696 348E  
                                                                 l2952 2DC0  
                                                                 l3586 0416  
                                                                 l3578 03E8  
                                                                 l2786 3BAE  
                                                                 l2778 3B76  
                                                                 l2890 7FEA  
                                                                 l2970 2E98  
                                                                 l3748 01B6  
                                                                 l2974 2EB0  
                                                                 l2958 2E0C  
                                                                 l2966 2E38  
                                                                 l2992 300C  
                                                                 l2986 2F82  
                                                                 STR_1 067D  
                                                                 STR_2 0686  
                                                                 STR_3 0685  
                                                                 u2100 3610  
                                                                 u2130 365C  
                                                                 u2220 3732  
                                                                 u3100 3DDE  
                                                                 u3005 2E4E  
                                                                 u3110 3E2A  
                                                                 u3006 2E56  
                                                                 u3007 2E66  
                                                                 u2080 35FC  
                                                                 u3120 3E76  
                                                                 u3200 0736  
                                                                 u2090 360C  
                                                                 u3210 074E  
                                                                 u2340 37EC  
                                                                 u2260 3772  
                                                                 u2500 341A  
                                                                 u3300 08F8  
                                                                 u2280 3788  
                                                                 u2450 320C  
                                                                 u3410 0AA4  
                                                                 u3411 0AA2  
                                                                 u2540 347E  
                                                                 u2460 3388  
                                                                 u3500 0CEA  
                                                                 u3165 3F46  
                                                                 u2550 349E  
                                                                 u3270 0880  
                                                                 u3095 311C  
                                                                 u3255 07E4  
                                                                 u3256 07EC  
                                                                 u2465 337C  
                                                                 u3265 082E  
                                                                 u3257 07FC  
                                                                 u3530 0DD6  
                                                                 u3266 0836  
                                                                 u3275 0874  
                                                                 u3267 0846  
                                                                 u2820 3D56  
                                                                 u3540 118C  
                                                                 u2830 3D7C  
                                                                 u3390 0A86  
                                                                 u2920 013A  
                                                                 u3560 1296  
                                                                 u3705 25EE  
                                                                 u3706 25F6  
                                                                 u3570 12B6  
                                                                 u3707 2606  
                                                                 u3555 120A  
                                                                 u2780 3CF2  
                                                                 u3740 2C88  
                                                                 u3556 1212  
                                                                 u3725 2C26  
                                                                 u3557 1222  
                                                                 u3830 03FE  
                                                                 u3735 2C5C  
                                                                 u3655 2452  
                                                                 u3760 0466  
                                                                 u3736 2C64  
                                                                 u3656 245A  
                                                                 u3737 2C74  
                                                                 u3657 246A  
                                                                 u3585 14F2  
                                                                 u2970 2DD4  
                                                                 u3675 24C4  
                                                                 u3780 0368  
                                                                 u3676 24CC  
                                                                 u3685 251C  
                                                                 u3677 24DC  
                                                                 u3790 039E  
                                                                 u3686 2524  
                                                                 u3855 04F2  
                                                                 u3695 2564  
                                                                 u3687 2534  
                                                                 u3696 256C  
                                                                 u3697 257C  
                                                                 u3795 0392  
                                                                 u3977 01A6  
                                                                 u3987 026A  
                                                         __CFG_STVR$ON 000000  
                                                                 _cp_h 0679  
                                                                 _cp_l 0675  
                                                                 _dp_h 0609  
                                                                 _dp_l 0601  
                                                                 _main 018A  
                                                                 _nanf 7FA6  
                                                                 _huge 0661  
                                                                 _powf 068E  
                                                                 _tiny 065D  
                                                                 btemp 007E  
                                                     __end_of_ADC_Init 7F86  
                                                     __end_of_ADC_Read 0562  
                                                                 prodh 000FF4  
                                                                 prodl 000FF3  
                                                                 start 002A  
                                                      ___fldiv@new_exp 0044  
                                                         ___param_bank 000000  
                                                        __CFG_OSCS$OFF 000000  
                                                    UART_SendChar@data 0002  
                                                        ___fltol@sign1 007A  
                                                      __end_of___fladd 3838  
                                                                ?_main 0001  
                                                                ?_nanf 0002  
                                                      __end_of___fldiv 3DBC  
                                                      __end_of___flneg 8000  
                                                      __end_of___flmul 34F4  
                                                                ?_powf 0061  
                                                      __end_of___flsub 3FF8  
                                                      __end_of___fltol 042E  
                                                      __end_of___lldiv 04BE  
                                         __end_of_UART_SendIntToString 3AFC  
                                   UART_SendIntToString@numberOfDigits 00AA  
                                                                _RCSTA 000FAB  
                                                                _SPBRG 000FAF  
                                                                _TRISA 000F92  
                                                                _TRISC 000F94  
                                                                _TRISE 000F96  
                                                                _TXREG 000FAD  
                                                                _TXSTA 000FAC  
                                                        __CFG_PWRT$OFF 000000  
                                                        __CFG_WRT0$OFF 000000  
                                                        __CFG_WRT1$OFF 000000  
                                                        __CFG_WRT2$OFF 000000  
                                                        __CFG_WRT3$OFF 000000  
                                                       __CFG_EBTR0$OFF 000000  
                                                       __CFG_EBTR1$OFF 000000  
                                                       __CFG_EBTR2$OFF 000000  
                                                       __CFG_EBTR3$OFF 000000  
                                                   __size_of_UART_Init 0060  
                                                        __CFG_WRTB$OFF 000000  
                                                        __CFG_WRTC$OFF 000000  
                                                        __CFG_WRTD$OFF 000000  
                                                                _lg2_h 0629  
                                                                _lg2_l 0625  
                                                                _fabsf 059C  
                                                       __CFG_EBTRB$OFF 000000  
                                                                _errno 00C6  
                                                                _ivln2 0619  
                                                      __end_of_ivln2_h 0675  
                                                      __end_of_ivln2_l 0619  
                                                                _two24 0665  
                                        ?_my_high_priority_isr_routine 0001  
                                                      __end_of_scalbnf 3FAE  
                                                                _sqrtf 2D18  
                                                                nanf@s 0002  
                                                                nanf@u 0006  
                                                     ?_UART_SendString 0002  
                                                                tablat 000FF5  
                                                                powf@i 012C  
                                                                powf@j 01AC  
                                                                powf@k 01A0  
                                                                powf@n 017C  
                                                                powf@r 014C  
                                                                powf@s 015C  
                                                                powf@t 01B0  
                                                                powf@u 0174  
                                                                powf@v 0178  
                                                                powf@w 0144  
                                                                powf@x 0061  
                                                                powf@y 0065  
                                                                powf@z 01B4  
                                                                ttemp5 007F  
                                                                ttemp6 0082  
                                                                ttemp7 0086  
                                                                status 000FD8  
                                                                wtemp8 007F  
                                                      __initialization 7F86  
                                                         __end_of_cp_h 067D  
                                                         __end_of_cp_l 0679  
                                                         __end_of_dp_h 0611  
                                                         __end_of_dp_l 0609  
                                                         __end_of_main 027A  
                                                         __end_of_nanf 7FCC  
                                                         __end_of_huge 0665  
                                                         __end_of_powf 2D18  
                                                         __end_of_tiny 0661  
                                             _UART_SendIntToString$867 00B6  
                                             _UART_SendIntToString$868 00B1  
                                             _UART_SendIntToString$869 00AB  
                                                               ??_main 007C  
                                                               ??_nanf 0006  
                                                               ??_powf 0069  
                                                        __activetblptr 000001  
                                                      __CFG_CCP2MUX$ON 000000  
                                                               ?_fabsf 0002  
                                                               _ADCON0 000FC2  
                                                               _ADCON1 000FC1  
                                                               _ADRESH 000FC4  
                                                               _ADRESL 000FC3  
                                                               ?_sqrtf 0058  
                                                UART_SendIntToString@i 00BB  
                                                       __CFG_WDTPS$128 000000  
                                                     __end_of___xxtofl 018A  
                                                    __end_of_UART_Init 051E  
                                                               ___flge 027A  
                                                            ??___fladd 000A  
                                                               ___wmul 05D4  
                                                            ??___fldiv 003B  
                                                            ??___flneg 0006  
                                                            ??___flmul 001A  
                                                            ??___flsub 0033  
                                                            ??___fltol 0076  
                                                            ??___lldiv 000A  
                                                      ADC_Read@channel 0009  
                                                               fabsf@u 0006  
                                                               fabsf@x 0002  
                                                            ??_scalbnf 0031  
                                                            ?_ADC_Init 0001  
                                                            ?_ADC_Read 0002  
                                                         __mediumconst 0000  
                                                               powf@s2 018C  
                                                               powf@t1 0180  
                                                               powf@t2 011C  
                                                               tblptrh 000FF7  
                                                               tblptrl 000FF6  
                                                               powf@y1 0128  
                                                               tblptru 000FF8  
                                                               powf@ax 0170  
                                                               powf@is 0190  
                                                               powf@hx 0160  
                                                               powf@hy 0184  
                                                               powf@ix 01A8  
                                                               powf@iy 0198  
                                                               powf@sn 0188  
                                                      ADC_Read@portval 000A  
                                                               sqrtf@i 0088  
                                                               sqrtf@m 009C  
                                                               sqrtf@q 0090  
                                                               sqrtf@r 00A0  
                                                               sqrtf@s 0084  
                                                               sqrtf@t 0094  
                                                               sqrtf@x 0058  
                                                               sqrtf@z 0098  
                                                __end_of_UART_SendChar 7F6E  
                                                           ___flge@ff1 004C  
                                                           ___flge@ff2 0050  
                                                         ___xxtofl@arg 000C  
                                                         ___xxtofl@exp 000B  
                                                         ___xxtofl@val 0002  
                                                           __accesstop 0080  
                                              __end_of__initialization 7F94  
                                                           ___flneg@f1 0002  
                                       ??_my_high_priority_isr_routine 0001  
                                                        ___rparam_used 000001  
                                  __end_of_my_low_priority_isr_routine 002A  
                                          _my_low_priority_isr_routine 0018  
                                                           ___fltol@f1 0072  
                                                 _UART_SendIntToString 3838  
                                                       __pcstackCOMRAM 0001  
                                                        __end_of_lg2_h 062D  
                                                        __end_of_lg2_l 0629  
                                                        __end_of_fabsf 05D4  
                                                        __end_of_ivln2 061D  
                                                        __end_of_two24 0669  
                                                        __end_of_sqrtf 3172  
                                                           __end_of_L1 065D  
                                                           __end_of_L2 0659  
                                                           __end_of_L3 0655  
                                                           __end_of_L4 0651  
                                                           __end_of_L5 064D  
                                                           __end_of_L6 0649  
                                                           __end_of_P1 0645  
                                                           __end_of_P2 0641  
                                                           __end_of_P3 063D  
                                                           __end_of_P4 0639  
                                                           __end_of_P5 0635  
                                                           __end_of_bp 0671  
                                                           __end_of_cp 0621  
                                                           ??_ADC_Init 0002  
                                                           ??_ADC_Read 0004  
                                                              ??_fabsf 0006  
                                                              ??_sqrtf 005C  
                                                           __pbssBANK0 00C2  
                                                ?_UART_SendIntToString 00A8  
                                                              ?___flge 004C  
                                                              ?___wmul 0002  
                                                            ?___xxtofl 0002  
                                                              __Hparam 0000  
                                                              __Lparam 0000  
                                                   UART_SendString@str 0002  
                                                      __size_of___flge 00E0  
                                                              ___fladd 34F4  
                                                              ___fldiv 3AFC  
                                                              ___flneg 7FCC  
                                                              ___flmul 3172  
                                                              ___flsub 3FAE  
                                                              ___fltol 035A  
                                                              ___lldiv 042E  
                                                      __size_of___wmul 002A  
                                                         __psmallconst 0600  
                                                              __pcinit 7F86  
                                                              __ramtop 0600  
                                                              __ptext0 018A  
                                                              __ptext1 0562  
                                                              __ptext2 3838  
                                                              __ptext3 068E  
                                                              __ptext4 2D18  
                                                              __ptext5 7FA6  
                                                              __ptext6 027A  
                                                              __ptext7 3DBC  
                                                              __ptext8 3172  
                                                              __ptext9 059C  
                                             UART_SendIntToString@data 00A8  
                                                              _ivln2_h 0671  
                                                              _ivln2_l 0615  
                                                           ??___xxtofl 0006  
                                                              _scalbnf 3DBC  
                                            UART_SendIntToString@data1 00AF  
                                                              main@val 00C0  
                                                       __pintcode_body 3FF8  
                                            UART_SendIntToString@h_val 00B5  
                                                 end_of_initialization 7F94  
                                               ??_UART_SendIntToString 007C  
                                                              int_func 3FF8  
                                                      ___lldiv@divisor 0006  
                                                      ___lldiv@counter 000E  
                                             __size_of_UART_SendString 003A  
                                                              powf@p_h 019C  
                                                              powf@p_l 0164  
                                                              powf@s_h 016C  
                                                              powf@t_h 0168  
                                                              powf@s_l 0130  
                                                              powf@t_l 0134  
                                                              powf@z_h 0120  
                                                              powf@z_l 0124  
                                                              sqrtf@ix 00A4  
                                                            _UART_Init 04BE  
                                                          ___fladd@grs 0011  
                                                        ___xxtofl@sign 000A  
                                                          ___fldiv@grs 0046  
                                                          ___fldiv@rem 003F  
                                                    __size_of_ADC_Init 0018  
                                                    __size_of_ADC_Read 0044  
                                                          ___flmul@grs 001F  
                                                       __end_of___flge 035A  
                                                       __end_of___wmul 05FE  
                                                           ?_UART_Init 000F  
                                                  start_initialization 7F86  
                                                          __end_of_lg2 0631  
                                                          __end_of_ovt 0625  
                                                             ??___flge 0054  
                                                             ??___wmul 0006  
                                               __size_of_UART_SendChar 0012  
                                                       ADC_Read@retval 0007  
                                                    ??_UART_SendString 0004  
                                                            ___fladd@a 0006  
                                                            ___fladd@b 0002  
                                                            ___fldiv@a 0037  
                                                            ___fldiv@b 0033  
                                                            ___flmul@a 0016  
                                                            ___flmul@b 0012  
                                                            ___flsub@a 002F  
                                                            ___flsub@b 002B  
                                                        __pcstackBANK0 0080  
                                                        __pcstackBANK1 0100  
                                                    __end_ofsqrtf@tiny 0615  
                                                    __size_of___xxtofl 015C  
                                                            __pintcode 0008  
                                                             ?___fladd 0002  
                                                             ?___fldiv 0033  
                                                             ?___flneg 0002  
                                                             ?___flmul 0012  
                                                             ?___flsub 002B  
                                                             ?___fltol 0072  
                                                             ?___lldiv 0002  
                                                          __pintcodelo 0018  
                                                          ??_UART_Init 0011  
                                                            fabsf@F463 00C2  
                                                          __smallconst 0600  
                                                             ?_scalbnf 002B  
                                                             _ADC_Init 7F6E  
                                                             _ADC_Read 051E  
                                                       __size_of_fabsf 0038  
                                                       __size_of_sqrtf 045A  
                                                        _UART_SendChar 7F5C  
                                              UART_SendIntToString@cnt 00BA  
                                                       ___wmul@product 0006  
                                                           powf@yisint 0150  
                                                    UART_Init@baudrate 000F  
                                                    ___wmul@multiplier 0002  
                                                       ?_UART_SendChar 0001  
                                        __size_of_UART_SendIntToString 02C4  
                                         ?_my_low_priority_isr_routine 0001  
                                                             __Hrparam 0000  
                                                             __Lrparam 0000  
                                                         __Lsmallconst 0600  
                                                     __size_of___fladd 0344  
                                                     __size_of___fldiv 02C0  
                                                     __size_of___flneg 0034  
                                                     __size_of___flmul 0382  
                                                     __size_of___flsub 004A  
                                                     __size_of___fltol 00D4  
                                                     __size_of___lldiv 0090  
                                                             ___xxtofl 002E  
                                                     __size_of_scalbnf 01F2  
                                                             __ptext10 002E  
                                                             __ptext11 3FAE  
                                                             __ptext20 051E  
                                                             __ptext12 34F4  
                                                             __ptext21 7F6E  
                                                             __ptext13 7FCC  
                                                             __ptext14 3AFC  
                                                             __ptext15 05D4  
                                                             __ptext16 035A  
                                                             __ptext17 7F5C  
                                                             __ptext18 04BE  
                                                             __ptext19 042E  
                                                        __size_of_main 00F0  
                                                        __size_of_nanf 0026  
                                                        __size_of_powf 268A  
                                                             _powf$880 0158  
                                                             _powf$873 01A4  
                                                             _powf$881 013C  
                                                             _powf$874 0154  
                                                             _powf$882 0140  
                                                             _powf$875 0148  
                                                             _powf$883 0108  
                                                             _powf$876 0194  
                                                             _powf$884 010C  
                                                             _powf$877 0138  
                                                             _powf$885 0110  
                                                             _powf$886 0114  
                                                             _powf$878 0100  
                                                             _powf$887 0118  
                                                             _powf$879 0104  
                                                      _UART_SendString 0562  
                                                 powf@__xc8_float_word 01B8  
                                        ??_my_low_priority_isr_routine 0001  
                                                             int$flags 007E  
                                                             main@val1 00BE  
                                                      ??_UART_SendChar 0002  
                                                             scalbnf@n 002F  
                                                             scalbnf@u 0035  
                                                             scalbnf@x 002B  
                                                             scalbnf@y 0039  
                                                             intlevel1 05FE  
                                                             intlevel2 05FE  
                                                            sqrtf@tiny 0611  
                                                     ___lldiv@dividend 0002  
                                                     ___lldiv@quotient 000A  
                                 __size_of_my_low_priority_isr_routine 0012  
                                                        ___fladd@signs 000E  
                                              __end_of_UART_SendString 059C  
                                                sqrtf@__xc8_float_word 008C  
                                                         ___fladd@aexp 000F  
                                                         ___fladd@bexp 0010  
