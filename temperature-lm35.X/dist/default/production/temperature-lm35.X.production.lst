

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Mar 14 07:13:22 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15  0000                     
    16                           ; Version 2.05
    17                           ; Generated 20/12/2018 GMT
    18                           ; 
    19                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F452 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _TXREG	set	4013
    51  0000                     _SPBRG	set	4015
    52  0000                     _TXSTA	set	4012
    53  0000                     _TRISC	set	3988
    54  0000                     _RCSTA	set	4011
    55                           
    56                           	psect	smallconst
    57  000600                     __psmallconst:
    58                           	opt callstack 0
    59  000600  00                 	db	0
    60  000601                     STR_1:
    61  000601  44                 	db	68	;'D'
    62  000602  69                 	db	105	;'i'
    63  000603  70                 	db	112	;'p'
    64  000604  73                 	db	115	;'s'
    65  000605  00                 	db	0
    66                           
    67                           ; #config settings
    68  000606  00                 	db	0	; dummy byte at the end
    69  0000                     
    70                           	psect	cinit
    71  00079A                     __pcinit:
    72                           	opt callstack 0
    73  00079A                     start_initialization:
    74                           	opt callstack 0
    75  00079A                     __initialization:
    76                           	opt callstack 0
    77  00079A                     end_of_initialization:
    78                           	opt callstack 0
    79  00079A                     __end_of__initialization:
    80                           	opt callstack 0
    81  00079A  0E00               	movlw	low (__Lsmallconst shr (0+16))
    82  00079C  6EF8               	movwf	tblptru,c
    83  00079E  0E06               	movlw	high __Lsmallconst
    84  0007A0  6EF7               	movwf	tblptrh,c
    85  0007A2  0100               	movlb	0
    86  0007A4  EF7C  F003         	goto	_main	;jump to C main() function
    87                           
    88                           	psect	cstackCOMRAM
    89  000001                     __pcstackCOMRAM:
    90                           	opt callstack 0
    91  000001                     ?___lldiv:
    92                           	opt callstack 0
    93  000001                     UART_SendChar@data:
    94                           	opt callstack 0
    95  000001                     UART_SendString@str:
    96                           	opt callstack 0
    97  000001                     ___lldiv@dividend:
    98                           	opt callstack 0
    99                           
   100                           ; 4 bytes @ 0x0
   101  000001                     	ds	2
   102  000003                     ??_UART_SendString:
   103                           
   104                           ; 1 bytes @ 0x2
   105  000003                     	ds	2
   106  000005                     ___lldiv@divisor:
   107                           	opt callstack 0
   108                           
   109                           ; 4 bytes @ 0x4
   110  000005                     	ds	4
   111  000009                     ___lldiv@quotient:
   112                           	opt callstack 0
   113                           
   114                           ; 4 bytes @ 0x8
   115  000009                     	ds	4
   116  00000D                     ___lldiv@counter:
   117                           	opt callstack 0
   118                           
   119                           ; 1 bytes @ 0xC
   120  00000D                     	ds	1
   121  00000E                     UART_Init@baudrate:
   122                           	opt callstack 0
   123                           
   124                           ; 2 bytes @ 0xD
   125  00000E                     	ds	2
   126  000010                     ??_UART_Init:
   127                           
   128                           ; 1 bytes @ 0xF
   129  000010                     	ds	4
   130  000014                     
   131                           ; 2 bytes @ 0x13
   132  000014                     	ds	2
   133  000016                     
   134                           ; 3 bytes @ 0x15
   135  000016                     	ds	3
   136  000019                     ??_main:
   137                           
   138                           ; 1 bytes @ 0x18
   139  000019                     	ds	2
   140                           
   141 ;;
   142 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   143 ;;
   144 ;; *************** function _main *****************
   145 ;; Defined at:
   146 ;;		line 18 in file "newmain.c"
   147 ;; Parameters:    Size  Location     Type
   148 ;;  argc            2   19[COMRAM] int 
   149 ;;  argv            3   21[COMRAM] PTR PTR unsigned char 
   150 ;; Auto vars:     Size  Location     Type
   151 ;;		None
   152 ;; Return value:  Size  Location     Type
   153 ;;                  2   19[COMRAM] int 
   154 ;; Registers used:
   155 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   156 ;; Tracked objects:
   157 ;;		On entry : 0/0
   158 ;;		On exit  : 0/0
   159 ;;		Unchanged: 0/0
   160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   161 ;;      Params:         5       0       0       0       0       0       0
   162 ;;      Locals:         0       0       0       0       0       0       0
   163 ;;      Temps:          2       0       0       0       0       0       0
   164 ;;      Totals:         7       0       0       0       0       0       0
   165 ;;Total ram usage:        7 bytes
   166 ;; Hardware stack levels required when called:    2
   167 ;; This function calls:
   168 ;;		_UART_Init
   169 ;;		_UART_SendChar
   170 ;;		_UART_SendString
   171 ;; This function is called by:
   172 ;;		Startup code after reset
   173 ;; This function uses a non-reentrant model
   174 ;;
   175                           
   176                           	psect	text0
   177  0006F8                     __ptext0:
   178                           	opt callstack 0
   179  0006F8                     _main:
   180                           	opt callstack 0
   181  0006F8  FFFF               	dw	65535	; assembler added errata NOP
   182                           
   183                           ;newmain.c: 19:     UART_Init(9600);
   184                           
   185                           ;incstack = 0
   186  0006FA  0E25               	movlw	37
   187  0006FC  6E0F               	movwf	UART_Init@baudrate+1,c
   188  0006FE  0E80               	movlw	128
   189  000700  6E0E               	movwf	UART_Init@baudrate,c
   190  000702  EC4C  F003         	call	_UART_Init	;wreg free
   191  000706                     l812:
   192  000706  FFFF               	dw	65535	; assembler added errata NOP
   193                           
   194                           ;newmain.c: 21:     {;newmain.c: 22:         UART_SendChar('A');
   195  000708  0E41               	movlw	65
   196  00070A  ECD4  F003         	call	_UART_SendChar
   197                           
   198                           ;newmain.c: 23:         _delay((unsigned long)((100)*(8000000UL/4000.0)));
   199  00070E  0E01               	movlw	1
   200  000710  6E1A               	movwf	(??_main+1)& (0+255),c
   201  000712  0EC3               	movlw	195
   202  000714  6E19               	movwf	??_main& (0+255),c
   203  000716  0EED               	movlw	237
   204  000718                     u117:
   205  000718  FFFF               	dw	65535	; errata NOP
   206  00071A  2EE8               	decfsz	wreg,f,c
   207  00071C  D7FD               	bra	u117
   208  00071E  2E19               	decfsz	??_main& (0+255),f,c
   209  000720  D7FB               	bra	u117
   210  000722  2E1A               	decfsz	(??_main+1)& (0+255),f,c
   211  000724  D7F9               	bra	u117
   212                           
   213                           ;newmain.c: 24:         UART_SendString("Dips");
   214  000726  0E01               	movlw	low STR_1
   215  000728  6E01               	movwf	UART_SendString@str,c
   216  00072A  0E06               	movlw	high STR_1
   217  00072C  6E02               	movwf	UART_SendString@str+1,c
   218  00072E  ECA6  F003         	call	_UART_SendString	;wreg free
   219                           
   220                           ;newmain.c: 25:         _delay((unsigned long)((1000)*(8000000UL/4000.0)));
   221  000732  0E08               	movlw	8
   222  000734  6E1A               	movwf	(??_main+1)& (0+255),c
   223  000736  0E9E               	movlw	158
   224  000738  6E19               	movwf	??_main& (0+255),c
   225  00073A  0E4C               	movlw	76
   226  00073C                     u127:
   227  00073C  FFFF               	dw	65535	; errata NOP
   228  00073E  2EE8               	decfsz	wreg,f,c
   229  000740  D7FD               	bra	u127
   230  000742  2E19               	decfsz	??_main& (0+255),f,c
   231  000744  D7FB               	bra	u127
   232  000746  2E1A               	decfsz	(??_main+1)& (0+255),f,c
   233  000748  D7F9               	bra	u127
   234  00074A  D7DD               	goto	l812
   235  00074C                     __end_of_main:
   236                           	opt callstack 0
   237                           
   238 ;; *************** function _UART_SendString *****************
   239 ;; Defined at:
   240 ;;		line 32 in file "./uart.h"
   241 ;; Parameters:    Size  Location     Type
   242 ;;  str             2    0[COMRAM] PTR unsigned char 
   243 ;;		 -> STR_1(5), 
   244 ;; Auto vars:     Size  Location     Type
   245 ;;		None
   246 ;; Return value:  Size  Location     Type
   247 ;;                  1    wreg      void 
   248 ;; Registers used:
   249 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   250 ;; Tracked objects:
   251 ;;		On entry : 0/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   255 ;;      Params:         2       0       0       0       0       0       0
   256 ;;      Locals:         0       0       0       0       0       0       0
   257 ;;      Temps:          2       0       0       0       0       0       0
   258 ;;      Totals:         4       0       0       0       0       0       0
   259 ;;Total ram usage:        4 bytes
   260 ;; Hardware stack levels used:    1
   261 ;; This function calls:
   262 ;;		Nothing
   263 ;; This function is called by:
   264 ;;		_main
   265 ;; This function uses a non-reentrant model
   266 ;;
   267                           
   268                           	psect	text1
   269  00074C                     __ptext1:
   270                           	opt callstack 0
   271  00074C                     _UART_SendString:
   272                           	opt callstack 0
   273  00074C  FFFF               	dw	65535	; assembler added errata NOP
   274                           
   275                           ;./uart.h: 32: void UART_SendString(char *str);./uart.h: 33: {;./uart.h: 34:     while(*
      +                          str!='\0')
   276                           
   277                           ;incstack = 0
   278  00074E  D017               	goto	l808
   279  000750                     l802:
   280  000750  FFFF               	dw	65535	; assembler added errata NOP
   281                           
   282                           ;./uart.h: 35:     {;./uart.h: 36:     TXREG=*str;
   283  000752  C001  FFF6         	movff	UART_SendString@str,tblptrl
   284  000756  C002  FFF7         	movff	UART_SendString@str+1,tblptrh
   285  00075A                     	if	0	;tblptru may be non-zero
   286  00075A                     	endif
   287  00075A                     	if	0	;tblptru may be non-zero
   288  00075A                     	endif
   289  00075A  0008               	tblrd		*
   290  00075C  FFFF               	dw	65535	; errata NOP
   291  00075E  CFF5 FFAD          	movff	tablat,4013	;volatile
   292                           
   293                           ;./uart.h: 37:     _delay((unsigned long)((100)*(8000000UL/4000.0)));
   294  000762  0E01               	movlw	1
   295  000764  6E04               	movwf	(??_UART_SendString+1)& (0+255),c
   296  000766  0EC3               	movlw	195
   297  000768  6E03               	movwf	??_UART_SendString& (0+255),c
   298  00076A  0EED               	movlw	237
   299  00076C                     u137:
   300  00076C  FFFF               	dw	65535	; errata NOP
   301  00076E  2EE8               	decfsz	wreg,f,c
   302  000770  D7FD               	bra	u137
   303  000772  2E03               	decfsz	??_UART_SendString& (0+255),f,c
   304  000774  D7FB               	bra	u137
   305  000776  2E04               	decfsz	(??_UART_SendString+1)& (0+255),f,c
   306  000778  D7F9               	bra	u137
   307                           
   308                           ;./uart.h: 38:     str++;
   309  00077A  4A01               	infsnz	UART_SendString@str,f,c
   310  00077C  2A02               	incf	UART_SendString@str+1,f,c
   311  00077E                     l808:
   312  00077E  FFFF               	dw	65535	; assembler added errata NOP
   313                           
   314                           ;./uart.h: 34:     while(*str!='\0')
   315  000780  C001  FFF6         	movff	UART_SendString@str,tblptrl
   316  000784  C002  FFF7         	movff	UART_SendString@str+1,tblptrh
   317  000788                     	if	0	;tblptru may be non-zero
   318  000788                     	endif
   319  000788                     	if	0	;tblptru may be non-zero
   320  000788                     	endif
   321  000788  0008               	tblrd		*
   322  00078A  FFFF               	dw	65535	; errata NOP
   323  00078C  50F5               	movf	tablat,w,c
   324  00078E  0900               	iorlw	0
   325  000790  B4D8               	btfsc	status,2,c
   326  000792  0012               	return		;funcret
   327  000794  FFFF               	dw	65535	; assembler added errata NOP
   328  000796  D7DC               	goto	l802
   329  000798  FFFF               	dw	65535	; errata NOP
   330  00079A                     __end_of_UART_SendString:
   331                           	opt callstack 0
   332                           
   333 ;; *************** function _UART_SendChar *****************
   334 ;; Defined at:
   335 ;;		line 27 in file "./uart.h"
   336 ;; Parameters:    Size  Location     Type
   337 ;;  data            1    wreg     unsigned char 
   338 ;; Auto vars:     Size  Location     Type
   339 ;;  data            1    0[COMRAM] unsigned char 
   340 ;; Return value:  Size  Location     Type
   341 ;;                  1    wreg      void 
   342 ;; Registers used:
   343 ;;		wreg
   344 ;; Tracked objects:
   345 ;;		On entry : 0/0
   346 ;;		On exit  : 0/0
   347 ;;		Unchanged: 0/0
   348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   349 ;;      Params:         0       0       0       0       0       0       0
   350 ;;      Locals:         1       0       0       0       0       0       0
   351 ;;      Temps:          0       0       0       0       0       0       0
   352 ;;      Totals:         1       0       0       0       0       0       0
   353 ;;Total ram usage:        1 bytes
   354 ;; Hardware stack levels used:    1
   355 ;; This function calls:
   356 ;;		Nothing
   357 ;; This function is called by:
   358 ;;		_main
   359 ;; This function uses a non-reentrant model
   360 ;;
   361                           
   362                           	psect	text2
   363  0007A8                     __ptext2:
   364                           	opt callstack 0
   365  0007A8                     _UART_SendChar:
   366                           	opt callstack 0
   367  0007A8  FFFF               	dw	65535	; assembler added errata NOP
   368                           
   369                           ;incstack = 0
   370                           ;UART_SendChar@data stored from wreg
   371  0007AA  6E01               	movwf	UART_SendChar@data,c
   372                           
   373                           ;./uart.h: 27: void UART_SendChar(unsigned char data);./uart.h: 28: {;./uart.h: 29:     
      +                          TXREG=data;
   374  0007AC  C001  FFAD         	movff	UART_SendChar@data,4013	;volatile
   375  0007B0  0012               	return		;funcret
   376  0007B2  FFFF               	dw	65535	; errata NOP
   377  0007B4                     __end_of_UART_SendChar:
   378                           	opt callstack 0
   379                           
   380 ;; *************** function _UART_Init *****************
   381 ;; Defined at:
   382 ;;		line 15 in file "./uart.h"
   383 ;; Parameters:    Size  Location     Type
   384 ;;  baudrate        2   13[COMRAM] int 
   385 ;; Auto vars:     Size  Location     Type
   386 ;;		None
   387 ;; Return value:  Size  Location     Type
   388 ;;                  1    wreg      void 
   389 ;; Registers used:
   390 ;;		wreg, status,2, status,0, cstack
   391 ;; Tracked objects:
   392 ;;		On entry : 0/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   396 ;;      Params:         2       0       0       0       0       0       0
   397 ;;      Locals:         0       0       0       0       0       0       0
   398 ;;      Temps:          4       0       0       0       0       0       0
   399 ;;      Totals:         6       0       0       0       0       0       0
   400 ;;Total ram usage:        6 bytes
   401 ;; Hardware stack levels used:    1
   402 ;; Hardware stack levels required when called:    1
   403 ;; This function calls:
   404 ;;		___lldiv
   405 ;; This function is called by:
   406 ;;		_main
   407 ;; This function uses a non-reentrant model
   408 ;;
   409                           
   410                           	psect	text3
   411  000698                     __ptext3:
   412                           	opt callstack 0
   413  000698                     _UART_Init:
   414                           	opt callstack 0
   415  000698  FFFF               	dw	65535	; assembler added errata NOP
   416                           
   417                           ;./uart.h: 15: void UART_Init(int baudrate);./uart.h: 16: {;./uart.h: 17:    RCSTA |=(1<
      +                          <7);
   418                           
   419                           ;incstack = 0
   420  00069A  8EAB               	bsf	4011,7,c	;volatile
   421                           
   422                           ;./uart.h: 18:    TRISC &=~(1<<6);
   423  00069C  9C94               	bcf	3988,6,c	;volatile
   424                           
   425                           ;./uart.h: 19:    TRISC |=(1<<7);
   426  00069E  8E94               	bsf	3988,7,c	;volatile
   427                           
   428                           ;./uart.h: 20:    TXSTA |=((1<<5)|(1<<2));
   429  0006A0  0E24               	movlw	36
   430  0006A2  12AC               	iorwf	4012,f,c	;volatile
   431                           
   432                           ;./uart.h: 21:    TXSTA &=~(1<<4);
   433  0006A4  98AC               	bcf	4012,4,c	;volatile
   434                           
   435                           ;./uart.h: 22:    RCSTA |=(1<<7);
   436  0006A6  8EAB               	bsf	4011,7,c	;volatile
   437                           
   438                           ;./uart.h: 23:    SPBRG=(unsigned char)((8000000UL/(16*(unsigned long)(baudrate)))-1);
   439  0006A8  0E00               	movlw	0
   440  0006AA  6E01               	movwf	___lldiv@dividend,c
   441  0006AC  0E12               	movlw	18
   442  0006AE  6E02               	movwf	___lldiv@dividend+1,c
   443  0006B0  0E7A               	movlw	122
   444  0006B2  6E03               	movwf	___lldiv@dividend+2,c
   445  0006B4  0E00               	movlw	0
   446  0006B6  6E04               	movwf	___lldiv@dividend+3,c
   447  0006B8  C00E  F010         	movff	UART_Init@baudrate,??_UART_Init
   448  0006BC  C00F  F011         	movff	UART_Init@baudrate+1,??_UART_Init+1
   449  0006C0  0E00               	movlw	0
   450  0006C2  BE11               	btfsc	(??_UART_Init+1)& (0+255),7,c
   451  0006C4  0EFF               	movlw	255
   452  0006C6  6E12               	movwf	(??_UART_Init+2)& (0+255),c
   453  0006C8  6E13               	movwf	(??_UART_Init+3)& (0+255),c
   454  0006CA  0E04               	movlw	4
   455  0006CC                     u95:
   456  0006CC  FFFF               	dw	65535	; assembler added errata NOP
   457  0006CE  90D8               	bcf	status,0,c
   458  0006D0  3610               	rlcf	??_UART_Init,f,c
   459  0006D2  3611               	rlcf	??_UART_Init+1,f,c
   460  0006D4  3612               	rlcf	??_UART_Init+2,f,c
   461  0006D6  3613               	rlcf	??_UART_Init+3,f,c
   462  0006D8  2EE8               	decfsz	wreg,f,c
   463  0006DA  D7F8               	goto	u95
   464  0006DC  C010  F005         	movff	??_UART_Init,___lldiv@divisor
   465  0006E0  C011  F006         	movff	??_UART_Init+1,___lldiv@divisor+1
   466  0006E4  C012  F007         	movff	??_UART_Init+2,___lldiv@divisor+2
   467  0006E8  C013  F008         	movff	??_UART_Init+3,___lldiv@divisor+3
   468  0006EC  EC04  F003         	call	___lldiv	;wreg free
   469  0006F0  0401               	decf	?___lldiv,w,c
   470  0006F2  6EAF               	movwf	4015,c	;volatile
   471  0006F4  0012               	return		;funcret
   472  0006F6  FFFF               	dw	65535	; errata NOP
   473  0006F8                     __end_of_UART_Init:
   474                           	opt callstack 0
   475                           
   476 ;; *************** function ___lldiv *****************
   477 ;; Defined at:
   478 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;  dividend        4    0[COMRAM] unsigned long 
   481 ;;  divisor         4    4[COMRAM] unsigned long 
   482 ;; Auto vars:     Size  Location     Type
   483 ;;  quotient        4    8[COMRAM] unsigned long 
   484 ;;  counter         1   12[COMRAM] unsigned char 
   485 ;; Return value:  Size  Location     Type
   486 ;;                  4    0[COMRAM] unsigned long 
   487 ;; Registers used:
   488 ;;		wreg, status,2, status,0
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   494 ;;      Params:         8       0       0       0       0       0       0
   495 ;;      Locals:         5       0       0       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0       0       0
   497 ;;      Totals:        13       0       0       0       0       0       0
   498 ;;Total ram usage:       13 bytes
   499 ;; Hardware stack levels used:    1
   500 ;; This function calls:
   501 ;;		Nothing
   502 ;; This function is called by:
   503 ;;		_UART_Init
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           	psect	text4
   508  000608                     __ptext4:
   509                           	opt callstack 0
   510  000608                     ___lldiv:
   511                           	opt callstack 0
   512  000608  FFFF               	dw	65535	; assembler added errata NOP
   513                           
   514                           ;incstack = 0
   515  00060A  0E00               	movlw	0
   516  00060C  6E09               	movwf	___lldiv@quotient,c
   517  00060E  0E00               	movlw	0
   518  000610  6E0A               	movwf	___lldiv@quotient+1,c
   519  000612  0E00               	movlw	0
   520  000614  6E0B               	movwf	___lldiv@quotient+2,c
   521  000616  0E00               	movlw	0
   522  000618  6E0C               	movwf	___lldiv@quotient+3,c
   523  00061A  5005               	movf	___lldiv@divisor,w,c
   524  00061C  1006               	iorwf	___lldiv@divisor+1,w,c
   525  00061E  1007               	iorwf	___lldiv@divisor+2,w,c
   526  000620  1008               	iorwf	___lldiv@divisor+3,w,c
   527  000622  B4D8               	btfsc	status,2,c
   528  000624  D02E               	goto	l68
   529  000626  0E01               	movlw	1
   530  000628  6E0D               	movwf	___lldiv@counter,c
   531  00062A  D007               	goto	l776
   532  00062C                     l774:
   533  00062C  FFFF               	dw	65535	; assembler added errata NOP
   534  00062E  90D8               	bcf	status,0,c
   535  000630  3605               	rlcf	___lldiv@divisor,f,c
   536  000632  3606               	rlcf	___lldiv@divisor+1,f,c
   537  000634  3607               	rlcf	___lldiv@divisor+2,f,c
   538  000636  3608               	rlcf	___lldiv@divisor+3,f,c
   539  000638  2A0D               	incf	___lldiv@counter,f,c
   540  00063A                     l776:
   541  00063A  FFFF               	dw	65535	; assembler added errata NOP
   542  00063C  AE08               	btfss	___lldiv@divisor+3,7,c
   543  00063E  D7F6               	goto	l774
   544  000640                     u70:
   545  000640  FFFF               	dw	65535	; assembler added errata NOP
   546  000642  90D8               	bcf	status,0,c
   547  000644  3609               	rlcf	___lldiv@quotient,f,c
   548  000646  360A               	rlcf	___lldiv@quotient+1,f,c
   549  000648  360B               	rlcf	___lldiv@quotient+2,f,c
   550  00064A  360C               	rlcf	___lldiv@quotient+3,f,c
   551  00064C  5005               	movf	___lldiv@divisor,w,c
   552  00064E  5C01               	subwf	___lldiv@dividend,w,c
   553  000650  5006               	movf	___lldiv@divisor+1,w,c
   554  000652  5802               	subwfb	___lldiv@dividend+1,w,c
   555  000654  5007               	movf	___lldiv@divisor+2,w,c
   556  000656  5803               	subwfb	___lldiv@dividend+2,w,c
   557  000658  5008               	movf	___lldiv@divisor+3,w,c
   558  00065A  5804               	subwfb	___lldiv@dividend+3,w,c
   559  00065C  A0D8               	btfss	status,0,c
   560  00065E  D009               	goto	l786
   561  000660  5005               	movf	___lldiv@divisor,w,c
   562  000662  5E01               	subwf	___lldiv@dividend,f,c
   563  000664  5006               	movf	___lldiv@divisor+1,w,c
   564  000666  5A02               	subwfb	___lldiv@dividend+1,f,c
   565  000668  5007               	movf	___lldiv@divisor+2,w,c
   566  00066A  5A03               	subwfb	___lldiv@dividend+2,f,c
   567  00066C  5008               	movf	___lldiv@divisor+3,w,c
   568  00066E  5A04               	subwfb	___lldiv@dividend+3,f,c
   569  000670  8009               	bsf	___lldiv@quotient,0,c
   570  000672                     l786:
   571  000672  FFFF               	dw	65535	; assembler added errata NOP
   572  000674  90D8               	bcf	status,0,c
   573  000676  3208               	rrcf	___lldiv@divisor+3,f,c
   574  000678  3207               	rrcf	___lldiv@divisor+2,f,c
   575  00067A  3206               	rrcf	___lldiv@divisor+1,f,c
   576  00067C  3205               	rrcf	___lldiv@divisor,f,c
   577  00067E  2E0D               	decfsz	___lldiv@counter,f,c
   578  000680  D7DF               	goto	u70
   579  000682                     l68:
   580  000682  FFFF               	dw	65535	; assembler added errata NOP
   581  000684  C009  F001         	movff	___lldiv@quotient,?___lldiv
   582  000688  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
   583  00068C  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
   584  000690  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
   585  000694  0012               	return		;funcret
   586  000696  FFFF               	dw	65535	; errata NOP
   587  000698                     __end_of___lldiv:
   588                           	opt callstack 0
   589                           
   590                           	psect	rparam
   591  0000                     tosu	equ	0xFFF
   592                           tosh	equ	0xFFE
   593                           tosl	equ	0xFFD
   594                           stkptr	equ	0xFFC
   595                           pclatu	equ	0xFFB
   596                           pclath	equ	0xFFA
   597                           pcl	equ	0xFF9
   598                           tblptru	equ	0xFF8
   599                           tblptrh	equ	0xFF7
   600                           tblptrl	equ	0xFF6
   601                           tablat	equ	0xFF5
   602                           prodh	equ	0xFF4
   603                           prodl	equ	0xFF3
   604                           indf0	equ	0xFEF
   605                           postinc0	equ	0xFEE
   606                           postdec0	equ	0xFED
   607                           preinc0	equ	0xFEC
   608                           plusw0	equ	0xFEB
   609                           fsr0h	equ	0xFEA
   610                           fsr0l	equ	0xFE9
   611                           wreg	equ	0xFE8
   612                           indf1	equ	0xFE7
   613                           postinc1	equ	0xFE6
   614                           postdec1	equ	0xFE5
   615                           preinc1	equ	0xFE4
   616                           plusw1	equ	0xFE3
   617                           fsr1h	equ	0xFE2
   618                           fsr1l	equ	0xFE1
   619                           bsr	equ	0xFE0
   620                           indf2	equ	0xFDF
   621                           postinc2	equ	0xFDE
   622                           postdec2	equ	0xFDD
   623                           preinc2	equ	0xFDC
   624                           plusw2	equ	0xFDB
   625                           fsr2h	equ	0xFDA
   626                           fsr2l	equ	0xFD9
   627                           status	equ	0xFD8


Data Sizes:
    Strings     5
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     26      26
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    UART_SendString@str	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_UART_Init
    _UART_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     2      5     548
                                             19 COMRAM     7     2      5
                          _UART_Init
                      _UART_SendChar
                    _UART_SendString
 ---------------------------------------------------------------------------------
 (1) _UART_SendString                                      4     2      2     121
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _UART_SendChar                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            6     4      2     412
                                             13 COMRAM     6     4      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___lldiv
   _UART_SendChar
   _UART_SendString

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     1A      1A       1       20.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Mar 14 07:13:22 2019

                                                                   l68 0682  
                                                                   u70 0640  
                                                                   u95 06CC  
                                                          __CFG_BOR$ON 000000  
                                                         __CFG_CP0$OFF 000000  
                                                         __CFG_CP1$OFF 000000  
                                                         __CFG_CP2$OFF 000000  
                                                         __CFG_CP3$OFF 000000  
                                                          __CFG_OSC$HS 000000  
                                                          __CFG_LVP$ON 000000  
                                                                  l802 0750  
                                                                  l812 0706  
                                                                  l808 077E  
                                                                  l774 062C  
                                                                  l776 063A  
                                                                  l786 0672  
                                                         __CFG_CPB$OFF 000000  
                                                                  u117 0718  
                                                                  u127 073C  
                                                                  u137 076C  
                                                         __CFG_CPD$OFF 000000  
                                                         __CFG_BORV$20 000000  
                                                                  wreg 000FE8  
                                                         __CFG_WDT$OFF 000000  
                                                                 STR_1 0601  
                                                         __CFG_STVR$ON 000000  
                                                                 _main 06F8  
                                                                 start 0002  
                                                         ___param_bank 000000  
                                                        __CFG_OSCS$OFF 000000  
                                                    UART_SendChar@data 0001  
                                                                ?_main 0014  
                                                      __end_of___lldiv 0698  
                                                                _RCSTA 000FAB  
                                                                _SPBRG 000FAF  
                                                                _TRISC 000F94  
                                                                _TXREG 000FAD  
                                                                _TXSTA 000FAC  
                                                        __CFG_PWRT$OFF 000000  
                                                        __CFG_WRT0$OFF 000000  
                                                        __CFG_WRT1$OFF 000000  
                                                        __CFG_WRT2$OFF 000000  
                                                        __CFG_WRT3$OFF 000000  
                                                       __CFG_EBTR0$OFF 000000  
                                                       __CFG_EBTR1$OFF 000000  
                                                       __CFG_EBTR2$OFF 000000  
                                                       __CFG_EBTR3$OFF 000000  
                                                   __size_of_UART_Init 0060  
                                                        __CFG_WRTB$OFF 000000  
                                                        __CFG_WRTC$OFF 000000  
                                                        __CFG_WRTD$OFF 000000  
                                                       __CFG_EBTRB$OFF 000000  
                                                     ?_UART_SendString 0001  
                                                                tablat 000FF5  
                                                                status 000FD8  
                                                      __initialization 079A  
                                                         __end_of_main 074C  
                                                               ??_main 0019  
                                                        __activetblptr 000001  
                                                      __CFG_CCP2MUX$ON 000000  
                                                       __CFG_WDTPS$128 000000  
                                                    __end_of_UART_Init 06F8  
                                                            ??___lldiv 0009  
                                                         __mediumconst 0000  
                                                               tblptrh 000FF7  
                                                               tblptrl 000FF6  
                                                               tblptru 000FF8  
                                                __end_of_UART_SendChar 07B4  
                                                           __accesstop 0080  
                                              __end_of__initialization 079A  
                                                        ___rparam_used 000001  
                                                       __pcstackCOMRAM 0001  
                                                              __Hparam 0000  
                                                              __Lparam 0000  
                                                   UART_SendString@str 0001  
                                                              ___lldiv 0608  
                                                         __psmallconst 0600  
                                                              __pcinit 079A  
                                                              __ramtop 0600  
                                                              __ptext0 06F8  
                                                              __ptext1 074C  
                                                              __ptext2 07A8  
                                                              __ptext3 0698  
                                                              __ptext4 0608  
                                                 end_of_initialization 079A  
                                                      ___lldiv@divisor 0005  
                                                      ___lldiv@counter 000D  
                                             __size_of_UART_SendString 004E  
                                                            _UART_Init 0698  
                                                           ?_UART_Init 000E  
                                                  start_initialization 079A  
                                               __size_of_UART_SendChar 000C  
                                                    ??_UART_SendString 0003  
                                                             ?___lldiv 0001  
                                                          ??_UART_Init 0010  
                                                          __smallconst 0600  
                                                        _UART_SendChar 07A8  
                                                    UART_Init@baudrate 000E  
                                                       ?_UART_SendChar 0001  
                                                             __Hrparam 0000  
                                                             __Lrparam 0000  
                                                         __Lsmallconst 0600  
                                                     __size_of___lldiv 0090  
                                                        __size_of_main 0054  
                                                      _UART_SendString 074C  
                                                             main@argc 0014  
                                                             main@argv 0016  
                                                      ??_UART_SendChar 0001  
                                                     ___lldiv@dividend 0001  
                                                     ___lldiv@quotient 0009  
                                              __end_of_UART_SendString 079A  
