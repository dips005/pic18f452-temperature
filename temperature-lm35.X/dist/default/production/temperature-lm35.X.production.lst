

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Mar 14 07:02:56 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13  0000                     
    14                           ; Version 2.05
    15                           ; Generated 20/12/2018 GMT
    16                           ; 
    17                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F452 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _TXREG	set	4013
    49  0000                     _SPBRG	set	4015
    50  0000                     _TXSTA	set	4012
    51  0000                     _TRISC	set	3988
    52  0000                     _RCSTA	set	4011
    53                           
    54                           ; #config settings
    55  0000                     
    56                           	psect	cinit
    57  003ECC                     __pcinit:
    58                           	opt callstack 0
    59  003ECC                     start_initialization:
    60                           	opt callstack 0
    61  003ECC                     __initialization:
    62                           	opt callstack 0
    63  003ECC                     end_of_initialization:
    64                           	opt callstack 0
    65  003ECC                     __end_of__initialization:
    66                           	opt callstack 0
    67  003ECC  0100               	movlb	0
    68  003ECE  EF6F  F01F         	goto	_main	;jump to C main() function
    69                           
    70                           	psect	cstackCOMRAM
    71  000001                     __pcstackCOMRAM:
    72                           	opt callstack 0
    73  000001                     ?___lldiv:
    74                           	opt callstack 0
    75  000001                     UART_SendChar@data:
    76                           	opt callstack 0
    77  000001                     ___lldiv@dividend:
    78                           	opt callstack 0
    79                           
    80                           ; 4 bytes @ 0x0
    81  000001                     	ds	4
    82  000005                     ___lldiv@divisor:
    83                           	opt callstack 0
    84                           
    85                           ; 4 bytes @ 0x4
    86  000005                     	ds	4
    87  000009                     ___lldiv@quotient:
    88                           	opt callstack 0
    89                           
    90                           ; 4 bytes @ 0x8
    91  000009                     	ds	4
    92  00000D                     ___lldiv@counter:
    93                           	opt callstack 0
    94                           
    95                           ; 1 bytes @ 0xC
    96  00000D                     	ds	1
    97  00000E                     UART_Init@baudrate:
    98                           	opt callstack 0
    99                           
   100                           ; 2 bytes @ 0xD
   101  00000E                     	ds	2
   102  000010                     ??_UART_Init:
   103                           
   104                           ; 1 bytes @ 0xF
   105  000010                     	ds	4
   106  000014                     
   107                           ; 2 bytes @ 0x13
   108  000014                     	ds	2
   109  000016                     
   110                           ; 3 bytes @ 0x15
   111  000016                     	ds	3
   112  000019                     ??_main:
   113                           
   114                           ; 1 bytes @ 0x18
   115  000019                     	ds	2
   116                           
   117 ;;
   118 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   119 ;;
   120 ;; *************** function _main *****************
   121 ;; Defined at:
   122 ;;		line 18 in file "newmain.c"
   123 ;; Parameters:    Size  Location     Type
   124 ;;  argc            2   19[COMRAM] int 
   125 ;;  argv            3   21[COMRAM] PTR PTR unsigned char 
   126 ;; Auto vars:     Size  Location     Type
   127 ;;		None
   128 ;; Return value:  Size  Location     Type
   129 ;;                  2   19[COMRAM] int 
   130 ;; Registers used:
   131 ;;		wreg, status,2, status,0, cstack
   132 ;; Tracked objects:
   133 ;;		On entry : 0/0
   134 ;;		On exit  : 0/0
   135 ;;		Unchanged: 0/0
   136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   137 ;;      Params:         5       0       0       0       0       0       0
   138 ;;      Locals:         0       0       0       0       0       0       0
   139 ;;      Temps:          2       0       0       0       0       0       0
   140 ;;      Totals:         7       0       0       0       0       0       0
   141 ;;Total ram usage:        7 bytes
   142 ;; Hardware stack levels required when called:    2
   143 ;; This function calls:
   144 ;;		_UART_Init
   145 ;;		_UART_SendChar
   146 ;; This function is called by:
   147 ;;		Startup code after reset
   148 ;; This function uses a non-reentrant model
   149 ;;
   150                           
   151                           	psect	text0
   152  003EDE                     __ptext0:
   153                           	opt callstack 0
   154  003EDE                     _main:
   155                           	opt callstack 0
   156  003EDE  FFFF               	dw	65535	; assembler added errata NOP
   157                           
   158                           ;newmain.c: 19:     UART_Init(9600);
   159                           
   160                           ;incstack = 0
   161  003EE0  0E25               	movlw	37
   162  003EE2  6E0F               	movwf	UART_Init@baudrate+1,c
   163  003EE4  0E80               	movlw	128
   164  003EE6  6E0E               	movwf	UART_Init@baudrate,c
   165  003EE8  EC87  F01F         	call	_UART_Init	;wreg free
   166  003EEC                     l798:
   167  003EEC  FFFF               	dw	65535	; assembler added errata NOP
   168                           
   169                           ;newmain.c: 21:     {;newmain.c: 22:         UART_SendChar('A');
   170  003EEE  0E41               	movlw	65
   171  003EF0  EC69  F01F         	call	_UART_SendChar
   172                           
   173                           ;newmain.c: 23:         _delay((unsigned long)((100)*(8000000UL/4000.0)));
   174  003EF4  0E01               	movlw	1
   175  003EF6  6E1A               	movwf	(??_main+1)& (0+255),c
   176  003EF8  0EC3               	movlw	195
   177  003EFA  6E19               	movwf	??_main& (0+255),c
   178  003EFC  0EED               	movlw	237
   179  003EFE                     u107:
   180  003EFE  FFFF               	dw	65535	; errata NOP
   181  003F00  2EE8               	decfsz	wreg,f,c
   182  003F02  D7FD               	bra	u107
   183  003F04  2E19               	decfsz	??_main& (0+255),f,c
   184  003F06  D7FB               	bra	u107
   185  003F08  2E1A               	decfsz	(??_main+1)& (0+255),f,c
   186  003F0A  D7F9               	bra	u107
   187  003F0C  D7EF               	goto	l798
   188  003F0E                     __end_of_main:
   189                           	opt callstack 0
   190                           
   191 ;; *************** function _UART_SendChar *****************
   192 ;; Defined at:
   193 ;;		line 27 in file "./uart.h"
   194 ;; Parameters:    Size  Location     Type
   195 ;;  data            1    wreg     unsigned char 
   196 ;; Auto vars:     Size  Location     Type
   197 ;;  data            1    0[COMRAM] unsigned char 
   198 ;; Return value:  Size  Location     Type
   199 ;;                  1    wreg      void 
   200 ;; Registers used:
   201 ;;		wreg
   202 ;; Tracked objects:
   203 ;;		On entry : 0/0
   204 ;;		On exit  : 0/0
   205 ;;		Unchanged: 0/0
   206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   207 ;;      Params:         0       0       0       0       0       0       0
   208 ;;      Locals:         1       0       0       0       0       0       0
   209 ;;      Temps:          0       0       0       0       0       0       0
   210 ;;      Totals:         1       0       0       0       0       0       0
   211 ;;Total ram usage:        1 bytes
   212 ;; Hardware stack levels used:    1
   213 ;; This function calls:
   214 ;;		Nothing
   215 ;; This function is called by:
   216 ;;		_main
   217 ;; This function uses a non-reentrant model
   218 ;;
   219                           
   220                           	psect	text1
   221  003ED2                     __ptext1:
   222                           	opt callstack 0
   223  003ED2                     _UART_SendChar:
   224                           	opt callstack 0
   225  003ED2  FFFF               	dw	65535	; assembler added errata NOP
   226                           
   227                           ;incstack = 0
   228                           ;UART_SendChar@data stored from wreg
   229  003ED4  6E01               	movwf	UART_SendChar@data,c
   230                           
   231                           ;./uart.h: 27: void UART_SendChar(unsigned char data);./uart.h: 28: {;./uart.h: 29:     
      +                          TXREG=data;
   232  003ED6  C001  FFAD         	movff	UART_SendChar@data,4013	;volatile
   233  003EDA  0012               	return		;funcret
   234  003EDC  FFFF               	dw	65535	; errata NOP
   235  003EDE                     __end_of_UART_SendChar:
   236                           	opt callstack 0
   237                           
   238 ;; *************** function _UART_Init *****************
   239 ;; Defined at:
   240 ;;		line 15 in file "./uart.h"
   241 ;; Parameters:    Size  Location     Type
   242 ;;  baudrate        2   13[COMRAM] int 
   243 ;; Auto vars:     Size  Location     Type
   244 ;;		None
   245 ;; Return value:  Size  Location     Type
   246 ;;                  1    wreg      void 
   247 ;; Registers used:
   248 ;;		wreg, status,2, status,0, cstack
   249 ;; Tracked objects:
   250 ;;		On entry : 0/0
   251 ;;		On exit  : 0/0
   252 ;;		Unchanged: 0/0
   253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   254 ;;      Params:         2       0       0       0       0       0       0
   255 ;;      Locals:         0       0       0       0       0       0       0
   256 ;;      Temps:          4       0       0       0       0       0       0
   257 ;;      Totals:         6       0       0       0       0       0       0
   258 ;;Total ram usage:        6 bytes
   259 ;; Hardware stack levels used:    1
   260 ;; Hardware stack levels required when called:    1
   261 ;; This function calls:
   262 ;;		___lldiv
   263 ;; This function is called by:
   264 ;;		_main
   265 ;; This function uses a non-reentrant model
   266 ;;
   267                           
   268                           	psect	text2
   269  003F0E                     __ptext2:
   270                           	opt callstack 0
   271  003F0E                     _UART_Init:
   272                           	opt callstack 0
   273  003F0E  FFFF               	dw	65535	; assembler added errata NOP
   274                           
   275                           ;./uart.h: 15: void UART_Init(int baudrate);./uart.h: 16: {;./uart.h: 17:    RCSTA |=(1<
      +                          <7);
   276                           
   277                           ;incstack = 0
   278  003F10  8EAB               	bsf	4011,7,c	;volatile
   279                           
   280                           ;./uart.h: 18:    TRISC &=~(1<<6);
   281  003F12  9C94               	bcf	3988,6,c	;volatile
   282                           
   283                           ;./uart.h: 19:    TRISC |=(1<<7);
   284  003F14  8E94               	bsf	3988,7,c	;volatile
   285                           
   286                           ;./uart.h: 20:    TXSTA |=((1<<5)|(1<<2));
   287  003F16  0E24               	movlw	36
   288  003F18  12AC               	iorwf	4012,f,c	;volatile
   289                           
   290                           ;./uart.h: 21:    TXSTA &=~(1<<4);
   291  003F1A  98AC               	bcf	4012,4,c	;volatile
   292                           
   293                           ;./uart.h: 22:    RCSTA |=(1<<7);
   294  003F1C  8EAB               	bsf	4011,7,c	;volatile
   295                           
   296                           ;./uart.h: 23:    SPBRG=(unsigned char)((8000000UL/(16*(unsigned long)(baudrate)))-1);
   297  003F1E  0E00               	movlw	0
   298  003F20  6E01               	movwf	___lldiv@dividend,c
   299  003F22  0E12               	movlw	18
   300  003F24  6E02               	movwf	___lldiv@dividend+1,c
   301  003F26  0E7A               	movlw	122
   302  003F28  6E03               	movwf	___lldiv@dividend+2,c
   303  003F2A  0E00               	movlw	0
   304  003F2C  6E04               	movwf	___lldiv@dividend+3,c
   305  003F2E  C00E  F010         	movff	UART_Init@baudrate,??_UART_Init
   306  003F32  C00F  F011         	movff	UART_Init@baudrate+1,??_UART_Init+1
   307  003F36  0E00               	movlw	0
   308  003F38  BE11               	btfsc	(??_UART_Init+1)& (0+255),7,c
   309  003F3A  0EFF               	movlw	255
   310  003F3C  6E12               	movwf	(??_UART_Init+2)& (0+255),c
   311  003F3E  6E13               	movwf	(??_UART_Init+3)& (0+255),c
   312  003F40  0E04               	movlw	4
   313  003F42                     u95:
   314  003F42  FFFF               	dw	65535	; assembler added errata NOP
   315  003F44  90D8               	bcf	status,0,c
   316  003F46  3610               	rlcf	??_UART_Init,f,c
   317  003F48  3611               	rlcf	??_UART_Init+1,f,c
   318  003F4A  3612               	rlcf	??_UART_Init+2,f,c
   319  003F4C  3613               	rlcf	??_UART_Init+3,f,c
   320  003F4E  2EE8               	decfsz	wreg,f,c
   321  003F50  D7F8               	goto	u95
   322  003F52  C010  F005         	movff	??_UART_Init,___lldiv@divisor
   323  003F56  C011  F006         	movff	??_UART_Init+1,___lldiv@divisor+1
   324  003F5A  C012  F007         	movff	??_UART_Init+2,___lldiv@divisor+2
   325  003F5E  C013  F008         	movff	??_UART_Init+3,___lldiv@divisor+3
   326  003F62  ECB7  F01F         	call	___lldiv	;wreg free
   327  003F66  0401               	decf	?___lldiv,w,c
   328  003F68  6EAF               	movwf	4015,c	;volatile
   329  003F6A  0012               	return		;funcret
   330  003F6C  FFFF               	dw	65535	; errata NOP
   331  003F6E                     __end_of_UART_Init:
   332                           	opt callstack 0
   333                           
   334 ;; *************** function ___lldiv *****************
   335 ;; Defined at:
   336 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;  dividend        4    0[COMRAM] unsigned long 
   339 ;;  divisor         4    4[COMRAM] unsigned long 
   340 ;; Auto vars:     Size  Location     Type
   341 ;;  quotient        4    8[COMRAM] unsigned long 
   342 ;;  counter         1   12[COMRAM] unsigned char 
   343 ;; Return value:  Size  Location     Type
   344 ;;                  4    0[COMRAM] unsigned long 
   345 ;; Registers used:
   346 ;;		wreg, status,2, status,0
   347 ;; Tracked objects:
   348 ;;		On entry : 0/0
   349 ;;		On exit  : 0/0
   350 ;;		Unchanged: 0/0
   351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   352 ;;      Params:         8       0       0       0       0       0       0
   353 ;;      Locals:         5       0       0       0       0       0       0
   354 ;;      Temps:          0       0       0       0       0       0       0
   355 ;;      Totals:        13       0       0       0       0       0       0
   356 ;;Total ram usage:       13 bytes
   357 ;; Hardware stack levels used:    1
   358 ;; This function calls:
   359 ;;		Nothing
   360 ;; This function is called by:
   361 ;;		_UART_Init
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           	psect	text3
   366  003F6E                     __ptext3:
   367                           	opt callstack 0
   368  003F6E                     ___lldiv:
   369                           	opt callstack 0
   370  003F6E  FFFF               	dw	65535	; assembler added errata NOP
   371                           
   372                           ;incstack = 0
   373  003F70  0E00               	movlw	0
   374  003F72  6E09               	movwf	___lldiv@quotient,c
   375  003F74  0E00               	movlw	0
   376  003F76  6E0A               	movwf	___lldiv@quotient+1,c
   377  003F78  0E00               	movlw	0
   378  003F7A  6E0B               	movwf	___lldiv@quotient+2,c
   379  003F7C  0E00               	movlw	0
   380  003F7E  6E0C               	movwf	___lldiv@quotient+3,c
   381  003F80  5005               	movf	___lldiv@divisor,w,c
   382  003F82  1006               	iorwf	___lldiv@divisor+1,w,c
   383  003F84  1007               	iorwf	___lldiv@divisor+2,w,c
   384  003F86  1008               	iorwf	___lldiv@divisor+3,w,c
   385  003F88  B4D8               	btfsc	status,2,c
   386  003F8A  D02E               	goto	l68
   387  003F8C  0E01               	movlw	1
   388  003F8E  6E0D               	movwf	___lldiv@counter,c
   389  003F90  D007               	goto	l772
   390  003F92                     l770:
   391  003F92  FFFF               	dw	65535	; assembler added errata NOP
   392  003F94  90D8               	bcf	status,0,c
   393  003F96  3605               	rlcf	___lldiv@divisor,f,c
   394  003F98  3606               	rlcf	___lldiv@divisor+1,f,c
   395  003F9A  3607               	rlcf	___lldiv@divisor+2,f,c
   396  003F9C  3608               	rlcf	___lldiv@divisor+3,f,c
   397  003F9E  2A0D               	incf	___lldiv@counter,f,c
   398  003FA0                     l772:
   399  003FA0  FFFF               	dw	65535	; assembler added errata NOP
   400  003FA2  AE08               	btfss	___lldiv@divisor+3,7,c
   401  003FA4  D7F6               	goto	l770
   402  003FA6                     u70:
   403  003FA6  FFFF               	dw	65535	; assembler added errata NOP
   404  003FA8  90D8               	bcf	status,0,c
   405  003FAA  3609               	rlcf	___lldiv@quotient,f,c
   406  003FAC  360A               	rlcf	___lldiv@quotient+1,f,c
   407  003FAE  360B               	rlcf	___lldiv@quotient+2,f,c
   408  003FB0  360C               	rlcf	___lldiv@quotient+3,f,c
   409  003FB2  5005               	movf	___lldiv@divisor,w,c
   410  003FB4  5C01               	subwf	___lldiv@dividend,w,c
   411  003FB6  5006               	movf	___lldiv@divisor+1,w,c
   412  003FB8  5802               	subwfb	___lldiv@dividend+1,w,c
   413  003FBA  5007               	movf	___lldiv@divisor+2,w,c
   414  003FBC  5803               	subwfb	___lldiv@dividend+2,w,c
   415  003FBE  5008               	movf	___lldiv@divisor+3,w,c
   416  003FC0  5804               	subwfb	___lldiv@dividend+3,w,c
   417  003FC2  A0D8               	btfss	status,0,c
   418  003FC4  D009               	goto	l782
   419  003FC6  5005               	movf	___lldiv@divisor,w,c
   420  003FC8  5E01               	subwf	___lldiv@dividend,f,c
   421  003FCA  5006               	movf	___lldiv@divisor+1,w,c
   422  003FCC  5A02               	subwfb	___lldiv@dividend+1,f,c
   423  003FCE  5007               	movf	___lldiv@divisor+2,w,c
   424  003FD0  5A03               	subwfb	___lldiv@dividend+2,f,c
   425  003FD2  5008               	movf	___lldiv@divisor+3,w,c
   426  003FD4  5A04               	subwfb	___lldiv@dividend+3,f,c
   427  003FD6  8009               	bsf	___lldiv@quotient,0,c
   428  003FD8                     l782:
   429  003FD8  FFFF               	dw	65535	; assembler added errata NOP
   430  003FDA  90D8               	bcf	status,0,c
   431  003FDC  3208               	rrcf	___lldiv@divisor+3,f,c
   432  003FDE  3207               	rrcf	___lldiv@divisor+2,f,c
   433  003FE0  3206               	rrcf	___lldiv@divisor+1,f,c
   434  003FE2  3205               	rrcf	___lldiv@divisor,f,c
   435  003FE4  2E0D               	decfsz	___lldiv@counter,f,c
   436  003FE6  D7DF               	goto	u70
   437  003FE8                     l68:
   438  003FE8  FFFF               	dw	65535	; assembler added errata NOP
   439  003FEA  C009  F001         	movff	___lldiv@quotient,?___lldiv
   440  003FEE  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
   441  003FF2  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
   442  003FF6  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
   443  003FFA  0012               	return		;funcret
   444  003FFC  FFFF               	dw	65535	; errata NOP
   445  003FFE                     __end_of___lldiv:
   446                           	opt callstack 0
   447  003FFE  FFFF               	dw	65535	; assembler added errata NOP
   448                           
   449                           	psect	rparam
   450  0000                     tosu	equ	0xFFF
   451                           tosh	equ	0xFFE
   452                           tosl	equ	0xFFD
   453                           stkptr	equ	0xFFC
   454                           pclatu	equ	0xFFB
   455                           pclath	equ	0xFFA
   456                           pcl	equ	0xFF9
   457                           tblptru	equ	0xFF8
   458                           tblptrh	equ	0xFF7
   459                           tblptrl	equ	0xFF6
   460                           tablat	equ	0xFF5
   461                           prodh	equ	0xFF4
   462                           prodl	equ	0xFF3
   463                           indf0	equ	0xFEF
   464                           postinc0	equ	0xFEE
   465                           postdec0	equ	0xFED
   466                           preinc0	equ	0xFEC
   467                           plusw0	equ	0xFEB
   468                           fsr0h	equ	0xFEA
   469                           fsr0l	equ	0xFE9
   470                           wreg	equ	0xFE8
   471                           indf1	equ	0xFE7
   472                           postinc1	equ	0xFE6
   473                           postdec1	equ	0xFE5
   474                           preinc1	equ	0xFE4
   475                           plusw1	equ	0xFE3
   476                           fsr1h	equ	0xFE2
   477                           fsr1l	equ	0xFE1
   478                           bsr	equ	0xFE0
   479                           indf2	equ	0xFDF
   480                           postinc2	equ	0xFDE
   481                           postdec2	equ	0xFDD
   482                           preinc2	equ	0xFDC
   483                           plusw2	equ	0xFDB
   484                           fsr2h	equ	0xFDA
   485                           fsr2l	equ	0xFD9
   486                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     26      26
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_UART_Init
    _UART_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     2      5     427
                                             19 COMRAM     7     2      5
                          _UART_Init
                      _UART_SendChar
 ---------------------------------------------------------------------------------
 (1) _UART_SendChar                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            6     4      2     412
                                             13 COMRAM     6     4      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___lldiv
   _UART_SendChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     1A      1A       1       20.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Mar 14 07:02:56 2019

                                                                   l68 3FE8  
                                                                   u70 3FA6  
                                                                   u95 3F42  
                                                          __CFG_BOR$ON 000000  
                                                         __CFG_CP0$OFF 000000  
                                                         __CFG_CP1$OFF 000000  
                                                         __CFG_CP2$OFF 000000  
                                                         __CFG_CP3$OFF 000000  
                                                          __CFG_OSC$HS 000000  
                                                          __CFG_LVP$ON 000000  
                                                                  l770 3F92  
                                                                  l772 3FA0  
                                                                  l782 3FD8  
                                                                  l798 3EEC  
                                                         __CFG_CPB$OFF 000000  
                                                                  u107 3EFE  
                                                         __CFG_CPD$OFF 000000  
                                                         __CFG_BORV$20 000000  
                                                                  wreg 000FE8  
                                                         __CFG_WDT$OFF 000000  
                                                         __CFG_STVR$ON 000000  
                                                                 _main 3EDE  
                                                                 start 0002  
                                                         ___param_bank 000000  
                                                        __CFG_OSCS$OFF 000000  
                                                    UART_SendChar@data 0001  
                                                                ?_main 0014  
                                                      __end_of___lldiv 3FFE  
                                                                _RCSTA 000FAB  
                                                                _SPBRG 000FAF  
                                                                _TRISC 000F94  
                                                                _TXREG 000FAD  
                                                                _TXSTA 000FAC  
                                                        __CFG_PWRT$OFF 000000  
                                                        __CFG_WRT0$OFF 000000  
                                                        __CFG_WRT1$OFF 000000  
                                                        __CFG_WRT2$OFF 000000  
                                                        __CFG_WRT3$OFF 000000  
                                                       __CFG_EBTR0$OFF 000000  
                                                       __CFG_EBTR1$OFF 000000  
                                                       __CFG_EBTR2$OFF 000000  
                                                       __CFG_EBTR3$OFF 000000  
                                                   __size_of_UART_Init 0060  
                                                        __CFG_WRTB$OFF 000000  
                                                        __CFG_WRTC$OFF 000000  
                                                        __CFG_WRTD$OFF 000000  
                                                       __CFG_EBTRB$OFF 000000  
                                                                status 000FD8  
                                                      __initialization 3ECC  
                                                         __end_of_main 3F0E  
                                                               ??_main 0019  
                                                        __activetblptr 000000  
                                                      __CFG_CCP2MUX$ON 000000  
                                                       __CFG_WDTPS$128 000000  
                                                    __end_of_UART_Init 3F6E  
                                                            ??___lldiv 0009  
                                                __end_of_UART_SendChar 3EDE  
                                                           __accesstop 0080  
                                              __end_of__initialization 3ECC  
                                                        ___rparam_used 000001  
                                                       __pcstackCOMRAM 0001  
                                                              __Hparam 0000  
                                                              __Lparam 0000  
                                                              ___lldiv 3F6E  
                                                              __pcinit 3ECC  
                                                              __ramtop 0600  
                                                              __ptext0 3EDE  
                                                              __ptext1 3ED2  
                                                              __ptext2 3F0E  
                                                              __ptext3 3F6E  
                                                 end_of_initialization 3ECC  
                                                      ___lldiv@divisor 0005  
                                                      ___lldiv@counter 000D  
                                                            _UART_Init 3F0E  
                                                           ?_UART_Init 000E  
                                                  start_initialization 3ECC  
                                               __size_of_UART_SendChar 000C  
                                                             ?___lldiv 0001  
                                                          ??_UART_Init 0010  
                                                        _UART_SendChar 3ED2  
                                                    UART_Init@baudrate 000E  
                                                       ?_UART_SendChar 0001  
                                                             __Hrparam 0000  
                                                             __Lrparam 0000  
                                                     __size_of___lldiv 0090  
                                                        __size_of_main 0030  
                                                             main@argc 0014  
                                                             main@argv 0016  
                                                      ??_UART_SendChar 0001  
                                                     ___lldiv@dividend 0001  
                                                     ___lldiv@quotient 0009  
